U abort@@GLIBC_2.0
U access@@GLIBC_2.0
U __acosf_finite@@GLIBC_2.15
U __acos_finite@@GLIBC_2.15
U __asin_finite@@GLIBC_2.15
U __atan2f_finite@@GLIBC_2.15
U __atan2_finite@@GLIBC_2.15
U atan@@GLIBC_2.0
A __bss_start
U cbrtf@@GLIBC_2.0
U chdir@@GLIBC_2.0
U chmod@@GLIBC_2.0
U chown@@GLIBC_2.1
T ClearOpenGLEntryPoints
U closedir@@GLIBC_2.0
U CommandLine
U cos@@GLIBC_2.0
T CreateInterface
U __ctype_b_loc@@GLIBC_2.3
U __ctype_tolower_loc@@GLIBC_2.3
U __cxa_atexit@@GLIBC_2.1.3
U __cxa_call_unexpected@@CXXABI_1.3
w __cxa_finalize@@GLIBC_2.1.3
U __cxa_guard_abort@@CXXABI_1.3
U __cxa_guard_acquire@@CXXABI_1.3
U __cxa_guard_release@@CXXABI_1.3
T D3DPERF_SetOptions
T D3DXCompileShader
T D3DXCreateMatrixStack
T D3DXGetPixelShaderProfile
T D3DXMatrixIdentity
T D3DXMatrixInverse
T D3DXMatrixMultiply
T D3DXMatrixOrthoOffCenterRH
T D3DXMatrixPerspectiveOffCenterRH
T D3DXMatrixPerspectiveRH
T D3DXMatrixTranslation
T D3DXMatrixTranspose
T D3DXPlaneNormalize
T D3DXPlaneTransform
T D3DXVec3TransformCoord
T D3DXVec4Normalize
T D3DXVec4Transform
T Direct3DCreate9
U dlclose@@GLIBC_2.0
U dlerror@@GLIBC_2.0
U dl_iterate_phdr@@GLIBC_2.2.4
U dlopen@@GLIBC_2.1
U dlsym@@GLIBC_2.0
U __dynamic_cast@@CXXABI_1.3
A _edata
A _end
U __errno_location@@GLIBC_2.0
U Error
U __expf_finite@@GLIBC_2.15
U fclose@@GLIBC_2.1
T _fini
U fopen64@@GLIBC_2.1
U fopen@@GLIBC_2.1
U fprintf@@GLIBC_2.0
U fread@@GLIBC_2.0
U free@@GLIBC_2.0
U freopen@@GLIBC_2.0
U fwrite@@GLIBC_2.0
U g_ClockSpeed
U g_ClockSpeedSecondsMultiplier
U GetCPUInformation
U getcwd@@GLIBC_2.0
U getenv@@GLIBC_2.0
T GetOpenGLEntryPoints
T GLMBeginPIXEvent
T GLMDecode
T GLMEndPIXEvent
T GLMKnob
T GLMKnobToggle
w __gmon_start__
U g_pMemAlloc
U __gxx_personality_v0@@CXXABI_1.3
U iconv_close@@GLIBC_2.1
U iconv@@GLIBC_2.1
U iconv_open@@GLIBC_2.1
T _init
U isalnum@@GLIBC_2.0
U iscntrl@@GLIBC_2.0
U isprint@@GLIBC_2.0
U iswalnum@@GLIBC_2.0
U iswspace@@GLIBC_2.0
w _Jv_RegisterClasses
U KeyValuesSystem
U lchown@@GLIBC_2.0
U link@@GLIBC_2.0
U __log_finite@@GLIBC_2.15
U LOG_GENERAL
U LoggingSystem_IsChannelEnabled
U LoggingSystem_Log
U __lxstat64@@GLIBC_2.2
U __lxstat@@GLIBC_2.0
U malloc@@GLIBC_2.0
U mbstowcs@@GLIBC_2.0
U memcmp@@GLIBC_2.0
U memcpy@@GLIBC_2.0
U memmove@@GLIBC_2.0
U memset@@GLIBC_2.0
U mkdir@@GLIBC_2.0
U mkfifo@@GLIBC_2.0
U modf@@GLIBC_2.0
U mount@@GLIBC_2.0
U Msg
U open64@@GLIBC_2.2
U opendir@@GLIBC_2.0
U open@@GLIBC_2.0
U Plat_ExitProcess
U Plat_FloatTime
U Plat_IsInDebugSession
U __pow_finite@@GLIBC_2.15
U printf@@GLIBC_2.0
w pthread_cancel@@GLIBC_2.0
w pthread_mutex_lock@@GLIBC_2.0
w pthread_mutex_unlock@@GLIBC_2.0
w pthread_once@@GLIBC_2.0
U putchar@@GLIBC_2.0
U puts@@GLIBC_2.0
U rand@@GLIBC_2.0
U RandomFloat
U RandomSeed
U readdir64@@GLIBC_2.2
U realpath@@GLIBC_2.3
U rename@@GLIBC_2.0
U rmdir@@GLIBC_2.0
U scandir@@GLIBC_2.0
U sincosf@@GLIBC_2.1
U sincos@@GLIBC_2.1
U sinf@@GLIBC_2.0
U sin@@GLIBC_2.0
B s_pInterfaceRegs
U sprintf@@GLIBC_2.0
U sscanf@@GLIBC_2.0
U stderr@@GLIBC_2.0
U strcasecmp@@GLIBC_2.0
U strcasestr@@GLIBC_2.1
U strcat@@GLIBC_2.0
U strchr@@GLIBC_2.0
U strcmp@@GLIBC_2.0
U strcpy@@GLIBC_2.0
U strdup@@GLIBC_2.0
U strlen@@GLIBC_2.0
U strncat@@GLIBC_2.0
U strncmp@@GLIBC_2.0
U strncpy@@GLIBC_2.0
U strnlen@@GLIBC_2.0
U strpbrk@@GLIBC_2.0
U strrchr@@GLIBC_2.0
U strstr@@GLIBC_2.0
U strtod@@GLIBC_2.0
U strtol@@GLIBC_2.0
U strtoll@@GLIBC_2.0
U strtoul@@GLIBC_2.0
U swprintf@@GLIBC_2.2
U swscanf@@GLIBC_2.2
U symlink@@GLIBC_2.0
U system@@GLIBC_2.0
U tanf@@GLIBC_2.0
U tan@@GLIBC_2.0
U ThreadGetCurrentId
U ThreadSleep
T ToGLConnectLibraries
T ToGLDisconnectLibraries
T toglGetClientRect
U tolower@@GLIBC_2.0
U toupper@@GLIBC_2.0
U towlower@@GLIBC_2.0
U towupper@@GLIBC_2.0
U unlink@@GLIBC_2.0
U utime@@GLIBC_2.0
U utimes@@GLIBC_2.0
U vsnprintf@@GLIBC_2.0
U vswprintf@@GLIBC_2.2
U Warning
U wcslen@@GLIBC_2.0
U wcsncat@@GLIBC_2.0
U wcsncpy@@GLIBC_2.0
U wcstof@@GLIBC_2.0
U wcstol@@GLIBC_2.0
U wcstombs@@GLIBC_2.0
U WriteMiniDump
U __xmknod@@GLIBC_2.0
U __xstat64@@GLIBC_2.2
U __xstat@@GLIBC_2.0
U DevWarning(char const*, ...)
U ConMsg(char const*, ...)
U DevMsg(char const*, ...)
T D3DXMATRIX::operator()(int, int)
T D3DXMATRIX::operator float*()
T IDirect3D9::CreateDevice(unsigned int, _D3DDEVTYPE, void*, unsigned int, _D3DPRESENT_PARAMETERS_*, IDirect3DDevice9**)
T IDirect3D9::GetDeviceCaps(unsigned int, _D3DDEVTYPE, _D3DCAPS9*)
T IDirect3D9::CheckDeviceType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, int)
T IDirect3D9::GetAdapterCount()
T IDirect3D9::EnumAdapterModes(unsigned int, _D3DFORMAT, unsigned int, _D3DDISPLAYMODE*)
T IDirect3D9::CheckDeviceFormat(unsigned int, _D3DDEVTYPE, _D3DFORMAT, unsigned int, _D3DRESOURCETYPE, _D3DFORMAT)
T IDirect3D9::GetAdapterModeCount(unsigned int, _D3DFORMAT)
T IDirect3D9::GetAdapterIdentifier(unsigned int, unsigned int, _D3DADAPTER_IDENTIFIER9*)
T IDirect3D9::GetAdapterDisplayMode(unsigned int, _D3DDISPLAYMODE*)
T IDirect3D9::CheckDepthStencilMatch(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, _D3DFORMAT)
T IDirect3D9::CheckDeviceMultiSampleType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, int, _D3DMULTISAMPLE_TYPE, unsigned int*)
T IDirect3D9::~IDirect3D9()
T IDirect3D9::~IDirect3D9()
T IDirect3D9::~IDirect3D9()
T D3DXVECTOR2::operator float*()
T D3DXVECTOR3::D3DXVECTOR3(float, float, float)
T D3DXVECTOR3::D3DXVECTOR3(float, float, float)
T D3DXVECTOR3::operator float*()
T D3DXVECTOR4::D3DXVECTOR4(float, float, float, float)
T D3DXVECTOR4::D3DXVECTOR4(float, float, float, float)
T ID3DXBuffer::GetBufferSize()
T ID3DXBuffer::GetBufferPointer()
T IDirect3DQuery9::Issue(unsigned int)
T IDirect3DQuery9::GetData(void*, unsigned int, unsigned int)
T IDirect3DQuery9::~IDirect3DQuery9()
T IDirect3DQuery9::~IDirect3DQuery9()
T IDirect3DQuery9::~IDirect3DQuery9()
T ID3DXMatrixStack::LoadMatrix(D3DXMATRIX const*)
T ID3DXMatrixStack::MultMatrix(D3DXMATRIX const*)
T ID3DXMatrixStack::ScaleLocal(float, float, float)
T ID3DXMatrixStack::LoadIdentity()
T ID3DXMatrixStack::TranslateLocal(float, float, float)
T ID3DXMatrixStack::MultMatrixLocal(D3DXMATRIX const*)
T ID3DXMatrixStack::RotateAxisLocal(D3DXVECTOR3 const*, float)
T ID3DXMatrixStack::Pop()
T ID3DXMatrixStack::Push()
T ID3DXMatrixStack::AddRef(int, char*)
T ID3DXMatrixStack::Create()
T ID3DXMatrixStack::GetTop()
T ID3DXMatrixStack::Release(int, char*)
T ID3DXMatrixStack::ID3DXMatrixStack()
T ID3DXMatrixStack::ID3DXMatrixStack()
T IDirect3DDevice9::BeginScene()
T IDirect3DDevice9::GetTexture(unsigned int, IDirect3DBaseTexture9**)
T IDirect3DDevice9::InitStates()
T IDirect3DDevice9::ShowCursor(int)
T IDirect3DDevice9::CreateQuery(_D3DQUERYTYPE, IDirect3DQuery9**)
T IDirect3DDevice9::GetViewport(_D3DVIEWPORT9*)
T IDirect3DDevice9::LightEnable(unsigned int, int)
T IDirect3DDevice9::ResetFBOMap()
T IDirect3DDevice9::SaveGLState()
T IDirect3DDevice9::ScrubFBOMap(CGLMTex*)
T IDirect3DDevice9::SetMaterial(_D3DMATERIAL9 const*)
T IDirect3DDevice9::SetViewport(_D3DVIEWPORT9 const*)
T IDirect3DDevice9::StretchRect(IDirect3DSurface9*, _RECT const*, IDirect3DSurface9*, _RECT const*, _D3DTEXTUREFILTERTYPE)
T IDirect3DDevice9::SetClipPlane(unsigned int, float const*)
T IDirect3DDevice9::SetGammaRamp(unsigned int, unsigned int, _D3DGAMMARAMP const*)
T IDirect3DDevice9::SetTransform(_D3DTRANSFORMSTATETYPE, D3DMATRIX const*)
T IDirect3DDevice9::CreateTexture(unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DTexture9**, void**, char*)
T IDirect3DDevice9::DrawPrimitive(_D3DPRIMITIVETYPE, unsigned int, unsigned int)
T IDirect3DDevice9::GetDeviceCaps(_D3DCAPS9*)
T IDirect3DDevice9::ReleasedQuery(IDirect3DQuery9*)
T IDirect3DDevice9::LinkShaderPair(IDirect3DVertexShader9*, IDirect3DPixelShader9*)
T IDirect3DDevice9::RestoreGLState()
T IDirect3DDevice9::SetRenderState(_D3DRENDERSTATETYPE, unsigned int)
T IDirect3DDevice9::SetScissorRect(_RECT const*)
T IDirect3DDevice9::UpdateBoundFBO()
T IDirect3DDevice9::ValidateDevice(unsigned int*)
T IDirect3DDevice9::FullFlushStates()
T IDirect3DDevice9::GetRenderTarget(unsigned int, IDirect3DSurface9**)
T IDirect3DDevice9::QueryShaderPair(int, GLMShaderPairInfo*)
T IDirect3DDevice9::ReleasedCGLMTex(CGLMTex*)
T IDirect3DDevice9::ReleasedSurface(IDirect3DSurface9*)
T IDirect3DDevice9::ReleasedTexture(IDirect3DBaseTexture9*)
T IDirect3DDevice9::SetRenderTarget(unsigned int, IDirect3DSurface9*)
T IDirect3DDevice9::PrintObjectStats(IDirect3DDevice9::ObjectStats_t const&)
T IDirect3DDevice9::CreateCubeTexture(unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DCubeTexture9**, void**, char*)
T IDirect3DDevice9::CreateIndexBuffer(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DIndexBuffer9**, void**)
T IDirect3DDevice9::CreatePixelShader(unsigned int const*, IDirect3DPixelShader9**, char const*, char*, unsigned int const*)
T IDirect3DDevice9::CreateRenderTarget(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**, char*)
T IDirect3DDevice9::CreateVertexBuffer(unsigned int, unsigned int, unsigned int, _D3DPOOL, IDirect3DVertexBuffer9**, void**)
T IDirect3DDevice9::CreateVertexShader(unsigned int const*, IDirect3DVertexShader9**, char const*, char*)
T IDirect3DDevice9::DumpStatsToConsole(CCommand const*)
T IDirect3DDevice9::GetFrontBufferData(unsigned int, IDirect3DSurface9*)
T IDirect3DDevice9::ValidateShaderPair(IDirect3DVertexShader9*, IDirect3DPixelShader9*)
T IDirect3DDevice9::CreateVolumeTexture(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DVolumeTexture9**, void**, char*)
T IDirect3DDevice9::GetRenderTargetData(IDirect3DSurface9*, IDirect3DSurface9*)
T IDirect3DDevice9::ReleasedIndexBuffer(IDirect3DIndexBuffer9*)
T IDirect3DDevice9::ReleasedPixelShader(IDirect3DPixelShader9*)
T IDirect3DDevice9::SetIndicesNonInline(IDirect3DIndexBuffer9*)
T IDirect3DDevice9::SetTextureNonInline(unsigned int, IDirect3DBaseTexture9*)
T IDirect3DDevice9::DrawIndexedPrimitive(_D3DPRIMITIVETYPE, int, unsigned int, unsigned int, unsigned int, unsigned int)
T IDirect3DDevice9::ReleasedVertexBuffer(IDirect3DVertexBuffer9*)
T IDirect3DDevice9::ReleasedVertexShader(IDirect3DVertexShader9*)
T IDirect3DDevice9::SetTextureStageState(unsigned int, _D3DTEXTURESTAGESTATETYPE, unsigned int)
T IDirect3DDevice9::TestCooperativeLevel()
T IDirect3DDevice9::EvictManagedResources()
T IDirect3DDevice9::AcquireThreadOwnership()
T IDirect3DDevice9::DrawIndexedPrimitiveUP(_D3DPRIMITIVETYPE, unsigned int, unsigned int, unsigned int, void const*, _D3DFORMAT, void const*, unsigned int)
T IDirect3DDevice9::FlushClipPlaneEquation()
T IDirect3DDevice9::GetDepthStencilSurface(IDirect3DSurface9**)
T IDirect3DDevice9::ReleaseThreadOwnership()
T IDirect3DDevice9::SetDepthStencilSurface(IDirect3DSurface9*)
T IDirect3DDevice9::CreateVertexDeclaration(_D3DVERTEXELEMENT9 const*, IDirect3DVertexDeclaration9**)
T IDirect3DDevice9::SetPixelShaderConstantB(unsigned int, int const*, unsigned int)
T IDirect3DDevice9::SetPixelShaderConstantI(unsigned int, int const*, unsigned int)
T IDirect3DDevice9::SetPixelShaderNonInline(IDirect3DPixelShader9*)
T IDirect3DDevice9::SetSamplerStateNonInline(unsigned int, _D3DSAMPLERSTATETYPE, unsigned int)
T IDirect3DDevice9::SetStreamSourceNonInline(unsigned int, IDirect3DVertexBuffer9*, unsigned int, unsigned int)
T IDirect3DDevice9::SetVertexShaderNonInline(IDirect3DVertexShader9*)
T IDirect3DDevice9::CreateDepthStencilSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**)
T IDirect3DDevice9::ReleasedVertexDeclaration(IDirect3DVertexDeclaration9*)
T IDirect3DDevice9::SetSamplerStatesNonInline(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
T IDirect3DDevice9::CreateOffscreenPlainSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DSurface9**, void**)
T IDirect3DDevice9::SetVertexDeclarationNonInline(IDirect3DVertexDeclaration9*)
T IDirect3DDevice9::SetPixelShaderConstantFNonInline(unsigned int, float const*, unsigned int)
T IDirect3DDevice9::SetVertexShaderConstantBNonInline(unsigned int, int const*, unsigned int)
T IDirect3DDevice9::SetVertexShaderConstantFNonInline(unsigned int, float const*, unsigned int)
T IDirect3DDevice9::SetVertexShaderConstantINonInline(unsigned int, int const*, unsigned int)
T IDirect3DDevice9::SetMaxUsedVertexShaderConstantsHintNonInline(unsigned int)
T IDirect3DDevice9::Clear(unsigned int, _D3DRECT const*, unsigned int, unsigned int, float, unsigned int)
T IDirect3DDevice9::Reset(_D3DPRESENT_PARAMETERS_*)
T IDirect3DDevice9::Create(IDirect3DDevice9Params*)
T IDirect3DDevice9::GetFVF(unsigned int*)
T IDirect3DDevice9::SetFVF(unsigned int)
T IDirect3DDevice9::Present(_RECT const*, _RECT const*, void*, RGNDATA const*)
T IDirect3DDevice9::EndScene()
T IDirect3DDevice9::SetLight(unsigned int, _D3DLIGHT9 const*)
T IDirect3DDevice9::IDirect3DDevice9()
T IDirect3DDevice9::IDirect3DDevice9()
T IDirect3DDevice9::~IDirect3DDevice9()
T IDirect3DDevice9::~IDirect3DDevice9()
T IDirect3DDevice9::~IDirect3DDevice9()
T IDirect3DSurface9::UnlockRect()
T IDirect3DSurface9::GetDesc(_D3DSURFACE_DESC*)
T IDirect3DSurface9::LockRect(_D3DLOCKED_RECT*, _RECT const*, unsigned int)
T IDirect3DSurface9::~IDirect3DSurface9()
T IDirect3DSurface9::~IDirect3DSurface9()
T IDirect3DSurface9::~IDirect3DSurface9()
T IDirect3DTexture9::UnlockRect(unsigned int)
T IDirect3DTexture9::GetSurfaceLevel(unsigned int, IDirect3DSurface9**)
T IDirect3DTexture9::LockRect(unsigned int, _D3DLOCKED_RECT*, _RECT const*, unsigned int)
T IDirect3DTexture9::~IDirect3DTexture9()
T IDirect3DTexture9::~IDirect3DTexture9()
T IDirect3DTexture9::~IDirect3DTexture9()
T IDirect3DResource9::SetPriority(unsigned int)
W IDirect3DResource9::~IDirect3DResource9()
W IDirect3DResource9::~IDirect3DResource9()
W IDirect3DResource9::~IDirect3DResource9()
T IDirect3DBaseTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
T IDirect3DBaseTexture9::GetLevelCount()
T IDirect3DBaseTexture9::GetType()
T IDirect3DBaseTexture9::~IDirect3DBaseTexture9()
T IDirect3DBaseTexture9::~IDirect3DBaseTexture9()
T IDirect3DBaseTexture9::~IDirect3DBaseTexture9()
T IDirect3DCubeTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
T IDirect3DCubeTexture9::GetCubeMapSurface(_D3DCUBEMAP_FACES, unsigned int, IDirect3DSurface9**)
T IDirect3DCubeTexture9::~IDirect3DCubeTexture9()
T IDirect3DCubeTexture9::~IDirect3DCubeTexture9()
T IDirect3DCubeTexture9::~IDirect3DCubeTexture9()
T IDirect3DIndexBuffer9::UnlockActualSize(unsigned int, void const*)
T IDirect3DIndexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
T IDirect3DIndexBuffer9::Unlock()
T IDirect3DIndexBuffer9::GetDesc(_D3DINDEXBUFFER_DESC*)
T IDirect3DIndexBuffer9::~IDirect3DIndexBuffer9()
T IDirect3DIndexBuffer9::~IDirect3DIndexBuffer9()
T IDirect3DIndexBuffer9::~IDirect3DIndexBuffer9()
T IDirect3DPixelShader9::~IDirect3DPixelShader9()
T IDirect3DPixelShader9::~IDirect3DPixelShader9()
T IDirect3DPixelShader9::~IDirect3DPixelShader9()
T IDirect3DVertexBuffer9::UnlockActualSize(unsigned int, void const*)
T IDirect3DVertexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
T IDirect3DVertexBuffer9::Unlock()
T IDirect3DVertexBuffer9::~IDirect3DVertexBuffer9()
T IDirect3DVertexBuffer9::~IDirect3DVertexBuffer9()
T IDirect3DVertexBuffer9::~IDirect3DVertexBuffer9()
T IDirect3DVertexShader9::~IDirect3DVertexShader9()
T IDirect3DVertexShader9::~IDirect3DVertexShader9()
T IDirect3DVertexShader9::~IDirect3DVertexShader9()
T IDirect3DVolumeTexture9::GetLevelDesc(unsigned int, _D3DVOLUME_DESC*)
T IDirect3DVolumeTexture9::LockBox(unsigned int, _D3DLOCKED_BOX*, _D3DBOX const*, unsigned int)
T IDirect3DVolumeTexture9::UnlockBox(unsigned int)
T IDirect3DVolumeTexture9::~IDirect3DVolumeTexture9()
T IDirect3DVolumeTexture9::~IDirect3DVolumeTexture9()
T IDirect3DVolumeTexture9::~IDirect3DVolumeTexture9()
T IDirect3DVertexDeclaration9::~IDirect3DVertexDeclaration9()
T IDirect3DVertexDeclaration9::~IDirect3DVertexDeclaration9()
T IDirect3DVertexDeclaration9::~IDirect3DVertexDeclaration9()
W IUnknown::~IUnknown()
W IUnknown::~IUnknown()
W IUnknown::~IUnknown()
T D3DXPLANE::operator float*()
T D3DXPLANE::operator==(D3DXPLANE const&)
T D3DXPLANE::operator[](int)
T D3DXPLANE::operator!=(D3DXPLANE const&)
T D3DXMATRIX::operator()(int, int) const
T D3DXMATRIX::operator*(D3DXMATRIX const&) const
T D3DXMATRIX::operator!=(D3DXMATRIX const&) const
T D3DXVECTOR2::operator float const*() const
T D3DXVECTOR3::operator float const*() const
T D3DXPLANE::operator float const*() const
U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
U std::terminate()@@GLIBCXX_3.4
V typeinfo for IDirect3D9
V typeinfo for IDirect3DQuery9
V typeinfo for IDirect3DDevice9
V typeinfo for IDirect3DSurface9
V typeinfo for IDirect3DTexture9
V typeinfo for IDirect3DResource9
V typeinfo for IDirect3DBaseTexture9
V typeinfo for IDirect3DCubeTexture9
V typeinfo for IDirect3DIndexBuffer9
V typeinfo for IDirect3DPixelShader9
V typeinfo for IDirect3DVertexBuffer9
V typeinfo for IDirect3DVertexShader9
V typeinfo for IDirect3DVolumeTexture9
V typeinfo for IDirect3DVertexDeclaration9
V typeinfo for IUnknown
V typeinfo name for IDirect3D9
V typeinfo name for IDirect3DQuery9
V typeinfo name for IDirect3DDevice9
V typeinfo name for IDirect3DSurface9
V typeinfo name for IDirect3DTexture9
V typeinfo name for IDirect3DResource9
V typeinfo name for IDirect3DBaseTexture9
V typeinfo name for IDirect3DCubeTexture9
V typeinfo name for IDirect3DIndexBuffer9
V typeinfo name for IDirect3DPixelShader9
V typeinfo name for IDirect3DVertexBuffer9
V typeinfo name for IDirect3DVertexShader9
V typeinfo name for IDirect3DVolumeTexture9
V typeinfo name for IDirect3DVertexDeclaration9
V typeinfo name for IUnknown
V vtable for IDirect3D9
V vtable for IDirect3DQuery9
V vtable for IDirect3DDevice9
V vtable for IDirect3DSurface9
V vtable for IDirect3DTexture9
V vtable for IDirect3DResource9
V vtable for IDirect3DBaseTexture9
V vtable for IDirect3DCubeTexture9
V vtable for IDirect3DIndexBuffer9
V vtable for IDirect3DPixelShader9
V vtable for IDirect3DVertexBuffer9
V vtable for IDirect3DVertexShader9
V vtable for IDirect3DVolumeTexture9
V vtable for IDirect3DVertexDeclaration9
V vtable for IUnknown
U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
