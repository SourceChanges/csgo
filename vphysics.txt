         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U acosf@@GLIBC_2.0
         U acos@@GLIBC_2.0
00178b83 t add_fdes
001e3850 d adds.7496
         U asinf@@GLIBC_2.0
         U asin@@GLIBC_2.0
         U atan2f@@GLIBC_2.0
         U atan2@@GLIBC_2.0
         U atanf@@GLIBC_2.0
         U atan@@GLIBC_2.0
00178e5e t base_from_cb_data
001788b6 t base_from_object
001e3858 A __bss_start
0002b9a0 t _calloc_dbg
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
00178a65 t classify_object_over_fdes
         U closedir@@GLIBC_2.0
001e64bc b colorcorrection
         U CommandLine
001e3860 b completed.5793
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
001dc140 d cplus_demangle_builtin_types
001dc498 d cplus_demangle_operators
000710f0 T CreateInterface
00183e90 r CSWTCH.835
001dc120 d __CTOR_END__
001dbe84 d __CTOR_LIST__
001e6518 b cvar
001e4080 b cv_phys_enable_experimental_optimizations
001e4020 b cv_phys_enable_PIX_counters
001e40e0 b cv_phys_enable_simd_optimizations
00173173 t __cxa_allocate_dependent_exception
00173026 t __cxa_allocate_exception
         U __cxa_atexit@@GLIBC_2.1.3
0017287f t __cxa_begin_catch
001732c0 t __cxa_call_terminate
0017261d t __cxa_call_unexpected
001769ac t __cxa_current_exception_type
00176836 t __cxa_demangle
001728ff t __cxa_end_catch
         w __cxa_finalize@@GLIBC_2.1.3
00173225 t __cxa_free_dependent_exception
001730e6 t __cxa_free_exception
00172874 t __cxa_get_exception_ptr
00172cb2 t __cxa_get_globals
00172c94 t __cxa_get_globals_fast
00172b44 t __cxa_guard_abort
00172a84 t __cxa_guard_acquire
00172b8c t __cxa_guard_release
0002b840 t __cxa_pure_virtual
00172df0 t __cxa_rethrow
00172d84 t __cxa_throw
00173aff t d_add_substitution
00173794 t d_append_buffer
00173757 t d_append_char
001738c8 t d_append_num
001738a0 t d_append_string
001741ef t d_bare_function_type
00173a96 t d_call_offset
0017395f t d_compact_number
00173533 t d_cv_qualifiers
0017660a t d_demangle_callback.constprop.18
001749d0 t d_encoding
00179ac1 t __deregister_frame
00179ab8 t __deregister_frame_info
001799e2 t __deregister_frame_info_bases
         U DevMsg
00174f4a t d_expression
00175278 t d_exprlist
00174e83 t d_expr_primary
001737e9 t d_find_pack
00173b25 t d_growable_string_callback_adapter
001737c2 t d_index_template_argument
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
0017350e t d_make_builtin_type
00173477 t d_make_comp
0017345c t d_make_empty
001734df t d_make_name
00174e58 t d_mangled_name
001746a3 t d_name
00173903 t d_number.isra.0
00179d04 t __do_global_ctors_aux
00023e68 t __do_global_dtors_aux
00174242 t d_operator_name
0017416e t d_parmlist
0017630d t d_print_array_type.isra.10
001764e4 t d_print_cast.isra.13.part.14
001752ee t d_print_comp
0017658b t d_print_expr_op
0017371a t d_print_flush
001763db t d_print_function_type.isra.12
001760a1 t d_print_mod
001761a7 t d_print_mod_list
001765b2 t d_print_subexpr
001de420 d __dso_handle
001739e1 t d_source_name
001735ac t d_substitution
001745cc t d_template_args
00173998 t d_template_param
001dc128 d __DTOR_END__
001e3864 b dtor_idx.5795
001dc124 d __DTOR_LIST__
00173bdc t d_type
00174361 t d_unqualified_name
001fed84 b dwarf_reg_size_table
001e2bb4 d DW.ref.__gxx_personality_v0
001e384c d DW.ref._ZTISt9exception
001de140 a _DYNAMIC
001729a4 t __dynamic_cast
001e3858 A _edata
001fee98 A _end
         U __errno_location@@GLIBC_2.0
         U Error
00176cfe t execute_cfa_program
00177661 t execute_stack_op
         U exit@@GLIBC_2.0
0002ba20 t _expand_dbg
         U expf@@GLIBC_2.0
001e3c20 b fast_poly_convert
         U fclose@@GLIBC_2.1
00178ce2 t fde_mixed_encoding_compare
00178c65 t fde_single_encoding_compare
00178742 t fde_unencoded_compare
         U fgets@@GLIBC_2.0
00179d2c T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
00192840 r Four_2ToThe21s
00192830 r Four_2ToThe22s
00192820 r Four_2ToThe23s
00192810 r Four_2ToThe24s
001927c0 r Four_DegToRad
001927d0 r Four_Epsilons
001927b0 r Four_FLT_MAX
00192870 r Four_Fours
00192730 r Four_GammaToLinearCoefficients_A
00192720 r Four_GammaToLinearCoefficients_B
00192710 r Four_GammaToLinearCoefficients_C
00192700 r Four_GammaToLinearCoefficients_D
00192780 r Four_LinearToGammaCoefficients_A
00192770 r Four_LinearToGammaCoefficients_B
00192760 r Four_LinearToGammaCoefficients_C
00192750 r Four_LinearToGammaCoefficients_D
00192740 r Four_LinearToGammaCoefficients_E
001927a0 r Four_Negative_FLT_MAX
00192850 r Four_NegativeOnes
001928a0 r Four_Ones
00192860 r Four_Origin
001927e0 r Four_Point225s
001928c0 r Four_PointFives
00192800 r Four_Thirds
00192880 r Four_Threes
00192890 r Four_Twos
001927f0 r Four_TwoThirds
001928b0 r Four_Zeros
         U fprintf@@GLIBC_2.0
         U fputc@@GLIBC_2.0
         U fputs@@GLIBC_2.0
00178767 t frame_downheap
00023ed7 t frame_dummy
001d7428 r __FRAME_END__
001fedcc b frame_hdr_cache
001fedc8 b frame_hdr_cache_head
001787f2 t frame_heapsort
0017821d t __frame_state_for
0002ba30 t _free_dbg
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
001df721 d g_b_phys_enable_query_cache
00176977 t __gcclibcxx_demangle_callback
001e2640 d g_CollisionRulesBlock
001e4140 b g_cv_phys_enable_query_cache
001e3fc0 b g_cvPhysPMC
001df724 d g_EmptyCollisionListener
001789a7 t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
         U getenv@@GLIBC_2.0
00178a54 t get_fde_encoding
001e2b30 d g_f4_111half
001e2820 d g_FluidBlock
001e25c0 d g_IVPToHLDir
001e83ec b global_friction_counter
00155cd8 t global constructors keyed to ivp_3d_solver.cxx
000e3179 t global constructors keyed to ivp_actuator.cxx
000e7db5 t global constructors keyed to ivp_actuator_spring.cxx
00125ddb t global constructors keyed to ivp_anomaly_manager.cxx
00126713 t global constructors keyed to ivp_betterdebugmanager.cxx
00126d08 t global constructors keyed to ivp_betterstatisticsmanager.cxx
001273ed t global constructors keyed to ivp_cache_object.cxx
000e9533 t global constructors keyed to ivp_car_system.cxx
000da593 t global constructors keyed to ivp_collision_filter.cxx
000daf97 t global constructors keyed to ivp_compact_ledge.cxx
000dc146 t global constructors keyed to ivp_compact_ledge_solver.cxx
001288b4 t global constructors keyed to ivp_compact_surface.cxx
000ebbef t global constructors keyed to ivp_constraint_car.cxx
00159ecc t global constructors keyed to ivp_constraint.cxx
000edac0 t global constructors keyed to ivp_controller_buoyancy.cxx
000f5501 t global constructors keyed to ivp_controller_phantom.cxx
000f09be t global constructors keyed to ivp_controller_raycast_car.cxx
000f8286 t global constructors keyed to ivp_core.cxx
000fc2ad t global constructors keyed to ivp_environment.cxx
001005a7 t global constructors keyed to ivp_friction.cxx
00105b3d t global constructors keyed to ivp_friction_gaps.cxx
001093b6 t global constructors keyed to ivp_great_matrix.cxx
00094dd4 t global constructors keyed to ivp_halfspacesoup.cxx
0010fdf4 t global constructors keyed to ivp_hull_manager.cxx
00115e18 t global constructors keyed to ivp_i_friction_hash.cxx
001102a8 t global constructors keyed to ivp_impact.cxx
00127d5d t global constructors keyed to ivp_liquid_surface_descript.cxx
00128026 t global constructors keyed to ivp_material.cxx
0011626a t global constructors keyed to ivp_merge_core.cxx
00117206 t global constructors keyed to ivp_mindist_friction.cxx
001565d0 t global constructors keyed to ivp_mindist_mcases.cxx
000f29f5 t global constructors keyed to ivp_multidimensional_interp.cxx
00118c0b t global constructors keyed to ivp_object.cxx
001282f5 t global constructors keyed to ivp_performancecounter.cxx
0011c94f t global constructors keyed to ivp_physic.cxx
0011cd33 t global constructors keyed to ivp_physic_private.cxx
0011fc98 t global constructors keyed to ivp_polygon.cxx
000e0f06 t global constructors keyed to ivp_ray_solver.cxx
0012033a t global constructors keyed to ivp_sim_unit.cxx
0012494d t global constructors keyed to ivp_solver_core_reaction.cxx
00095480 t global constructors keyed to ivp_surbuild_halfspacesoup.cxx
00095c71 t global constructors keyed to ivp_surbuild_ledge_soup.cxx
0009ac0d t global constructors keyed to ivp_surbuild_pointsoup.cxx
0009c800 t global constructors keyed to ivp_surbuild_polygon_convex.cxx
001285bf t global constructors keyed to ivp_surface_manager.cxx
00128b21 t global constructors keyed to ivp_surman_polygon.cxx
000f3d32 t global constructors keyed to ivp_template_constraint.cxx
001286b4 t global constructors keyed to ivp_templates.cxx
0009d9b9 t global constructors keyed to ivp_templates_intern.cxx
00125477 t global constructors keyed to ivp_time.cxx
001291b5 t global constructors keyed to ivu_active_value.cxx
001323a4 t global constructors keyed to ivu_bigvector.cxx
001325e8 t global constructors keyed to ivu_geometry.cxx
00132e6c t global constructors keyed to ivu_hash.cxx
0013451c t global constructors keyed to ivu_linear.cxx
00139d19 t global constructors keyed to ivu_memory.cxx
0013a552 t global constructors keyed to ivu_min_hash.cxx
0013ad6d t global constructors keyed to ivu_min_list.cxx
0013b4dd t global constructors keyed to ivu_os_dep.cxx
0013b8fa t global constructors keyed to ivu_quat.cxx
0013c760 t global constructors keyed to ivu_string.cxx
0013d51c t global constructors keyed to ivu_vector.cxx
0013dc3d t global constructors keyed to ivu_vhash.cxx
0009e12d t global constructors keyed to ivv_cluster_min_hash.cxx
0009edfc t global constructors keyed to qhull_geom2.cxx
000a4791 t global constructors keyed to qhull_global.cxx
000aa2eb t global constructors keyed to qhull_mem.cxx
000ad9a1 t global constructors keyed to qhull_poly2.cxx
000aaca0 t global constructors keyed to qhull_poly.cxx
000b5251 t global constructors keyed to qhull_qset.cxx
000b9bc3 t global constructors keyed to qhull_stat.cxx
000bacd5 t global constructors keyed to qhull_user.cxx
001de308 a _GLOBAL_OFFSET_TABLE_
00022ca0 t _GLOBAL__sub_I_cvar
000215b0 t _GLOBAL__sub_I___cxa_pure_virtual
00023d72 t _GLOBAL__sub_I_eh_alloc.cc
00023c10 t _GLOBAL__sub_I_Four_PointFives
00022380 t _GLOBAL__sub_I_g_MeshFrameLocksPool
000218f0 t _GLOBAL__sub_I_g_PhysicsCollision
000215e0 t _GLOBAL__sub_I_g_PhysicsUnits
00023090 t _GLOBAL__sub_I_g_scalar4_hk_epsilon
00021f50 t _GLOBAL__sub_I_g_SurfaceDatabase
00022850 t _GLOBAL__sub_I_g_VPhysPtrSaveRestoreOps
00023510 t _GLOBAL__sub_I_ivp_debug_indent
00023610 t _GLOBAL__sub_I_ivp_mindist_settings
00023cc0 t _GLOBAL__sub_I_lineartovertex
00023d00 t _GLOBAL__sub_I_LOG_HavokConsole
00023350 t _GLOBAL__sub_I_n_physical_pops
000239e0 t _GLOBAL__sub_I_s_bMathlibInitialized
00022a70 t _GLOBAL__sub_I_s_pInterfaceRegs
00022b20 t _GLOBAL__sub_I_s_StringCharConversion
00022480 t _GLOBAL__sub_I_stdafx.cpp
00022c70 t _GLOBAL__sub_I__Z10HashStringPKc
000224f0 t _GLOBAL__sub_I__Z11InitLeafmapP17IVP_Compact_LedgeP9leafmap_t
000234d0 t _GLOBAL__sub_I__Z11qh_premergeP7vertexTdd
00023bd0 t _GLOBAL__sub_I__Z12SeedRandSIMDj
00023450 t _GLOBAL__sub_I__Z13qh_backnormalPPdiijS_Pj
00021710 t _GLOBAL__sub_I__Z13vphysics_initv
00023490 t _GLOBAL__sub_I__Z17qh_produce_outputv
00021c70 t _GLOBAL__sub_I__Z18GetOppositeSynapseP20IVP_Synapse_Friction
00021650 t _GLOBAL__sub_I__Z19PackLedgeIntoBufferP12packedhull_tR10CUtlBufferPK17IVP_Compact_LedgeRK17virtualmeshlist_t
00023c50 t _GLOBAL__sub_I__Z19SetupMatrixIdentityv
00022ae0 t _GLOBAL__sub_I__Z21ConnectTier1LibrariesPPFPvPKcPiEi
00021500 t _GLOBAL__sub_I__Z24IntersectRayWithTriangleRK5Ray_tRK6VectorS4_S4_b
000237a0 t _GLOBAL__sub_I__Z29ivp_core_get_surface_speed_osP8IVP_CoreP15IVP_Real_ObjectPK17IVP_U_Float_PointPS3_
00021a80 t _GLOBAL__sub_I__Z29TransformHLWorldToHavanaLocalRK6VectorP15IVP_Real_Object
00022160 t _GLOBAL__sub_I__Z31ComputePDControllerCoefficientsPffff
00023410 t _GLOBAL__sub_I__Z8qh_qhullv
00021570 t _GLOBAL__sub_I__Z9ParseFilePKcPcPbP14characterset_t
000236a0 t _GLOBAL__sub_I__Z9ReportObjP16IVP_Synapse_RealR8CFmtStrNILi256ELb0EE
00022aa0 t _GLOBAL__sub_I__Z9_V_memsetPvii
00022c10 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
000230d0 t _GLOBAL__sub_I__ZN10hk_Matrix38set_rowsERK10hk_Vector3S2_S2_
000231d0 t _GLOBAL__sub_I__ZN10hk_Vector319set_transformed_posERK12hk_TransformRKS_
00023150 t _GLOBAL__sub_I__ZN11hk_Rotation3setERK13hk_Quaternion
00023190 t _GLOBAL__sub_I__ZN12hk_TransformC2ERK13hk_QuaternionRK10hk_Vector3
000233d0 t _GLOBAL__sub_I__ZN12IVP_Tri_Edge22search_nearest_edge_toEP11IVP_U_PointPf
00022d90 t _GLOBAL__sub_I__ZN13hk_ConstraintC2EP26hk_Local_Constraint_SystemP13hk_Rigid_BodyS3_23IVP_CONTROLLER_PRIORITYi
00023110 t _GLOBAL__sub_I__ZN13hk_Quaternion3setERK11hk_Rotation
00022990 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
00022090 t _GLOBAL__sub_I__ZN14CPhysicsObjectC2Ev
00022670 t _GLOBAL__sub_I__ZN14CVPhysicsParseC2EPKc
00023310 t _GLOBAL__sub_I__ZN14IVP_point_hashD2Ev
00023720 t _GLOBAL__sub_I__ZN14IVP_Synapse_OO25hull_limit_exceeded_eventEP16IVP_Hull_Managerf
00022bd0 t _GLOBAL__sub_I__ZN15CUtlBinaryBlockC2Eii
00023210 t _GLOBAL__sub_I__ZN15hk_Vector3_Util10random_vecEv
00022a30 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
00021880 t _GLOBAL__sub_I__ZN16CPhysics_AirboatC2EP15IVP_EnvironmentPK23IVP_Template_Car_SystemP17IPhysicsGameTrace
00023550 t _GLOBAL__sub_I__ZN16IVP_ov_tree_hashD2Ev
00021ee0 t _GLOBAL__sub_I__ZN17CFrictionSnapshotC2EP15IVP_Real_Object
00023760 t _GLOBAL__sub_I__ZN17IVP_Range_ManagerC2EP15IVP_Environment8IVP_BOOL
00022fd0 t _GLOBAL__sub_I__ZN18hk_Rigid_Body_Core22add_to_mass_matrix_invER17hk_Core_VMQ_InputR15hk_Dense_MatrixPf
000232d0 t _GLOBAL__sub_I__ZN18IVP_I_FPoint_VHashD2Ev
00022dd0 t _GLOBAL__sub_I__ZN19hk_Fixed_Constraint15init_constraintEPKv
00022e10 t _GLOBAL__sub_I__ZN19hk_Hinge_BP_Builder15set_position_osEiRK10hk_Vector3
00022e50 t _GLOBAL__sub_I__ZN19hk_Hinge_Constraint15init_constraintEPKv
00023050 t _GLOBAL__sub_I__ZN20hk_Dense_Matrix_Util4multERK15hk_Dense_MatrixRK15hk_Dense_VectorRS3_
00022ed0 t _GLOBAL__sub_I__ZN20hk_Pulley_Constraint15init_constraintEPKv
00022f10 t _GLOBAL__sub_I__ZN21hk_Ragdoll_Constraint15init_constraintEPKv
00023660 t _GLOBAL__sub_I__ZN21IVP_3D_Solver_PF_COLL9get_valueEP12IVP_U_MatrixS1_
00023290 t _GLOBAL__sub_I__ZN21IVP_Compact_RecursiveC2Ev
000236e0 t _GLOBAL__sub_I__ZN21IVP_Mindist_Recursive19mindist_rescue_pushEv
00023ae0 t _GLOBAL__sub_I__ZN22CPolyhedron_AllocByNew7ReleaseEv
00021e70 t _GLOBAL__sub_I__ZN23CPhysicsFluidControllerC2EP17CBuoyancyAttacherP29IVP_Liquid_Surface_DescriptorP14CPhysicsObjecti
00022d50 t _GLOBAL__sub_I__ZN23hk_Breakable_ConstraintC2EP14hk_EnvironmentPK26hk_Breakable_Constraint_BP
00022e90 t _GLOBAL__sub_I__ZN23hk_Prismatic_Constraint15init_constraintEPKv
00023010 t _GLOBAL__sub_I__ZN23hk_Rigid_Body_Binary_EFC2EP14hk_EnvironmentP13hk_Rigid_BodyS3_23IVP_CONTROLLER_PRIORITY
00023960 t _GLOBAL__sub_I__ZN24IVP_Calc_Next_PSI_Solver38get_longest_time_step_dependent_on_rotEP8IVP_Core
00022d10 t _GLOBAL__sub_I__ZN25hk_Ball_Socket_ConstraintC2EP14hk_EnvironmentPK17hk_Ball_Socket_BPP13hk_Rigid_BodyS6_
00022cd0 t _GLOBAL__sub_I__ZN26hk_Local_Constraint_SystemC2EP14hk_EnvironmentP29hk_Local_Constraint_System_BP
00022f90 t _GLOBAL__sub_I__ZN26hk_Stiff_Spring_Constraint15init_constraintEPKv
00023250 t _GLOBAL__sub_I__ZN27IVP_Compact_Ledge_GeneratorC2Ev
000237e0 t _GLOBAL__sub_I__ZN27IVP_Constraint_Local_AnchorC2Ev
000239a0 t _GLOBAL__sub_I__ZN30IVP_Object_Callback_Table_HashD2Ev
00023820 t _GLOBAL__sub_I__ZN30IVP_Template_Controller_MotionC2Ev
000221f0 t _GLOBAL__sub_I__ZN30vphysics_save_cphysicsspring_t9m_DataMapE
00022f50 t _GLOBAL__sub_I__ZN32hk_Ragdoll_Constraint_BP_Builder38initialize_from_limited_ball_socket_bpEPK25hk_Limited_Ball_Socket_BPP13hk_Rigid_BodyS4_
00022010 t _GLOBAL__sub_I__ZN32vphysics_save_motioncontroller_t9m_DataMapE
000235d0 t _GLOBAL__sub_I__ZN33IVP_Collision_Callback_Table_HashD2Ev
00021c00 t _GLOBAL__sub_I__ZN34CPhysics_Car_System_Raycast_WheelsC2EP15IVP_EnvironmentPK23IVP_Template_Car_System
00022270 t _GLOBAL__sub_I__ZN34vphysics_save_cvehiclecontroller_t9m_DataMapE
00023590 t _GLOBAL__sub_I__ZN36IVP_Collision_Delegator_Root_Mindist42object_is_removed_from_collision_detectionEP15IVP_Real_Object
00023390 t _GLOBAL__sub_I__ZN36IVP_Compact_Ledge_Mass_Center_SolverC2EPK12IVP_U_Matrix
00023860 t _GLOBAL__sub_I__ZN8IVP_BallC2EP11IVP_ClusterPK17IVP_Template_BallPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
00022950 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
001eb420 b g_MatrixIdentity
001e4880 b g_MeshFrameLocksPool
         w __gmon_start__
001e25e0 d g_ParseBlocks
001e64e8 b g_pAsyncFileSystem
001e6458 b g_pAVI
001e6454 b g_pBIK
001e6514 b g_pCVar
001e6464 b g_pDataCache
001e6450 b g_pDmeMakefileUtils
001e6500 b g_pEventSystem
001e64ec b g_pFullFileSystem
001e649c b g_pGameUISystemMgr
001e3c80 b g_PhysicsCollision
001de43c d g_PhysicsInternal
001de428 d g_PhysicsUnits
001e64d4 b g_pInputStackSystem
001e64d8 b g_pInputSystem
001e64fc b g_pLocalize
001e64a0 b g_pMatchFramework
001e64e0 b g_pMaterialSystem
001e64dc b g_pMaterialSystem2
001e64c4 b g_pMaterialSystemDebugTextureInfo
001e64c8 b g_pMaterialSystemHardwareConfig
001e6484 b g_pMatSystemSurface
001e6460 b g_pMDLCache
         U g_pMemAlloc
00000000 b g_pMeshFrameLocks
001e6490 b g_pMeshSystem
001e64d0 b g_pNetworkSystem
001e650c b g_pPhysics2
001e6508 b g_pPhysics2ActorManager
001e6504 b g_pPhysics2ResourceManager
001e644c b g_pPhysicsCollision
001e64a8 b g_pPrecacheSystem
001e6510 b g_pProcessUtils
001e64b0 b g_pQueuedLoader
001e6498 b g_pRenderDevice
001e64f0 b g_pRenderDeviceMgr
001e6494 b g_pRenderHardwareConfig
001e64ac b g_pResourceAccessControl
001e64f4 b g_pResourceSystem
001e64a4 b g_pSceneSystem
001e6448 b g_pSoundEmitterSystem
001e64cc b g_pSoundSystem
001e648c b g_pStudioRender
001de424 d g_pszModule
001e64f8 b g_pUtlSortVectorQSortContext
001e6474 b g_pVGui
001e6480 b g_pVGuiInput
001e6470 b g_pVGuiLocalize
001e6478 b g_pVGuiPanel
001e6440 b g_pVGuiRenderSurface
001e646c b g_pVGuiSchemeManager
001e647c b g_pVGuiSurface
001e6468 b g_pVGuiSystem
001e6444 b g_pWorldRendererMgr
001e2680 d g_RagdollAnimatedFrictionBlock
001e2700 d g_RagdollConstraintBlock
00180ca0 r g_scalar4_hk_epsilon
001e2b60 d g_scPi
001e2b50 d g_scPiDiv2
001e2b40 d g_scPiDiv4
001e2ba0 d g_sc_tan_pi_8
001e2b70 d g_scTermArcTanR1
001e2b80 d g_scTermArcTanR3
001e2b90 d g_scTermArcTanR5
00192790 r g_SIMD_0123
001926b0 r g_SIMD_AllOnesMask
001926f0 r g_SIMD_clear_signmask
001926c0 r g_SIMD_clear_wmask
00192660 r g_SIMD_ComponentMask
001925c0 r g_SIMD_EveryOtherMask
00192620 r g_SIMD_Identity
001926a0 r g_SIMD_Low16BitsMask
001926d0 r g_SIMD_lsbmask
001926e0 r g_SIMD_signmask
001925d0 r g_SIMD_SkipTailMask
001e28c0 d g_SolidBlock
001e4240 b g_SurfaceDatabase
001e64c0 b g_VBAllocTracker
001e4980 b g_VisitHashPool
001e4acc b g_VPhysPtrSaveRestoreOps
001e4ac8 b g_VPhysPtrUtlVectorSaveRestoreOps
         U g_VProfCurrentProfile
001722a9 t __gxx_personality_v0
00023f0e t __i686.get_pc_thunk.bx
0009547b t __i686.get_pc_thunk.cx
001732b9 t __i686.get_pc_thunk.dx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
000210f8 T _init
00176c7e t init_dwarf_reg_size_table
         U isalnum@@GLIBC_2.0
         U iscntrl@@GLIBC_2.0
         U isprint@@GLIBC_2.0
         U iswalnum@@GLIBC_2.0
         U iswspace@@GLIBC_2.0
001e82c4 b IVP_CLS
001eaca4 b ivp_debug_indent
001e8540 b ivp_debugmanager
001e68dc b ivp_debug_sf_indent
001e68ec b ivp_debug_sf_last_node_was_terminal
001e68e4 b ivp_debug_sf_max_treedepth
001e68e8 b ivp_debug_sf_n_nodes_with_one_terminal
001e68e0 b ivp_debug_sf_treedepth
001e2c00 d IVP_Hash_crctab
001ead00 b ivp_mindist_settings
001dc12c d __JCR_END__
001dc12c d __JCR_LIST__
         w _Jv_RegisterClasses
001734d7 t .L12
00173cdd t .L155
00173ce6 t .L156
00173eb2 t .L157
00173f12 t .L158
00173ca7 t .L159
00173ec9 t .L160
00173d65 t .L161
00173e6d t .L162
00173e84 t .L163
00173e9b t .L164
00173e08 t .L165
00173dde t .L166
00173ef0 t .L167
00173c65 t .L168
00173c8d t .L169
00176c1c t .L17
00176be6 t .L19
000aabc8 t .L2
00176c01 t .L20
00177b59 t .L214
000aba6b t .L215
00177b5d t .L215
000abf50 t .L216
00177b62 t .L216
000abef1 t .L217
00177b66 t .L217
000abefe t .L218
00174150 t .L218
00177b72 t .L218
000abf0e t .L219
00177b77 t .L219
000abf21 t .L220
00177b81 t .L220
000abf37 t .L221
00177b85 t .L221
00177b8b t .L222
00177b91 t .L223
00177b97 t .L224
00177ba9 t .L225
00177ba2 t .L226
00177bb7 t .L227
00177b9b t .L228
00177bb0 t .L229
00176bf2 t .L23
00177bbe t .L230
00176c06 t .L24
00177c24 t .L244
00176c0e t .L25
001720d7 t .L26
00176c15 t .L26
00177d73 t .L271
00177d7d t .L272
00177da9 t .L273
00177df4 t .L274
00177e0d t .L275
001720a1 t .L28
001720bc t .L29
000aac28 t .L3
001720ad t .L32
00174988 t .L327
00174918 t .L328
001746d8 t .L329
001720c1 t .L33
00174926 t .L330
00174818 t .L331
001720c9 t .L34
001720d0 t .L35
000aac3a t .L4
00177150 t .L43
0017897b t .L45
0017714b t .L46
000b7682 t .L465
000b77e5 t .L466
000b77fd t .L467
000b7797 t .L468
000b77bb t .L469
00176db4 t .L47
00178945 t .L47
000b76aa t .L472
000b7763 t .L473
000b777a t .L474
000b7717 t .L475
000b773a t .L476
00176de1 t .L48
00178960 t .L48
00176dff t .L49
000aac4f t .L5
00176e1d t .L50
00176e3a t .L51
00178951 t .L51
000a7174 t .L511
000a79b4 t .L512
000a78f4 t .L513
000a78ac t .L514
000a7b70 t .L515
000a7946 t .L516
000a7a06 t .L517
000a77ee t .L518
000a7748 t .L519
00176e62 t .L52
00178965 t .L52
000a767a t .L520
000a76ba t .L521
000a7630 t .L522
000a75e6 t .L523
000a759e t .L524
000a756b t .L525
000a750d t .L526
000a74af t .L527
000a7451 t .L528
000a73f3 t .L529
00176e98 t .L53
0017896d t .L53
000a7395 t .L530
000a7337 t .L531
000a7304 t .L532
000a72c7 t .L533
00176e7d t .L54
00178974 t .L54
00175339 t .L542
001753f8 t .L543
0017542a t .L544
001755ad t .L545
00175679 t .L546
00175fe4 t .L547
001756e0 t .L549
00176eb3 t .L55
001756ef t .L550
001756fa t .L551
00175705 t .L552
0017573a t .L553
00175745 t .L554
00175750 t .L555
00175758 t .L556
00175763 t .L557
0017576e t .L558
00175779 t .L559
00176edc t .L56
0017578c t .L560
00175797 t .L561
001757a2 t .L562
001757ad t .L563
001757c9 t .L564
001757f5 t .L565
0017582d t .L566
00175856 t .L567
00175861 t .L568
00175907 t .L569
00176f17 t .L57
00175a04 t .L570
00175a5f t .L571
00175abd t .L572
00175b45 t .L573
00175b86 t .L574
00175b9f t .L575
00175bcf t .L576
00175c2c t .L577
00175d21 t .L579
00176f3d t .L58
00175d90 t .L581
00175ef6 t .L582
00175f0f t .L583
00175f25 t .L584
00175ee3 t .L585
00175f31 t .L586
000a9bd3 t .L587
00175ffa t .L587
00176010 t .L588
0017602e t .L589
00176f74 t .L59
00176060 t .L590
00175f57 t .L591
000a9827 t .L592
000a9b75 t .L593
000a9f06 t .L597
000aac67 t .L6
001734a6 t .L6
00176f97 t .L60
000a9b42 t .L601
000a9ed3 t .L602
000a9e75 t .L603
000a9ae4 t .L607
00176faa t .L61
000a9e17 t .L611
000a9a86 t .L615
000a9a28 t .L619
00176fc2 t .L62
000a9db9 t .L623
000a99ca t .L627
00176fdd t .L63
000a9d96 t .L631
000a996c t .L636
0017700a t .L64
000a9d38 t .L640
000a9cda t .L644
000a990e t .L648
00177048 t .L65
000a9c89 t .L652
000a98b0 t .L656
00177068 t .L66
000a9fd8 t .L660
00175e06 t .L663
000a9c2b t .L664
00175e10 t .L664
00175e1a t .L665
00175e25 t .L666
00175e30 t .L667
000a985a t .L668
0017708a t .L67
000a7bc8 t .L672
001770bd t .L68
0017608c t .L683
001770e3 t .L69
000aac82 t .L7
001734b0 t .L7
00177106 t .L70
00175b94 t .L700
00177119 t .L71
0017618f t .L711
00176160 t .L712
001760d2 t .L713
001760da t .L714
001760ee t .L715
001760f6 t .L716
0017610a t .L717
0017611a t .L718
00176121 t .L719
00176129 t .L720
00176131 t .L721
00176139 t .L722
00176165 t .L723
000a90eb t .L727
000a8f90 t .L750
000a8f5d t .L751
000a8f2a t .L752
000a8ef7 t .L753
000a8ec4 t .L754
000a8e91 t .L755
000a8e5e t .L756
000a8e2b t .L757
000a8df8 t .L758
000a8dbb t .L759
000a8d88 t .L760
000a8d55 t .L761
000a9338 t .L762
000a930e t .L764
000a92ae t .L765
000a927b t .L766
000a9398 t .L767
000a9365 t .L768
000a93cb t .L769
000a90b8 t .L770
000a91ae t .L771
000a91e1 t .L772
000a908e t .L780
000a905e t .L782
000a8fc3 t .L785
000a77ac t .L792
000a7f8c t .L799
000aac07 t .L8
001734bc t .L8
000a7f57 t .L800
000a7f22 t .L801
000a7ed4 t .L802
000a82fb t .L804
000a8267 t .L807
000a81bf t .L810
000a8141 t .L826
000a81e9 t .L829
000a80c3 t .L832
000a8037 t .L835
000a7fc1 t .L841
000a7704 t .L844
001734b6 t .L9
         U lchown@@GLIBC_2.0
00178d5f t linear_search_fdes
001f2620 b lineartolightmap
001f3620 b lineartovertex
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U LOG_GENERAL
         U LoggingSystem_IsChannelEnabled
         U LoggingSystem_Log
         U LoggingSystem_LogDirect
         U LoggingSystem_RegisterLoggingChannel
         U log@@GLIBC_2.0
001fa34c b LOG_HavokConsole
         U longjmp@@GLIBC_2.0
00179c9c t lstat
00179c9c t __lstat
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
0002b980 t _malloc_dbg
         U malloc@@GLIBC_2.0
001fee94 b marker.7234
001e64e4 b materials
00190378 R MAX_OBJECT_ROT_SPEED
         U mbstowcs@@GLIBC_2.0
001e645c b mdlcache
001e64b4 b mdllib
         U memcmp@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
00179ccc t mknod
00179ccc t __mknod
         U mount@@GLIBC_2.0
         U Msg
0002ba50 t _msize_dbg
00192408 r nanmask
0002b950 t _nh_malloc_dbg
001e2bd4 d n_physical_pops
001feda0 b object_mutex
001fed98 b once_regsizes.7669
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
001e64b8 b p4
001ea700 b p_error_buffer
001e3430 d pfVectorNormalizeFast
001de470 d physcollision
001e4138 b phys_enable_experimental_optimizations
001df720 d phys_enable_simd_optimizations
001df730 d physprops
         U Plat_ExitProcess
         U Plat_IsInDebugSession
001e3440 d power2_n
         U powf@@GLIBC_2.0
         U pow@@GLIBC_2.0
001e820c b P_Pop_Eps
001e8208 b P_Pop_Scal_Eps
001e8204 b P_Pop_Too_Flat_Eps
         U printf@@GLIBC_2.0
         w pthread_cancel@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
001e7380 b qhmem
001e6980 b qh_qh
001e7440 b qh_qhstat
001e2bbc d qh_rand_seed
001e2bc0 d qh_version
         U qsort@@GLIBC_2.0
001eb45c b quat_identity
         U rand@@GLIBC_2.0
         U RandomFloat
         U RandomSeed
         U readdir64@@GLIBC_2.2
00176b5a t read_encoded_value
001788fe t read_encoded_value_with_base
00176b10 t read_sleb128
001786f8 t read_sleb128
00176ae0 t read_uleb128
001786c8 t read_uleb128
0002ba00 t _realloc_dbg
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
001798de t __register_frame
001798c4 t __register_frame_info
00179836 t __register_frame_info_bases
0017999c t __register_frame_info_table
00179913 t __register_frame_info_table_bases
001799b6 t __register_frame_table
         U rename@@GLIBC_2.0
         U rmdir@@GLIBC_2.0
001eb484 b s_bMathlibInitialized
         U scandir@@GLIBC_2.0
00179338 t search_object
001fedbc b seen_objects
00023db0 t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
001eb020 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
00178866 t size_of_encoded_value
001e50a0 b s_NoEscConversion
001e4ce4 B s_pInterfaceRegs
         U sprintf@@GLIBC_2.0
         U sqrtf@@GLIBC_2.0
         U sqrt@@GLIBC_2.0
         U sscanf@@GLIBC_2.0
001e59c0 b s_StringCharConversion
001dc3d4 d standard_subs
00179c6c t stat
00179c6c t __stat
         U stderr@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U strcat@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncmp@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strnlen@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strrchr@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U __strtod_internal@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U __strtol_internal@@GLIBC_2.0
         U strtoll@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
001e6488 b studiorender
001fedc0 b subs.7497
         U symlink@@GLIBC_2.0
         U syscall@@GLIBC_2.0
000e9f42 t T.713
001023b8 t T.990
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
001fee8c b terminator.7340
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf64
         U ThreadSleep
         U time@@GLIBC_2.0
         U ___tls_get_addr@@GLIBC_2.3
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
001769dc t __udivdi3
         U unlink@@GLIBC_2.0
001fedb8 b unseen_objects
00178647 t _Unwind_Backtrace
001782de t _Unwind_DebugHook
0017862b t _Unwind_DeleteException
001781d5 t _Unwind_FindEnclosingFunction
00179af2 t _Unwind_Find_FDE
00178418 t _Unwind_ForcedUnwind
00177fd7 t _Unwind_ForcedUnwind_Phase2
0017812f t _Unwind_GetCFA
00178207 t _Unwind_GetDataRelBase
00177528 t _Unwind_GetGR
00178190 t _Unwind_GetIP
0017819b t _Unwind_GetIPInfo
001781bf t _Unwind_GetLanguageSpecificData
001781ca t _Unwind_GetRegionStart
00178212 t _Unwind_GetTextRelBase
00178ea6 t _Unwind_IteratePhdrCallback
001782e3 t _Unwind_RaiseException
00178094 t _Unwind_RaiseException_Phase2
001784c3 t _Unwind_Resume
0017856a t _Unwind_Resume_or_Rethrow
0017813a t _Unwind_SetGR
001781b1 t _Unwind_SetIP
00176c48 t _Unwind_SetSpColumn
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
0017717c t uw_frame_state_for
00177ed6 t uw_init_context_1
00177574 t uw_install_context_1
00177f9d t uw_update_context
00177c38 t uw_update_context_1
001eb46c b vec3_angle
001eb450 b vec3_invalid
001eb478 b vec3_origin
         U vsnprintf@@GLIBC_2.0
         U vsprintf@@GLIBC_2.0
         U vswprintf@@GLIBC_2.2
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
00170900 t __wrap_access
00171010 t __wrap_chmod
001710d0 t __wrap_chown
001708d0 t __wrap_creat
00170570 t __wrap_fopen
00170650 t __wrap_fopen64
00170480 t __wrap_freopen
001711a0 t __wrap_lchown
001713d0 t __wrap_link
00170a80 t __wrap_lstat
00170da0 t __wrap___lxstat
00170f40 t __wrap___lxstat64
00171ca0 t __wrap_mkdir
00171840 t __wrap_mkfifo
00171530 t __wrap_mknod
00171610 t __wrap_mount
00170730 t __wrap_open
00170800 t __wrap_open64
00170c10 t __wrap_opendir
00171be0 t __wrap_realpath
00171900 t __wrap_rename
00171d60 t __wrap_rmdir
00170b40 t __wrap_scandir
001709c0 t __wrap_stat
00171270 t __wrap_symlink
00171780 t __wrap_unlink
00171a60 t __wrap_utime
00171b20 t __wrap_utimes
00170cd0 t __wrap___xstat
00170e70 t __wrap___xstat64
         U WriteMiniDump
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
0008d160 t ArcTan2Alt(float __vector(4), float __vector(4))
0008d160 t ArcTan2Alt(float __vector, float __vector)
         U DevWarning(char const*, ...)
0007ebf0 t HashString(char const*)
000750f0 t HexToValue(char)
0015bbe0 t IsDenormal(float const&)
0008d2d0 t IsSimilar3(float __vector(4) const&, hk_Vector3 const&, float)
0008d290 t IsSimilar3(float __vector(4) const&, float __vector(4) const&, float)
0008d2d0 t IsSimilar3(float __vector const&, hk_Vector3 const&, float)
0008d290 t IsSimilar3(float __vector const&, float __vector const&, float)
0015ad80 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
0016cce0 t MatrixCopy(VMatrix const&, VMatrix&)
0003dd20 t PhysPmcEnd()
000ad700 t qh_addhash(void*, setT*, int, unsigned int)
0009ea92 t qh_divzero(double, double, double, unsigned int*)
000bb1eb t qh_errexit(int, facetT*, ridgeT*)
000a057f t qh_getarea(facetT*)
000aaba0 t qh_gethash(int, setT*, int, int, void*)
000aab0b t qh_memfree(void*, int)
000aaa14 t qh_meminit(_IO_FILE*)
000aa51d t qh_memsize(int)
0009ed0d t qh_mindiff(double*, double*, int)
000ab032 t qh_pointid(double*)
000b56aa t qh_setcopy(setT*, int)
000b5495 t qh_setfree(setT**)
000b5226 t qh_setlast(setT*)
000b7950 t qh_setsize(setT*)
000b5c7a t qh_settemp(int)
000b6071 t qh_setzero(setT*, int, int)
00038d30 t ReadRandom(int*)
00161760 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00073100 t V_FileBase(char const*, char*, int)
00071570 t _V_memmove(void*, void const*, int)
00072690 t V_snprintf(char*, int, char const*, ...)
000716c0 t _V_stricmp(char const*, char const*)
00071a30 t V_strnicmp(char const*, char const*, int)
000723c0 t V_strnistr(char const*, char const*, int)
000715d0 t _V_strnlen(char const*, int)
00071610 t _V_strrchr(char const*, char)
00074880 t V_StrRight(char const*, int, char*, int)
00074710 t V_StrSlice(char const*, int, int, char*, int)
00074400 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
00074910 t V_strtowcs(char const*, int, wchar_t*, int)
00074950 t V_wcstostr(wchar_t const*, int, char*, int)
000745d0 t AllocString(char const*, int)
0015ca10 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
0015ca60 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
0015c880 t AngleMatrix(QAngle const&, matrix3x4_t&)
0015c9d0 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
0015cdd0 t ClearBounds(Vector&, Vector&)
00161220 t CubicBasis0(float)
00161250 t CubicBasis1(float)
00161290 t CubicBasis2(float)
001612d0 t CubicBasis3(float)
00057e40 t datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)
00034350 t datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)
00057bd0 t datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)
000578f0 t datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)
000579c0 t datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)
00034420 t datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)
00057d70 t datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)
00057ca0 t datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)
000577d0 t datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)
00057b00 t datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)
0004e0b0 t datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)
000568e0 t datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)
000371e0 t datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)
000372b0 t datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)
00037520 t datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)
00037450 t datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)
00049210 t datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)
000376c0 t datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)
00037380 t datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)
00054410 t datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)
00036f70 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)
00057700 t datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)
00037110 t datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)
00037040 t datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)
00054340 t datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)
000375f0 t datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)
00036dd0 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)
0015ba30 t FloorDivMod(double, double, int*, int*)
0005d420 t InitLeafmap(IVP_Compact_Ledge*, leafmap_t*)
001618e0 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0013cc6f t ivp_message(char const*, ...)
0007f060 t MurmurHash2(void const*, int, unsigned int)
0013c745 t p_get_error()
0013d086 t p_get_float()
000c0ad0 t p_mergesort(void**, int, int, int (*)(void*, void*, char*), char*)
000c4de0 t qh_addpoint(double*, facetT*, unsigned int)
000b7e10 t qh_allstatA()
000b80c0 t qh_allstatB()
000b8465 t qh_allstatC()
000b88fa t qh_allstatD()
000b8b7d t qh_allstatE()
000b8ddc t qh_allstatF()
000b91c7 t qh_allstatG()
000b9496 t qh_allstatH()
000b9837 t qh_allstatI()
000ac46b t qh_delfacet(facetT*)
000af336 t qh_delridge(ridgeT*)
000c9260 t qh_detvnorm(vertexT*, vertexT*, setT*, double*)
0009ea66 t qh_distnorm(int, double*, double*, double*)
000c38e0 t qh_errexit2(int, facetT*, facetT*)
000bae18 t qh_errprint(char const*, facetT*, facetT*, ridgeT*, vertexT*)
000c6a90 t qh_findbest(double*, facetT*, unsigned int, unsigned int, unsigned int, double*, unsigned int*, int*)
000af39c t qh_findgood(facetT*, int)
000c78c0 t qh_getangle(double*, double*)
000ad72f t qh_isvertex(double*, setT*)
000ca2c0 t qh_markkeep(facetT*)
0009f080 t qh_maxouter()
000aa746 t qh_memalloc(int)
000aa5d8 t qh_memsetup()
000ab1b5 t qh_newfacet()
000ab0bb t qh_newridge()
000b9a58 t qh_newstats(int, int*)
000d9f70 t qh_premerge(vertexT*, double, double)
000cf7f0 t qh_printend(_IO_FILE*, int, facetT*, setT*, unsigned int)
000b6da5 t qh_setcheck(setT*, char const*, int)
000b54fb t qh_setequal(setT*, setT*)
000b5556 t qh_setfree2(setT**, int)
000b51e1 t qh_setindex(setT*, void*)
000b529c t qh_setprint(_IO_FILE*, char const*, setT*)
000757e0 t Q_URLDecode(char*, int, char const*, int)
000757b0 t Q_URLEncode(char*, int, char const*, int)
0015d640 t SmoothCurve(float)
00075070 t V_ParseLine(char const*, char*, int, bool*)
000725f0 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
00071820 t _V_strlower(char*)
000726e0 t V_vsnprintf(char*, int, char const*, char*)
000718b0 t _V_wcslower(wchar_t*)
00038d50 t WriteRandom(int*)
00074650 t AllocWString(wchar_t const*, int)
0015cd10 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
0015cbc0 t AngleIMatrix(QAngle const&, matrix3x4_t&)
0015cd60 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
0015bec0 t AngleVectors(QAngle const&, Vector*)
0015bf50 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00074cd0 t CopyMemory3D(void*, void const*, int, int, int, int, int, int, int)
00056ca0 t CreateSpring(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, springparams_t*)
0015b050 t CrossProduct(float const*, float const*, float*)
0005cbe0 t CrossProduct(Vector const&, Vector const&, Vector&) [clone .constprop.84]
00160b70 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0013cd46 t gbs_add_path(char*, char*)
0015a550 t _InvRSquared(float const*)
00025bd0 t IsPointInBox(Vector const&, Vector const&, Vector const&)
00053490 t IsZeroVector(IVP_U_Point const&)
00162660 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
0015a640 t MatrixAngles(matrix3x4_t const&, float*)
0015ddd0 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
0015a7c0 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
0015ae50 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
0007f190 t MurmurHash64(void const*, int, unsigned int)
0013d25a t p_get_string()
0003dd10 t PhysPmcBegin()
000c53f0 t qh_buildhull()
000d3b10 t qh_checkzero(unsigned int)
000afa70 t qh_delvertex(vertexT*)
000a1315 t qh_detjoggle(double*, int, int)
000c9ac0 t qh_detvridge(vertexT*)
000c6730 t qh_distplane(double*, facetT*, double*)
0009f40c t qh_distround(int, double, double)
000a03eb t qh_facetarea(facetT*)
000a5d6e t qh_freebuild(unsigned int)
000a6403 t qh_freeqhull(unsigned int)
000c7630 t qh_gausselim(double**, int, int, unsigned int*, unsigned int*)
000c7980 t qh_getcenter(setT*)
000d4600 t qh_hashridge(setT*, int, ridgeT*, vertexT*)
000b44ca t qh_initbuild()
000a70cf t qh_initflags(char*)
0009ec70 t qh_maxabsval(double*, int)
0009eccc t qh_minabsval(double*, int)
000bb01e t qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)
000ae453 t qh_newvertex(double*)
000c7f30 t qh_normalize(double*, int, unsigned int)
000ae069 t qh_point_add(setT*, double*, void*)
0009f247 t qh_pointdist(double*, double*, int)
000d9cf0 t qh_postmerge(char const*, double, double, unsigned int)
000c3ee0 t qh_precision(char const*)
000a27e6 t qh_scalelast(double*, int, int, double, double, double)
000b713f t qh_setaddnth(setT**, int, void*)
000b59e9 t qh_setappend(setT**, void*)
000b6342 t qh_setdelnth(setT*, int)
000b57d3 t qh_setlarger(setT**)
000b5a3a t qh_setunique(setT**, void*)
000cf500 t qh_skipfacet(facetT*)
0015e4c0 t QuaternionLn(Quaternion const&, Quaternion&)
0016ab20 t SeedRandSIMD(unsigned int)
00162ee0 t TriangleArea(Vector const&, Vector const&, Vector const&)
0015b580 t VectorAngles(float const*, float*)
0015c220 t VectorAngles(Vector const&, QAngle&)
0015c390 t VectorAngles(Vector const&, Vector const&, QAngle&)
0015b2d0 t VectorMatrix(Vector const&, matrix3x4_t&)
0015aa90 t VectorRotate(float const*, matrix3x4_t const&, float*)
0015ab20 t VectorRotate(Vector const&, Quaternion const&, Vector&)
0015cb00 t VectorRotate(Vector const&, QAngle const&, Vector&)
0015a600 t VectorsEqual(float const*, float const*)
00073630 t V_FixSlashes(char*, char)
00074ec0 t V_ParseToken(char const*, char*, int, bool*, characterset_t*)
000736f0 t V_PathsMatch(char const*, char const*)
000728a0 t V_pretifymem(float, int, bool)
00072ac0 t V_pretifynum(long long)
00071a20 t V_strcasecmp(char const*, char const*)
00072640 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
00162870 t AngleDistance(float, float)
00162720 t ApproachAngle(float, float, float)
0005d880 t FreeVisitHash(CVisitHash*)
0016f8a0 t GammaToLinear(float)
00075530 t iHexCharToInt(char)
00025c20 t IsPointInCone(Vector const&, Vector const&, Vector const&, float, float)
0016f8f0 t LinearToGamma(float)
0015b120 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00067320 t ParseKeyvalue(char const*, char*, char*)
0013d3d4 t p_make_string(char const*, ...)
00166a80 t PointsFromBox(Vector const&, Vector const&, Vector*)
00162f90 t PolyFromPlane(Vector*, Vector const&, float, float)
0013c75b t p_print_error()
000d99d0 t qh_all_merges(unsigned int, unsigned int)
000c6540 t qh_backnormal(double**, int, int, unsigned int, double*, unsigned int*)
000b06fd t qh_checkfacet(facetT*, unsigned int, unsigned int*)
000a0f2c t qh_copypoints(double*, int, int)
000a071d t qh_detsimplex(double*, setT*, int, unsigned int*)
000c9b70 t qh_detvridge3(vertexT*, vertexT*)
000ca1d0 t qh_geomplanes(facetT*, double*, double*)
000c8000 t qh_getcentrum(facetT*)
000d4720 t qh_makeridges(facetT*)
000a09b2 t qh_maxsimplex(int, setT*, double*, int, setT**)
000d8d00 t qh_mergecycle(facetT*, facetT*)
000d7f50 t qh_mergefacet(facetT*, facetT*, double*, double*, unsigned int)
000ae560 t qh_nearvertex(facetT*, double*, double*)
000c7b80 t qh_normalize2(double*, int, unsigned int, double*, unsigned int*)
000a0fc3 t qh_outerinner(facetT*, double*, double*)
000b3354 t qh_pointfacet()
000d1e10 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int)
000cc740 t qh_printfacet(_IO_FILE*, facetT*)
000adb96 t qh_printlists()
000cb5d0 t qh_printpoint(_IO_FILE*, char const*, double*)
000cb980 t qh_printridge(_IO_FILE*, ridgeT*)
000ba345 t qh_printstats(_IO_FILE*, int, int*)
000c99d0 t qh_printvnorm(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000ce360 t qh_readpoints(int*, int*, unsigned int*)
000ad7de t qh_resetlists(unsigned int)
000a3150 t qh_scaleinput()
000b65df t qh_setcompact(setT*)
000b503a t qh_setdellast(setT*)
000b7ceb t qh_setreplace(setT*, void*, void*)
000b5e78 t qh_settemppop()
000d72e0 t qh_tracemerge(facetT*, facetT*)
000d7f10 t qh_willdelete(facetT*, facetT*)
0015e060 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
0015e360 t QuaternionExp(Quaternion const&, Quaternion&)
0015ed40 t RotateBetween(Vector const&, Vector const&)
00162a50 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
00161460 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00073d20 t V_AppendSlash(char*, int, char)
00073080 t V_binarytohex(unsigned char const*, int, char*, int)
000751e0 t V_BinToString(char*, void*, unsigned int)
0015b020 t VectorCompare(float const*, float const*)
0015ac80 t VectorIRotate(float const*, matrix3x4_t const&, float*)
0015b1a0 t VectorVectors(Vector const&, Vector&, Vector&)
00072fe0 t V_hextobinary(char const*, int, unsigned char*, int)
000216c0 t vphysics_init()
00075db0 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
00075140 t V_StringToBin(char const*, void*, unsigned int)
000719b0 t V_strncasecmp(char const*, char const*, int)
00072ea0 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
00072f40 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
00063010 t AllocVisitHash()
001628d0 t AngleNormalize(float)
00162970 t AnglesAreEqual(float, float, float)
0015ce40 t AreBoundsValid(Vector const&, Vector const&)
0015bc30 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
00075510 t cIntToHexDigit(int)
0016a010 t ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
00160610 t Hermite_Spline(float, float, float, float)
00160470 t Hermite_Spline(float, float, float, float, float)
00160660 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
00160570 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
00160350 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00057f00 t IsVehicleWheel(IVP_Real_Object*)
001615e0 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00139bcf t ivp_byte_swap2(unsigned short&)
00139ba1 t ivp_byte_swap4(unsigned int&)
000ff2fd t ivp_dummy_func()
0013b4c7 t ivp_srand_read()
0016cd50 t MatrixMultiply(VMatrix const&, VMatrix const&, VMatrix&)
0016c990 t MatrixToAngles(VMatrix const&, QAngle&)
0013d2fa t p_export_error(char const*, ...)
000aaf99 t qh_appendfacet(facetT*)
000a4750 t qh_appendprint(qh_PRINT)
000afd81 t qh_checkconvex(facetT*, int)
000ae296 t qh_check_point(double*, facetT*, double*, double*, facetT**, facetT**)
000aef5a t qh_checkvertex(vertexT*)
000d16e0 t qh_countfacets(facetT*, setT*, unsigned int, int*, int*, int*, int*, int*)
0009fc00 t qh_determinant(double**, int, unsigned int*)
000a2074 t qh_detroundoff()
000c9d20 t qh_eachvoronoi(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), vertexT*, unsigned int, qh_RIDGE, unsigned int)
000ca100 t qh_facet2point(facetT*, double**, double**, double*)
000a46be t qh_facetcenter(setT*)
000c7210 t qh_findbestnew(double*, facetT*, double*, unsigned int*, int*)
000c4970 t qh_findhorizon(double*, facetT*, int*, int*)
000a612f t qh_freebuffers()
000af21c t qh_furthestout(facetT*)
000c7a60 t qh_getdistance(facetT*, facetT*, double*, double*)
000d6f20 t qh_getmergeset(facetT*)
000b250b t qh_initialhull(setT*)
000a2a88 t qh_joggleinput()
000d02d0 t qh_markvoronoi(facetT*, setT*, unsigned int, unsigned int*, int*)
000d5830 t qh_mergeridges(facetT*, facetT*)
000d5df0 t qh_newvertices(setT*)
000ad753 t qh_nextridge3d(ridgeT*, facetT*, vertexT**)
000b9b64 t qh_nostatistic(int)
000ae344 t qh_outcoplanar()
000b3232 t qh_pointvertex()
000cf9c0 t qh_printafacet(_IO_FILE*, int, facetT*, unsigned int)
000ca650 t qh_printcenter(_IO_FILE*, int, char const*, facetT*)
000d2d60 t qh_printfacets(_IO_FILE*, int, facetT*, setT*, unsigned int)
0009f1a1 t qh_printmatrix(_IO_FILE*, char const*, double**, int, int)
000cc890 t qh_printpoint3(_IO_FILE*, double*)
0009f0e4 t qh_printpoints(_IO_FILE*, char const*, setT*)
000cb6c0 t qh_printvertex(_IO_FILE*, vertexT*)
000c9150 t qh_printvridge(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000cc7f0 t qh_projectdim3(double*, double*)
000aad6f t qh_removefacet(facetT*)
000a2f03 t qh_rotateinput(double**)
000a1560 t qh_scalepoints(double*, int, int, double*, double*)
000a298e t qh_setdelaunay(int, int, double*)
000ce230 t qh_setfeasible(int)
000b544c t qh_setfreelong(setT**)
000b6747 t qh_settempfree(setT**)
000b5ab0 t qh_settemppush(setT*)
000b648b t qh_settruncate(setT*, int)
0015e120 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
00075840 t Q_URLDecodeRaw(char*, int, char const*, int)
00075810 t Q_URLEncodeRaw(char*, int, char const*, int)
0015c640 t SetScaleMatrix(float, float, float, matrix3x4_t&)
0015ceb0 t SolveQuadratic(float, float, float, float&, float&)
000713a0 t Sys_GetFactory(CSysModule*)
000713e0 t Sys_GetFactory(char const*)
00071170 t Sys_LoadModule(char const*)
00064b90 t TraceGetAABB_r(Vector*, Vector*, IVP_Compact_Ledgetree_Node const*, CTraceIVP&)
0005b3c0 t VirtualMeshPSI()
00075a30 t V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)
00075ba0 t V_RandomString(int)
00073550 t V_SetExtension(char*, char const*, int)
00075c70 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
00075f20 t V_SplitWString(wchar_t const*, wchar_t const*, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
000737f0 t V_StripLastDir(char*, int)
00074e50 t V_TokenWaiting(char const*)
00072730 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
0015f160 t AngleQuaternion(RadianEuler const&, Quaternion&)
0015f270 t AngleQuaternion(QAngle const&, Quaternion&)
0015b420 t AngleVectorsFLU(QAngle const&, Vector*, Vector*, Vector*)
0016f480 t BuildGammaTable(float, float, float, int)
001633a0 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
0015b6e0 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
0006ccd0 t ConVar_Register(int, IConCommandBaseAccessor*)
0002ba60 t ConvertBoxToIVP(Vector const&, Vector const&, Vector&, Vector&)
00071100 t GetModuleHandle(char const*)
00027e30 t GetNonMajorAxes(Vector const&, Vector2D&)
0015a5a0 t InitSinCosTable()
0015ce70 t IsPointInBounds(Vector const&, Vector const&, Vector const&)
0016fcc0 t LinearToTexture(float)
0015afb0 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
0016d3f0 t MatrixInverseTR(VMatrix const&, VMatrix&)
0015a820 t MatrixNormalize(matrix3x4_t const&, matrix3x4_t&)
0015afe0 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
0015c800 t MatrixTranspose(matrix3x4_t&)
0015c830 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
0016cb10 t MatrixTranspose(VMatrix const&, VMatrix&)
000aaf0f t qh_appendvertex(vertexT*)
000d3930 t qh_basevertices(facetT*)
000c3520 t qh_buildtracing(double*, facetT*)
000d3a10 t qh_checkconnect()
000ab5ae t qh_checkflipped(facetT*, double*, unsigned int)
000b3633 t qh_check_maxout()
000b294e t qh_check_output()
000b4037 t qh_check_points()
000b12e3 t qh_checkpolygon(facetT*)
000afaca t qh_clearcenters(qh_CENTER)
0009ea20 t qh_crossproduct(int, double*, double*, double*)
000b0510 t qh_facet3vertex(facetT*)
000af7a3 t qh_findgood_all(facetT*)
0009f9ba t qh_findgooddist(double*, facetT*, double*, facetT**)
000d8800 t qh_forcedmerges(unsigned int*)
000b03cd t qh_furthestnext()
0009f2b6 t qh_gram_schmidt(int, double**)
000ae105 t qh_infiniteloop(facetT*)
0009eb0d t qh_inthresholds(double*, double*)
000acc5a t qh_makenewfacet(setT*, unsigned int, facetT*)
000aaa42 t qh_memfreeshort(int*, int*)
000d5510 t qh_mergefacet2d(facetT*, facetT*)
000d5e40 t qh_mergesimplex(facetT*, facetT*, unsigned int)
000ae627 t qh_nearcoplanar()
000adfe5 t qh_newhashtable(int)
000c3930 t qh_nextfurthest(facetT**)
000c4530 t qh_partitionall(setT*, double*, int)
000add2d t qh_prependfacet(facetT*, facetT**)
000cdc10 t qh_printcentrum(_IO_FILE*, facetT*, double)
000cb4f0 t qh_printpointid(_IO_FILE*, char const*, int, double*, int)
000cc910 t qh_printspheres(_IO_FILE*, setT*, double)
000c5c30 t qh_printsummary(_IO_FILE*)
000d0510 t qh_printvoronoi(_IO_FILE*, int, facetT*, setT*, unsigned int)
000a3257 t qh_projectinput()
000c7f70 t qh_projectpoint(double*, facetT*, double)
000a12a2 t qh_randomfactor()
000a11d8 t qh_randommatrix(double*, int, double**)
000cdfd0 t qh_readfeasible(int, char*)
000aaceb t qh_removevertex(vertexT*)
000d6740 t qh_renamevertex(vertexT*, vertexT*, setT*, facetT*, facetT*)
000a1ef1 t qh_rotatepoints(double*, int, int, double**)
000b7329 t qh_setaddsorted(setT**, void*)
000b5088 t qh_setdelsorted(setT*, void*)
000b7a83 t qh_setduplicate(setT*, int)
000a18eb t qh_sethalfspace(int, double*, double**, double*, double*, double*)
000d74a0 t qh_tracemerging()
000d7550 t qh_updatetested(facetT*, facetT*)
000d76d0 t qh_vertexridges(vertexT*)
000ad91b t qh_vertexsubset(setT*, setT*)
0015d710 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
0015dd80 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
0015df50 t QuaternionScale(Quaternion const&, float, Quaternion&)
0015d9c0 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
001612f0 t RangeCompressor(float, float, float, float)
0016fc90 t TextureToLinear(int)
0015a4d0 t VectorNormalize(Vector&)
0015a950 t VectorTransform(float const*, matrix3x4_t const&, float*)
0015d450 t VectorYawRotate(Vector const&, float, Vector&)
00074380 t V_FixupPathName(char*, int, char const*)
00075de0 t V_SplitWString2(wchar_t const*, wchar_t const**, int, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
000735e0 t V_StripFilename(char*)
0015ce00 t AddPointToBounds(Vector const&, Vector&, Vector&)
0015b950 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00139f64 t ivp_free_aligned(void*)
00139b9c t ivp_memory_check(void*)
0015ade0 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
0016ed70 t MatrixBuildOrtho(VMatrix&, double, double, double, double, double, double)
0016dd90 t MatrixBuildScale(VMatrix&, float, float, float)
0016dde0 t MatrixBuildScale(VMatrix&, Vector const&)
0016c930 t MatrixFromAngles(QAngle const&, VMatrix&)
0015ad10 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
0015f410 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
0015b0d0 t MatrixVectorsFLU(matrix3x4_t const&, Vector*, Vector*, Vector*)
000bdc70 t p_ab_quad_length(P_Sur_2D_Point*, P_Sur_2D_Point*, P_Sur_2D_Point*)
00069f00 t PackVCollideText(char const*, int, int*)
00161030 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000bccc0 t p_check_for_flat(IVP_Tri_Edge*, IVP_Tri_Edge*, float)
0013d024 t p_get_next_token()
000b9a28 t qh_allstatistics()
000d3ea0 t qh_copynonconvex(ridgeT*)
000afb84 t qh_createsimplex(setT*)
000ac6cc t qh_deletevisible()
000d0c00 t qh_facetvertices(facetT*, setT*, unsigned int)
000b4d47 t qh_findbestfacet(double*, unsigned int, double*, unsigned int*)
0009f53d t qh_findbestsharp(double*, facetT**, double*, int*)
000d42f0 t qh_findbest_test(unsigned int, facetT*, facetT*, facetT**, double*, double*, double*)
000ae146 t qh_findfacet_all(double*, double*, unsigned int*, int*)
000d9710 t qh_flippedmerges(facetT*, unsigned int*)
000a4b2f t qh_initqhull_mem()
000aed9e t qh_makenewfacets(double*)
000ab2ac t qh_makenewplanes()
000aba2f t qh_matchneighbor(facetT*, int, int, int*)
000aae19 t qh_matchvertices(int, setT*, int, setT*, int*, unsigned int*)
000aa336 t qh_memstatistics(_IO_FILE*)
000d5b00 t qh_mergevertices(setT*, setT**)
0009f4bf t qh_orientoutside(facetT*)
000cf5b0 t qh_printend4geom(_IO_FILE*, facetT*, int*, unsigned int)
000d1290 t qh_printextremes(_IO_FILE*, facetT*, setT*, int)
000d0b00 t qh_printvdiagram(_IO_FILE*, int, facetT*, setT*, unsigned int)
000cb8f0 t qh_printvertices(_IO_FILE*, char const*, setT*)
0009ee47 t qh_projectpoints(signed char*, int, double*, int, int, double*, int)
000b6f0c t qh_setappend_set(setT**, setT*)
000b5161 t qh_setequal_skip(setT*, int, setT*, int)
000c89e0 t qh_setfacetplane(facetT*)
000bacd0 t qh_user_memsizes()
0015f5d0 t QuaternionAngles(Quaternion const&, RadianEuler&)
0015ee90 t QuaternionAngles(Quaternion const&, QAngle&)
0015da50 t QuaternionInvert(Quaternion const&, Quaternion&)
0015e7a0 t QuaternionLookAt(Vector const&, Vector const&, Quaternion&)
0015e900 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
0015eb70 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
0015eaa0 t QuaternionMatrix(Quaternion const&, Vector const&, Vector const&, matrix3x4_t&)
00166920 t RandomQuaternion(IUniformRandomStream*)
001662b0 t RandomQuaternion()
00028080 t ResolveQuadratic(double, double, Vector, Vector, Vector, Vector, Vector, Vector, int, double&, double&)
000665d0 t SetCollisionPair(void*)
0016b0e0 t SetupMatrixScale(Vector const&)
0015bc00 t SignbitsForPlane(cplane_t*)
0015f640 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
00071390 t Sys_UnloadModule(CSysModule*)
00064760 t TraceGetExtent_r(IVP_Compact_Ledgetree_Node const*, CTraceIVP&, Vector const&, float&, Vector&)
0016d360 t Vector3DMultiply(VMatrix const&, Vector const&, Vector&)
0016d160 t Vector4DMultiply(VMatrix const&, Vector4D const&, Vector4D&)
0015a9f0 t VectorITransform(float const*, matrix3x4_t const&, float*)
00074130 t V_IsAbsolutePath(char const*)
00074c50 t V_StringToVector(float*, char const*)
000733a0 t V_StripExtension(char const*, char*, int)
00072d60 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
00072e10 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
00072d10 t _V_UnicodeToUTF8(wchar_t const*, char*, int)
00072cc0 t _V_UTF8ToUnicode(char const*, wchar_t*, int)
0015f380 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
0006c470 t CharacterSetBuild(characterset_t*, char const*)
00051da0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, float, float, float, float, IVP_U_Float_Point*)
00051fa0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, IVP_U_Float_Point const&, float, float, IVP_U_Float_Point*)
0007f390 t ConnectInterfaces(void* (**)(char const*, int*), int)
0006cd90 t ConVar_Unregister()
0002bc60 t ConvertMatrixToHL(IVP_U_Matrix const&, matrix3x4_t&)
0005ba30 t CreateVirtualMesh(virtualmeshparams_t const&)
00166de0 t FindPointInPlanes(float const*, int)
0013d19f t GBS_remove_escape(char*)
00167f60 t GetTempPolyhedron(unsigned short, unsigned short, unsigned short, unsigned short)
000753d0 t isbreakablewspace(wchar_t)
0013f970 t ivp_indent_output()
0016c8f0 t MatrixSetIdentity(VMatrix&)
000bdc30 t p_count_reachable(P_Sur_2D_Point*)
0016b620 t PlaneIntersection(VPlane const&, VPlane const&, VPlane const&, Vector&)
000d37e0 t qh_appendmergeset(facetT*, facetT*, mergeType, double*)
000b3bc8 t qh_check_bestdist()
000ab337 t qh_facetintersect(facetT*, facetT*, int*, int*, int)
000d77f0 t qh_find_newvertex(vertexT*, setT*, setT*)
000b9a53 t qh_freestatistics()
000d4660 t qh_hashridge_find(setT*, int, ridgeT*, vertexT*, vertexT*, int*)
000ba4c8 t qh_initstatistics()
000a6489 t qh_initthresholds(char*)
000d4900 t qh_mark_dupridges(facetT*)
000ac045 t qh_matchnewfacets()
000aa946 t qh_meminitbuffers(int, int, int, int, int)
000d8f70 t qh_mergecycle_all(facetT*, unsigned int*)
000d56d0 t qh_mergeneighbors(facetT*, facetT*)
000c3f60 t qh_partitionpoint(double*, facetT*)
000bad20 t qh_printfacetlist(facetT*, setT*, unsigned int)
000addcf t qh_printhashtable(_IO_FILE*)
000cca10 t qh_printline3geom(_IO_FILE*, double*, double*, double*)
000ccbb0 t qh_printpointvect(_IO_FILE*, double*, double*, double*, double, double*)
000b9c5f t qh_printstatlevel(_IO_FILE*, int, int)
000cb610 t qh_printvdiagram2(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), setT*, qh_RIDGE, unsigned int)
000d3360 t qh_produce_output()
000d9550 t qh_reducevertices()
000b3023 t qh_setvoronoi_all()
000ac827 t qh_updatevertices()
000a3cfe t qh_voronoi_center(int, setT*)
0007f2b0 t RegisterInterface(void* (*)(char const*, int*), char const*, void**)
0004f2e0 t SavePhysicsObject(physsaveparams_t const&, CPhysicsObject*)
00056ef0 t SavePhysicsSpring(physsaveparams_t const&, CPhysicsSpring*)
0015c5c0 t SetIdentityMatrix(matrix3x4_t&)
000664d0 t SetSelfCollisions(void*)
0016c960 t SetupMatrixAngles(QAngle const&)
0015d690 t SmoothCurve_Tweak(float, float, float)
0016f940 t SrgbGammaToLinear(float)
0016f9d0 t SrgbLinearToGamma(float)
00071a40 t StringAfterPrefix(char const*, char const*)
00071410 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
00162df0 t TetrahedronVolume(Vector const&, Vector const&, Vector const&, Vector const&)
00166890 t UnitTestVectorFLU()
00073de0 t V_ComposeFileName(char const*, char const*, char*, int)
00073990 t V_ExtractFilePath(char const*, char*, int)
00074c80 t V_StringToColor32(color32_s*, char const*)
0016fa60 t X360GammaToLinear(float)
0016fbc0 t X360LinearToGamma(float)
00160fb0 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00161d80 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
0015f780 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00168200 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector(4) const*, int, float, bool, float __vector(4))
00168200 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector const*, int, float, bool, float __vector)
0006dcc0 t ConVar_AppendFlags(ConCommandBase const*, char*, unsigned int)
0002baf0 t ConvertMatrixToIVP(matrix3x4_t const&, IVP_U_Matrix&)
0005bac0 t DestroyVirtualMesh(CPhysCollide*)
0003d3f0 t GetOppositeSynapse(IVP_Synapse_Friction*)
0016ac50 t GetSIMDRandContext()
0007ec50 t HashStringCaseless(char const*)
00139e24 t ivp_malloc_aligned(int, int)
001626f0 t MathLib_MMXEnabled()
00162700 t MathLib_SSEEnabled()
0016dd00 t MatrixBuildRotateZ(VMatrix&, float)
0013d47c t p_make_string_fast(char const*, ...)
00163220 t PolyFromPlane_SIMD(float __vector(4)*, float __vector(4) const&, float)
00163220 t PolyFromPlane_SIMD(float __vector*, float __vector const&, float)
0013d10f t p_read_first_token(_IO_FILE*)
000ab6b8 t qh_attachnewfacets()
000c9fc0 t qh_eachvoronoi_all(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), unsigned int, qh_RIDGE, unsigned int)
000b29f4 t qh_initialvertices(int, setT*, double*, int)
000a49ae t qh_initqhull_start(_IO_FILE*, _IO_FILE*, _IO_FILE*)
000ae7f8 t qh_matchduplicates(facetT*, int, int, int*)
000d4ad0 t qh_maydropneighbor(facetT*)
000d8510 t qh_merge_nonconvex(facetT*, facetT*, mergeType)
000d5920 t qh_mergevertex_del(vertexT*, facetT*, facetT*)
000d1150 t qh_printextremes_d(_IO_FILE*, facetT*, setT*, int)
000ca9e0 t qh_printfacet2geom(_IO_FILE*, facetT*, double*)
000cab40 t qh_printfacet2math(_IO_FILE*, facetT*, int)
000cae60 t qh_printfacet3math(_IO_FILE*, facetT*, int)
000d13b0 t qh_printpoints_out(_IO_FILE*, facetT*, setT*, int)
000cccb0 t qh_printpointvect2(_IO_FILE*, double*, double*, double*, double)
000ba7c5 t qh_printstatistics(_IO_FILE*, char const*)
000d0d80 t qh_printvertexlist(_IO_FILE*, char const*, facetT*, setT*, unsigned int)
000d18e0 t qh_printvneighbors(_IO_FILE*, facetT*, setT*, unsigned int)
000b61e7 t qh_setdelnthsorted(setT*, int)
000b50dc t qh_setequal_except(setT*, void*, setT*, void*)
000b55f2 t qh_settempfree_all()
000d7130 t qh_test_vneighbors()
000b2f6b t qh_vertexintersect(setT**, setT*)
000ad9ec t qh_vertexneighbors()
0015db00 t QuaternionMultiply(Quaternion const&, Vector const&, Vector&)
0007f4e0 t ReconnectInterface(void* (*)(char const*, int*), char const*)
0007f310 t ReconnectInterface(void* (*)(char const*, int*), char const*, void**)
0016b270 t SetupMatrixAxisRot(Vector const&, float)
000713d0 t Sys_GetFactoryThis()
001668f0 t UnitTestQuatExpLog()
00075990 t V_BoyerMooreSearch(unsigned char const*, int, unsigned char const*, int)
00073470 t V_DefaultExtension(char*, char const*, int)
00073670 t V_FixDoubleSlashes(char*)
00073a30 t V_GetFileExtension(char const*)
00074160 t V_MakeAbsolutePath(char*, int, char const*, char const*)
00073ea0 t V_MakeRelativePath(char const*, char const*, char*, int)
00073b00 t V_RemoveDotSlashes(char*, char)
00074a60 t V_StringToIntArray(int*, int, char const*)
0015f0f0 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
00166b20 t BuildTransformedBox(Vector*, Vector const&, Vector const&, matrix3x4_t const&)
0002bed0 t ConvertRotationToHL(IVP_U_Quat const&, QAngle&)
0002bd00 t ConvertRotationToHL(IVP_U_Matrix3 const&, QAngle&)
000504d0 t CreatePhysicsObject(CPhysicsEnvironment*, CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*, bool)
000502a0 t CreatePhysicsSphere(CPhysicsEnvironment*, float, int, Vector const&, QAngle const&, objectparams_t*, bool)
00097a6f t debug_sphere_output(IVV_Sphere*)
00160500 t Hermite_SplineBasis(float, float*)
00026aa0 t IntersectRayWithBox(Ray_t const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
000268b0 t IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, CBaseTrace*, float*)
00026790 t IntersectRayWithBox(Vector const&, Vector const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
000271f0 t IntersectRayWithOBB(Ray_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
00027cb0 t IntersectRayWithOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
00026c70 t IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, CBaseTrace*)
00026bf0 t IntersectRayWithOBB(Vector const&, Vector const&, matrix3x4_t const&, Vector const&, Vector const&, float, BoxTraceInfo_t*)
000270b0 t IntersectRayWithOBB(Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, CBaseTrace*)
00026380 t IntersectRayWithRay(Ray_t const&, Ray_t const&, float&, float&)
000f2d7a t ivp_print_mi_matrix(int, int, IVP_MI_Vector**)
0016fd00 t LinearToScreenGamma(float)
00162710 t MathLib_SSE2Enabled()
0016daa0 t MatrixBuildRotation(VMatrix&, Vector const&, Vector const&)
0002ca80 t PackLedgeIntoBuffer(packedhull_t*, CUtlBuffer&, IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000af0d5 t qh_checkflipped_all(facetT*)
000d43c0 t qh_findbestneighbor(facetT*, double*, double*, double*)
000c42b0 t qh_partitionvisible(unsigned int, int*)
000d1c30 t qh_printextremes_2d(_IO_FILE*, facetT*, setT*, int)
000cbd50 t qh_printfacetheader(_IO_FILE*, facetT*)
000cba80 t qh_printfacetridges(_IO_FILE*, facetT*)
000d7bd0 t qh_redundant_vertex(vertexT*)
000b5998 t qh_setappend2ndlast(setT**, void*)
000a1d72 t qh_sethalfspace_all(int, int, double*, double*)
000d69b0 t qh_test_appendmerge(facetT*, facetT*)
0015e270 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
0015f060 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
0015da10 t QuaternionConjugate(Quaternion const&, Quaternion&)
0015eec0 t QuaternionionGetYaw(Quaternion const&)
0015dc00 t QuaternionNormalize(Quaternion&)
00075660 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
00075560 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
0016b030 t SetupMatrixIdentity()
0016fc70 t SrgbGammaTo360Gamma(float)
0002bfb0 t TransformIVPToLocal(IVP_U_Point&, IVP_Real_Object*, bool)
0002bf00 t TransformIVPToLocal(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002c0d0 t TransformLocalToIVP(IVP_U_Point&, IVP_Real_Object*, bool)
0002bff0 t TransformLocalToIVP(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002c110 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002c1f0 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Float_Point&, IVP_Real_Object*, bool)
00162110 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
001636c0 t ClipPolyToPlane_SIMD(float __vector(4)*, int, float __vector(4)*, float __vector(4) const&, float)
001636c0 t ClipPolyToPlane_SIMD(float __vector*, int, float __vector*, float __vector const&, float)
00162d20 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
0002bc30 t ConvertRotationToIVP(QAngle const&, IVP_U_Quat&)
0002bba0 t ConvertRotationToIVP(QAngle const&, IVP_U_Matrix3&)
0003e830 t CreateObjectPairHash()
000344e0 t CreateSurfaceManager(CPhysCollide const*, short&)
0007f490 t DisconnectInterfaces()
00164130 t GenerateOrthoFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float, VPlane*)
00165cf0 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
00025cc0 t IsBoxIntersectingBox(Vector const&, Vector const&, Vector const&, Vector const&)
00026030 t IsBoxIntersectingRay(Vector const&, Vector const&, Ray_t const&, float)
00025df0 t IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, float)
00025f20 t IsBoxIntersectingRay(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float)
00026280 t IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, Ray_t const&, float __vector(4) const&)
000261b0 t IsBoxIntersectingRay(float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&, float __vector(4) const&)
00026280 t IsBoxIntersectingRay(float __vector const&, float __vector const&, Ray_t const&, float __vector const&)
000261b0 t IsBoxIntersectingRay(float __vector const&, float __vector const&, float __vector const&, float __vector const&, float __vector const&, float __vector const&)
00038de0 t IsExternalConstraint(IVP_Controller*, void*)
00029080 t IsOBBIntersectingOBB(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float)
000290e0 t IsRayIntersectingOBB(Ray_t const&, Vector const&, QAngle const&, Vector const&, Vector const&)
0004e090 t MaterialIndexDataOps()
0016bff0 t MatrixInverseGeneral(VMatrix const&, VMatrix&)
0015f440 t MatrixQuaternionFast(matrix3x4_t const&, Quaternion&)
00166700 t MatrixQuaternionTest(unsigned int)
0016d890 t MatrixTransformPlane(VMatrix const&, cplane_t const&, cplane_t&)
0007f110 t MurmurHash2LowerCase(char const*, unsigned int)
000bf1f0 t p_link_triangle_self(IVP_Triangle*)
000c5660 t qh_build_withrestart()
000b9e55 t qh_collectstatistics()
0009fd78 t qh_facetarea_simplex(int, double*, setT*, vertexT*, unsigned int, double*, double*)
000a5a36 t qh_initqhull_buffers()
000a4c39 t qh_initqhull_globals(double*, int, int, unsigned int)
000d8be0 t qh_mergecycle_facets(facetT*, facetT*)
000d4fc0 t qh_mergecycle_ridges(facetT*, facetT*)
000c3c20 t qh_partitioncoplanar(double*, facetT*, double*)
000cb050 t qh_printfacet3vertex(_IO_FILE*, facetT*, int)
000d3630 t qh_printneighborhood(_IO_FILE*, int, facetT*, facetT*, unsigned int)
000d65b0 t qh_renameridgevertex(ridgeT*, vertexT*, vertexT*)
000c80d0 t qh_sethyperplane_det(int, double**, double*, unsigned int, double*, double*, unsigned int*)
0015e0d0 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
0015ef40 t QuaternionionGetRoll(Quaternion const&)
0015ef80 t QuaternionVectorsFLU(Quaternion const&, Vector*, Vector*, Vector*)
00050770 t RestorePhysicsObject(physrestoreparams_t const&, CPhysicsObject**)
00056f50 t RestorePhysicsSpring(physrestoreparams_t const&, CPhysicsSpring**)
00038d00 t SeedRandomGenerators()
00036a50 t set_4x4_column_major(IVP_U_Matrix&, float const*)
000664b0 t SetMassCenterPointer(void*)
0016c8c0 t SetupMatrixOrgAngles(Vector const&, QAngle const&)
00065ba0 t Trace_CreateAABBTree(CPhysCollide const*)
0015a400 t _VectorNormalizeFast(Vector&)
00074b40 t V_StringToFloatArray(float*, int, char const*)
00073240 t V_StripTrailingSlash(char*)
0015c0c0 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
00161e00 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
00161a60 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
0016fd40 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
000762a0 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
0003a700 t CreateFixedConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00045510 t CreateFluidController(IVP_Environment*, CPhysicsObject*, fluidparams_t*)
0003ad90 t CreateHingeConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
0006c670 t DefaultCompletionFunc(char const*, char (*) [64])
00053400 t GetObjectPosition_IVP(IVP_U_Point&, IVP_Real_Object*)
0015bb90 t GreatestCommonDivisor(int, int)
000265c0 t IntersectRayWithPlane(Ray_t const&, cplane_t const&)
00026640 t IntersectRayWithPlane(Vector const&, Vector const&, cplane_t const&)
000266c0 t IntersectRayWithPlane(Vector const&, Vector const&, Vector const&, float)
00074050 t LengthOfMatchingPaths(char const*, char const*)
001663f0 t MatrixQuaternionTest2(unsigned int)
00105911 t out_friction_info_obj(IVP_Core*)
000c2340 t P_THREE_CHECK_INTRUDE(int, int, int, int, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge**, IVP_U_Hesse*, IVP_U_Hesse*, IVP_Tri_Edge**, float*, IVP_U_Point&, IVP_Intrusion_Status*)
000a5bcb t qh_init_qhull_command(int, char**)
000ad2c3 t qh_makenew_simplicial(facetT*, vertexT*, int*)
000bac72 t qh_printallstatistics(_IO_FILE*, char const*)
000d0e00 t qh_printhelp_singular(_IO_FILE*)
000d7640 t qh_vertexridges_facet(vertexT*, facetT*, setT**)
00027ea0 t QuadWithParallelEdges(Vector const&, Vector const&, float, Vector const&, float, Vector const&, Vector2D&)
0015ef00 t QuaternionionGetPitch(Quaternion const&)
00038e70 t SavePhysicsConstraint(physsaveparams_t const&, CPhysicsConstraint*)
0016b130 t SetupMatrixProjection(Vector const&, VPlane const&)
0016bd60 t SetupMatrixReflection(VPlane const&)
0015cf70 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
00071160 t Sys_IsDebuggerPresent()
00065650 t Trace_DestroyAABBTree(CPhysCollideAABBTree*)
00165ee0 t UnitTestRotateBetween()
0016fdb0 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
000746c0 t V_GetCurrentDirectory(char*, int)
000746f0 t V_SetCurrentDirectory(char const*)
00073920 t V_UnqualifiedFileName(char const*)
00162930 t AngleNormalizePositive(float)
00161b40 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
00161cf0 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
00162b00 t ClipLineSegmentToPlane(Vector const&, Vector const&, Vector*, Vector*, float)
0016aa20 t ComputePlanarDistances(GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector(4))
0016aa20 t ComputePlanarDistances(GeneratePolyhedronFromPlanes_UnorderedPointLL*, int, float __vector)
00028ef0 t ComputeSeparatingPlane(Vector const&, QAngle const&, Vector const&, Vector const&, Vector const&, QAngle const&, Vector const&, Vector const&, float, cplane_t*)
00046200 t CreateFrictionSnapshot(IVP_Real_Object*)
00039ea0 t CreateLengthConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
000498f0 t CreateMotionController(CPhysicsEnvironment*, IMotionEvent*, bool)
00050180 t CreateObjectFromBuffer(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, bool)
00055ff0 t CreatePlayerController(CPhysicsObject*, bool)
0003a340 t CreatePulleyConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000546d0 t CreateShadowController(CPhysicsObject*, bool, bool)
00046290 t DeleteAllFrictionPairs(IVP_Real_Object*, IVP_Real_Object*)
0016f400 t GammaToLinearFullRange(float)
000763e0 t GetNoEscCharConversion()
00092b30 t hk_precache_invert_5x5()
000259b0 t IntersectRayWithSphere(Vector const&, Vector const&, Vector const&, float, float*, float*)
000be340 t ivp_check_for_opposite(IVP_Hash*, IVP_Poly_Point*, IVP_Poly_Point*, IVP_Tri_Edge*)
0016f440 t LinearToGammaFullRange(float)
0002b100 t LineCircleIntersection(Vector2D const&, float, Vector2D const&, Vector2D const&, float*, float*)
0016de30 t MatrixBuildPerspective(VMatrix&, float, float, float, float)
0016d9b0 t MatrixBuildTranslation(VMatrix&, float, float, float)
0016da00 t MatrixBuildTranslation(VMatrix&, Vector const&)
0016cc00 t MatrixInverseTranspose(matrix3x4_t const&, matrix3x4_t&)
0016cbd0 t MatrixInverseTranspose(VMatrix const&, VMatrix&)
00034500 t OutputCollideDebugInfo(CPhysCollide const*)
000bcc00 t p_del_double_triangles(IVP_Triangle**, IVP_Triangle**, IVP_Triangle**)
000c9210 t qh_compare_vertexpoint(void const*, void const*)
000d6d90 t qh_getmergeset_initial(facetT*)
000d7c90 t qh_rename_sharedvertex(vertexT*, facetT*)
000c8800 t qh_sethyperplane_gauss(int, double**, double*, unsigned int, double*, double*, unsigned int*)
000b7599 t qh_setnew_delnthsorted(setT*, int, int, int)
000adaf8 t qh_vertexintersect_new(setT*, setT*)
0015dd20 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0015d7a0 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0016aca0 t ReleaseSIMDRandContext(int)
001673b0 t RemoveDegeneratePoints(GeneratePolyhedronFromPlanes_Polygon*, CClipLinkedGeometryDestructors&)
001629c0 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
0016b070 t SetupMatrixTranslation(Vector const&)
00073ab0 t V_ExtractFileExtension(char const*, char*, int)
00073a90 t V_GetFileExtensionSafe(char const*)
00072110 t V_normalizeFloatString(char*)
00075410 t V_StringMatchesPattern(char const*, char const*, int)
00161c30 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
00162180 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
001639c0 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0006dd60 t ConVar_PrintDescription(ConCommandBase const*)
00071050 t CreateInterfaceInternal(char const*, int*)
0003b6d0 t CreateRagdollConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
00039a90 t CreateSlidingConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0005aab0 t CreateVehicleController(CPhysicsEnvironment*, CPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
00068960 t CreateVPhysicsKeyParser(char const*, bool)
00160c80 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00046270 t DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
000533e0 t DestroyPlayerController(IPhysicsPlayerController*)
0016e5a0 t FrustumPlanesFromMatrix(VMatrix const&, Frustum_t&)
00164dd0 t GenerateOrthoFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float, VPlane*)
00026740 t IntersectRayWithAAPlane(Vector const&, Vector const&, int, float, float)
00025500 t IsBoxIntersectingSphere(Vector const&, Vector const&, Vector const&, float)
00025740 t IsRayIntersectingSphere(Vector const&, Vector const&, Vector const&, float, float)
00160730 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0016ee70 t MatrixBuildPerspectiveX(VMatrix&, double, double, double, double)
000bfa80 t p_calc_min_intrude_dist(IVP_Triangle*, IVP_Intrusion_Status*, float)
000d4ce0 t qh_mergecycle_neighbors(facetT*, facetT*)
000d9200 t qh_merge_degenredundant()
000cb3b0 t qh_printhelp_degenerate(_IO_FILE*)
000d6400 t qh_remove_extravertices(facetT*)
0015dc90 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
00167220 t RemoveDegeneratePolygon(GeneratePolyhedronFromPlanes_Polygon*, CClipLinkedGeometryDestructors&)
00162090 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00165860 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
0015b870 t ConcatTransforms_Aligned(matrix3x4a_t const&, matrix3x4a_t const&, matrix3x4a_t&)
0003e1e0 t CreatePhysicsEnvironment()
00067300 t DestroyVPhysicsKeyParser(IVPhysicsKeyParser*)
000762b0 t DisconnectTier1Libraries()
00166ea0 t FindConvexShapeLooseAABB(float __vector(4) const*, int, Vector*, Vector*)
00166ea0 t FindConvexShapeLooseAABB(float __vector const*, int, Vector*, Vector*)
000763d0 t GetCStringCharConversion()
0003d410 t GetOppositeSynapseObject(IVP_Synapse_Friction*)
0004df00 t GetWorldCoordFromSynapse(IVP_Synapse_Friction*, IVP_U_Point&)
00024d00 t IntersectRayWithTriangle(Ray_t const&, Vector const&, Vector const&, Vector const&, bool)
00025a50 t IsSphereIntersectingCone(Vector const&, float, Vector const&, Vector const&, float, float)
00166570 t MatrixQuaternionFastTest(unsigned int)
000282f0 t PointInQuadToBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, Vector2D&)
0004f3e0 t PostRestorePhysicsObject()
000d3f40 t qh_degen_redundant_facet(facetT*)
000acf67 t qh_makenew_nonsimplicial(facetT*, vertexT*, int*)
000d5360 t qh_mergecycle_vneighbors(facetT*, facetT*)
000d59a0 t qh_mergevertex_neighbors(facetT*, facetT*)
000ca500 t qh_order_vertexneighbors(vertexT*)
0015f020 t QuaternionVectorsForward(Quaternion const&, Vector*)
00166220 t RandomVectorInUnitCircle(Vector2D*)
00166190 t RandomVectorInUnitSphere(IUniformRandomStream*)
00166060 t RandomVectorInUnitSphere(Vector*)
00166170 t RandomVectorInUnitSphere()
00165f70 t RandomVectorOnUnitSphere(IUniformRandomStream*)
00165e00 t RandomVectorOnUnitSphere()
00039040 t RestorePhysicsConstraint(physrestoreparams_t const&, CPhysicsConstraint**)
0016b3d0 t SetupMatrixAxisToAxisRot(Vector const&, Vector const&)
0016d290 t Vector4DMultiplyPosition(VMatrix const&, Vector const&, Vector4D&)
000732d0 t V_StripLeadingWhitespace(char*)
00073340 t V_StripSurroundingQuotes(char*)
00162000 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
00161f10 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00053c40 t ComputeShadowControllerHL(CPhysicsObject*, hlshadowcontrol_params_t const&, float, float)
0002c260 t ConvertCoordinateAxisToHL(int)
00106233 t debug_out_friction_system(IVP_Friction_System*)
00029910 t IsBoxIntersectingTriangle(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, cplane_t const&, float)
000d5c80 t qh_neighbor_intersections(vertexT*)
000ca830 t qh_printfacet2geom_points(_IO_FILE*, double*, double*, facetT*, double, double*)
000cac20 t qh_printfacet3geom_points(_IO_FILE*, setT*, facetT*, double, double*)
0016d800 t Vector3DMultiplyTranspose(VMatrix const&, Vector const&, Vector&)
0016d6d0 t Vector4DMultiplyTranspose(VMatrix const&, Vector4D const&, Vector4D&)
00073280 t V_StripTrailingWhitespace(char*)
0015fa30 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000534c0 t ComputeShadowControllerIVP(IVP_Real_Object*, shadowcontrol_params_t&, float, float)
0002c240 t ConvertCoordinateAxisToIVP(int)
0003bab0 t CreateBallsocketConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00164610 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
00163df0 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
0002b230 t IntersectRayWithAACylinder(Ray_t const&, Vector const&, float, float, CBaseTrace*)
000254b0 t IsSphereIntersectingSphere(Vector const&, float, Vector const&, float)
000ee431 t ivp_debug_show_real_values(IVP_Buoyancy_Input const*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*)
00028c20 t PointInQuadFromBarycentric(Vector const&, Vector const&, Vector const&, Vector const&, Vector2D const&, Vector&)
000393a0 t SavePhysicsConstraintGroup(physsaveparams_t const&, CPhysicsConstraintGroup*)
000457e0 t SavePhysicsFluidController(physsaveparams_t const&, CPhysicsFluidController*)
0016d5d0 t Vector3DMultiplyProjective(VMatrix const&, Vector const&, Vector&)
00074df0 t V_TranslateLineFeedsToUnix(char*)
00162270 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0015fc90 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0015fef0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00028dc0 t ComputePointFromBarycentric(Vector const&, Vector const&, Vector const&, float, float, Vector&)
00028e70 t ComputePointFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, float, float, Vector2D&)
00053b80 t ConvertShadowControllerToHL(shadowcontrol_params_t const&, hlshadowcontrol_params_t&)
00025d40 t IsBoxIntersectingBoxExtents(Vector const&, Vector const&, Vector const&, Vector const&)
001611a0 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000f912b t p_calc_2d_distances_to_axis(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
00049c50 t SavePhysicsMotionController(physsaveparams_t const&, IPhysicsMotionController*)
00054860 t SavePhysicsPlayerController(physsaveparams_t const&, CPlayerController*)
00054740 t SavePhysicsShadowController(physsaveparams_t const&, IPhysicsShadowController*)
00071380 t Sys_RunningWithDebugModules()
0015cb40 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
0015caa0 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
0015b350 t VectorPerpendicularToVector(Vector const&, Vector*)
00161f90 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
0015ffd0 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00036ab0 t ConvertHavanaLocalMatrixToHL(hk_Transform const&, matrix3x4_t&, IVP_Real_Object*)
00053ac0 t ConvertShadowControllerToIVP(hlshadowcontrol_params_t const&, shadowcontrol_params_t&)
00038d90 t CreatePhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00169290 t GeneratePolyhedronFromPlanes(float const*, int, float, bool)
00038d80 t GetClientDataForHkConstraint(hk_Breakable_Constraint*)
0016da60 t MatrixBuildRotationAboutAxis(VMatrix&, Vector const&, float)
0015c680 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
000d40b0 t qh_degen_redundant_neighbors(facetT*, facetT*)
0015e610 t QuaternionAverageExponential(Quaternion&, int, Quaternion const*, float const*)
001678e0 t Recursive_MarkPlanarity_Dead(GeneratePolyhedronFromPlanes_LineLL*, MarkPlanarityControlStruct_t&)
0005ab20 t SavePhysicsVehicleController(physsaveparams_t const&, CVehicleController*)
00074350 t V_FixupPathSpaceToUnderscore(char*)
00161e70 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
001602d0 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00164f90 t GeneratePerspectiveFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
00025690 t IsCircleIntersectingRectangle(Vector2D const&, Vector2D const&, Vector2D const&, float)
0014b620 t ivp_core_get_surface_speed_os(IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000cd620 t qh_printfacet3geom_simplicial(_IO_FILE*, facetT*, double*)
000cd190 t qh_printfacet4geom_simplicial(_IO_FILE*, facetT*, double*)
00167e10 t RecomputePolygonSurfaceNormal(GeneratePolyhedronFromPlanes_Polygon*)
0003bb20 t RestorePhysicsConstraintGroup(physrestoreparams_t const&, CPhysicsConstraintGroup**)
000457f0 t RestorePhysicsFluidController(physrestoreparams_t const&, CPhysicsFluidController**)
00028d10 t TexCoordInQuadFromBarycentric(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
00036840 t TransformHavanaLocalToHLWorld(hk_Vector3 const&, IVP_Real_Object*, bool)
000367b0 t TransformHLWorldToHavanaLocal(Vector const&, IVP_Real_Object*)
00071700 t _V_stricmp_NegativeForUnequal(char const*, char const*)
001622e0 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0007ecb0 t HashStringCaselessConventional(char const*)
00025860 t IntersectInfiniteRayWithSphere(Vector const&, Vector const&, Vector const&, float, float*, float*)
000255f0 t IsBoxIntersectingSphereExtents(Vector const&, Vector const&, Vector const&, float)
000ccd70 t qh_printhyperplaneintersection(_IO_FILE*, facetT*, facetT*, setT*, double*)
00049380 t RestorePhysicsMotionController(physrestoreparams_t const&, IPhysicsMotionController**)
00054870 t RestorePhysicsPlayerController(physrestoreparams_t const&, CPlayerController**)
000547a0 t RestorePhysicsShadowController(physrestoreparams_t const&, IPhysicsShadowController**)
0015d0c0 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
00071a90 t StringAfterPrefixCaseSensitive(char const*, char const*)
00074980 t V_AddBackSlashesToSpecialChars(char const*)
001621e0 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00051d40 t ComputePDControllerCoefficients(float*, float, float, float)
00167540 t MarkPlanarity_CreateNewPolyLine(MarkPlanarityControlStruct_t&)
000cb270 t qh_printfacetNvertex_simplicial(_IO_FILE*, facetT*, int)
00167740 t Recursive_MarkPlanarity_OnPlane(GeneratePolyhedronFromPlanes_LineLL*, MarkPlanarityControlStruct_t&)
0005ab80 t RestorePhysicsVehicleController(physrestoreparams_t const&, CVehicleController**)
0015d2c0 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
00161bb0 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
0016ef90 t MatrixBuildPerspectiveOffCenterX(VMatrix&, double, double, double, double, double, double, double, double)
000cd8f0 t qh_printfacet3geom_nonsimplicial(_IO_FILE*, facetT*, double*)
000cd3b0 t qh_printfacet4geom_nonsimplicial(_IO_FILE*, facetT*, double*)
00162340 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
0016e360 t CalculateAABBFromProjectionMatrix(VMatrix const&, Vector*, Vector*)
00036910 t ConvertHLLocalMatrixToHavanaLocal(matrix3x4_t const&, hk_Transform&)
00168010 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool, float __vector(4))
00168010 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool, float __vector)
00039450 t PostRestorePhysicsConstraintGroup()
001676b0 t Recursive_CanOnPlanePolyCrawlDead(GeneratePolyhedronFromPlanes_LineLL*, MarkPlanarityControlStruct_t&)
00160ae0 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000cb100 t qh_printfacetNvertex_nonsimplicial(_IO_FILE*, facetT*, int, int)
00057f20 t ShouldOverrideWheelContactFriction(float*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
0016d4e0 t Vector3DMultiplyPositionProjective(VMatrix const&, Vector const&, Vector&)
0016e560 t CalculateSphereFromProjectionMatrix(VMatrix const&, Vector*, float*)
00160150 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00025350 t IntersectTriangleWithPlaneBarycentric(Vector const&, Vector const&, Vector const&, Vector4D const&, Vector2D*)
000547b0 t RestorePhysicsShadowControllerInternal(physrestoreparams_t const&, IPhysicsShadowController**, CPhysicsObject*)
0016e180 t CalculateAABBFromProjectionMatrixInverse(VMatrix const&, Vector*, Vector*)
0004f360 t CreateObjectFromBuffer_UseExistingMemory(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, CPhysicsObject*)
0016f1c0 t ExtractClipPlanesFromNonTransposedMatrix(VMatrix const&, VPlane*, bool)
001425c0 t ivp_optimiztion_center_check_successfull()
0002a230 t OBBHasFullyContainedIntersectionWithQuad(Vector const&, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector const&, Vector const&, float, Vector const&, float)
0002a800 t RayHasFullyContainedIntersectionWithQuad(Ray_t const&, Vector const&, float, Vector const&, Vector const&, float, Vector const&, float)
000250d0 t ComputeIntersectionBarycentricCoordinates(Ray_t const&, Vector const&, Vector const&, Vector const&, float&, float&, float*)
0016e3a0 t CalculateSphereFromProjectionMatrixInverse(VMatrix const&, Vector*, float*)
000548c0 t ControlPhysicsPlayerControllerAttachment_Silent(IPhysicsPlayerController*, IVP_Real_Object*, bool)
00054880 t ControlPhysicsShadowControllerAttachment_Silent(IPhysicsShadowController*, IVP_Real_Object*, bool)
0015d4f0 t Bias(float, float)
0015d580 t Gain(float, float)
0007ed60 t Hash4(void const*)
0007edb0 t Hash8(void const*)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
000cc790 t dfacet(unsigned int)
0007ee40 t Hash12(void const*)
0007ef00 t Hash16(void const*)
0013c7ec t p_atof(char const*)
0013c7ab t p_atoi(char const*)
00139c54 t p_free(void*)
0015b0b0 t Q_log2(unsigned int)
0015a470 t _sqrtf(float)
00071ea0 t V_atod(char const*)
000720e0 t V_atof(char const*)
00071e80 t V_atoi(char const*)
00160d00 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000cb880 t dvertex(unsigned int)
0007ed10 t HashInt(int)
0009ed71 t qh_rand()
0015a490 t _rsqrtf(float)
00069d00 t TestKVs(packedkv_t*, char const*)
00163d90 t CalcFovX(float, float)
00163d00 t CalcFovY(float, float)
00163cc0 t CeilPow2(int)
00165be0 t HSVtoRGB(Vector const&, Vector&)
0013b46c t ivp_rand()
00139d64 t p_calloc(int, int)
00139bf0 t p_malloc(unsigned int)
0013c88f t p_strcmp(char const*, char const*)
0013cce6 t p_strdup(char const*)
0013c8d3 t p_strlen(char const*)
000a4bf5 t qh_clock()
000adcbc t qh_point(int)
000c58e0 t qh_qhull()
000b51b6 t qh_setin(setT*, void*)
0009edc6 t qh_srand(int)
0016abd0 t RandSIMD(int)
0016acc0 t RandSIMD()
00165b00 t RGBtoHSV(Vector const&, Vector&)
00071ac0 t V_atoi64(char const*)
001627f0 t AngleDiff(float, float)
00163ce0 t FloorPow2(int)
0013483c t get_float()
0007eff0 t HashBlock(void const*, unsigned int)
000ebbcd t IsCarBody(IVP_Core*)
0013b4a4 t ivp_srand(int)
000759e0 t nexttoken(char*, char const*, char)
0002b710 t ParseFile(char*, char*, bool*)
0002b500 t ParseFile(char const*, char*, bool*, characterset_t*)
00170200 t pathmatch(char const*, char**, bool, char*, unsigned int)
0013cf9c t p_get_num()
00139c1e t p_realloc(void*, int)
0013c831 t p_str_tok(char*, char const*)
000a5d0f t qh_init_A(_IO_FILE*, _IO_FILE*, _IO_FILE*, int, char**)
000a6a05 t qh_init_B(double*, int, int, unsigned int)
0009f714 t qh_maxmin(double*, int, int)
000a4882 t qh_option(char const*, int*, double*)
000b4fd0 t qh_setdel(setT*, void*)
000b537b t qh_setnew(int)
000b9c0e t qh_stddev(int, double, double, double*)
000a4833 t qh_strtod(char const*, char**)
000a47dc t qh_strtol(char const*, char**)
00149530 t ReportObj(IVP_Synapse_Real*, CFmtStrN<256, false>&)
00071cc0 t V_atoui64(char const*)
00071580 t _V_memcmp(void const*, void const*, int)
00071560 t _V_memcpy(void*, void const*, int)
00071550 t _V_memset(void*, int, int)
00075870 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
00071660 t _V_strcmp(char const*, char const*)
000715f0 t _V_strcpy(char*, char const*)
000722b0 t V_stristr(char*, char const*)
00072190 t V_stristr(char const*, char const*)
00074830 t V_StrLeft(char const*, int, char*, int)
000715b0 t _V_strlen(char const*)
000727a0 t V_strncat(char*, char const*, unsigned int, int)
00072520 t V_strnchr(char const*, char, int)
000718f0 t V_strncmp(char const*, char const*, int)
00072570 t V_strncpy(char*, char const*, int)
00071950 t V_strnlwr(char*, unsigned int)
000717c0 t _V_strstr(char const*, char const*)
000717d0 t _V_strupr(char*)
00071670 t _V_wcscmp(wchar_t const*, wchar_t const*)
000722c0 t V_wcsistr(wchar_t const*, wchar_t const*)
000723b0 t V_wcsistr(wchar_t*, wchar_t const*)
00071600 t _V_wcslen(wchar_t const*)
00072820 t V_wcsncat(wchar_t*, wchar_t const*, int, int)
000725b0 t V_wcsncpy(wchar_t*, wchar_t const*, int)
00071870 t _V_wcsupr(wchar_t*)
0002b920 t operator delete[](void*)
0002b8f0 t operator delete(void*)
001e4818 b guard variable for datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001e3ca8 b guard variable for datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001e47a0 b guard variable for datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001e4720 b guard variable for datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001e4748 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001e4770 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001e3cd0 b guard variable for datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001e47f0 b guard variable for datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001e47c8 b guard variable for datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001e46f0 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001e4718 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001e4778 b guard variable for datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001e4538 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001e4648 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001e3e18 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001e3e40 b guard variable for datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001e3eb8 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001e3e90 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001e44d8 b guard variable for datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001e3f08 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001e3e68 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001e45d8 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001e4600 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001e3da0 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001e46c8 b guard variable for datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001e3df0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001e3dc8 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001e45b0 b guard variable for datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001e3ee0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001e3d78 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001e68c0 b guard variable for AllocTempVector()::s_nIndex
001e68b8 b guard variable for AllocTempVector()::s_vecTemp
001fa338 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001e3cf8 b guard variable for CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)::developerRef
001ea5b8 b guard variable for IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001e67f8 b guard variable for hk_Memory::get_instance()::s_memory_instance
001e38c0 b g_BreakSet
00066520 t ReadVector(char const*, Vector&)
001e4b60 b s_BreakSet
001e4a10 b nullsurface
001fa344 b s_bShowDiag
001e4b4c b s_nCVarFlag
001e386c b vec2_origin
001e3ac4 b vec2_origin
001e3adc b vec2_origin
001e3b10 b vec2_origin
001e3b74 b vec2_origin
001e3be8 b vec2_origin
001e3d0c b vec2_origin
001e3f44 b vec2_origin
001e3f78 b vec2_origin
001e41a4 b vec2_origin
001e41d8 b vec2_origin
001e420c b vec2_origin
001e4494 b vec2_origin
001e4500 b vec2_origin
001e4574 b vec2_origin
001e460c b vec2_origin
001e4670 b vec2_origin
001e4840 b vec2_origin
001e4900 b vec2_origin
001e4934 b vec2_origin
001e4a64 b vec2_origin
001e4a98 b vec2_origin
001e4af0 b vec2_origin
001e4b24 b vec2_origin
001e4cbc b vec2_origin
001e4cd4 b vec2_origin
001e5064 b vec2_origin
001e507c b vec2_origin
001e63dc b vec2_origin
001e63f0 b vec2_origin
001e640c b vec2_origin
001e66e4 b vec2_origin
001e66f8 b vec2_origin
001e670c b vec2_origin
001e6720 b vec2_origin
001e6734 b vec2_origin
001e6748 b vec2_origin
001e675c b vec2_origin
001e6770 b vec2_origin
001e6784 b vec2_origin
001e6798 b vec2_origin
001e67ac b vec2_origin
001e67c0 b vec2_origin
001e67d4 b vec2_origin
001e67e8 b vec2_origin
001e6808 b vec2_origin
001e681c b vec2_origin
001e6830 b vec2_origin
001e6844 b vec2_origin
001e6858 b vec2_origin
001e686c b vec2_origin
001e6880 b vec2_origin
001e6894 b vec2_origin
001e81b8 b vec2_origin
001e81cc b vec2_origin
001e81e0 b vec2_origin
001e81f4 b vec2_origin
001e8214 b vec2_origin
001e8228 b vec2_origin
001e823c b vec2_origin
001e8250 b vec2_origin
001e8264 b vec2_origin
001e8278 b vec2_origin
001e828c b vec2_origin
001eacac b vec2_origin
001eacc0 b vec2_origin
001eacd4 b vec2_origin
001eace8 b vec2_origin
001eae38 b vec2_origin
001eaea4 b vec2_origin
001eaf04 b vec2_origin
001eaf1c b vec2_origin
001eaf30 b vec2_origin
001eaf44 b vec2_origin
001eaf58 b vec2_origin
001eaf6c b vec2_origin
001eaf80 b vec2_origin
001eaf9c b vec2_origin
001eafb0 b vec2_origin
001eafc4 b vec2_origin
001eb490 b vec2_origin
001eb4f4 b vec2_origin
001f25c4 b vec2_origin
001f25d8 b vec2_origin
001f25ec b vec2_origin
001fa324 b vec2_origin
001e68a8 b vec2_origin
001e68cc b vec2_origin
001e68f4 b vec2_origin
001e690c b vec2_origin
001e6920 b vec2_origin
001e6934 b vec2_origin
001e6948 b vec2_origin
001e695c b vec2_origin
001e7364 b vec2_origin
001e73ec b vec2_origin
001e7400 b vec2_origin
001e7414 b vec2_origin
001e7428 b vec2_origin
001e8190 b vec2_origin
001e81a4 b vec2_origin
001e82a0 b vec2_origin
001e82b4 b vec2_origin
001e82cc b vec2_origin
001e82e0 b vec2_origin
001e82f4 b vec2_origin
001e8308 b vec2_origin
001e831c b vec2_origin
001e8330 b vec2_origin
001e8344 b vec2_origin
001e8358 b vec2_origin
001e836c b vec2_origin
001e8380 b vec2_origin
001e8394 b vec2_origin
001e83a8 b vec2_origin
001e83c8 b vec2_origin
001e83dc b vec2_origin
001e83f4 b vec2_origin
001e8408 b vec2_origin
001e841c b vec2_origin
001e8430 b vec2_origin
001e8444 b vec2_origin
001e8458 b vec2_origin
001e846c b vec2_origin
001e8480 b vec2_origin
001e8494 b vec2_origin
001e84a8 b vec2_origin
001e84bc b vec2_origin
001e84d8 b vec2_origin
001e84ec b vec2_origin
001e8500 b vec2_origin
001e8514 b vec2_origin
001ea54c b vec2_origin
001ea560 b vec2_origin
001ea578 b vec2_origin
001ea58c b vec2_origin
001ea5a4 b vec2_origin
001ea5c8 b vec2_origin
001ea5dc b vec2_origin
001ea5f0 b vec2_origin
001ea604 b vec2_origin
001ea618 b vec2_origin
001ea62c b vec2_origin
001ea640 b vec2_origin
001ea654 b vec2_origin
001ea668 b vec2_origin
001ea67c b vec2_origin
001ea690 b vec2_origin
001ea6a4 b vec2_origin
001ea6b8 b vec2_origin
001ea6cc b vec2_origin
001ea6e0 b vec2_origin
001ea708 b vec2_origin
001eab24 b vec2_origin
001eab38 b vec2_origin
001eafd8 b vec2_origin
001eafec b vec2_origin
001eb000 b vec2_origin
001e387c b vec4_origin
001e3aec b vec4_origin
001e3b20 b vec4_origin
001e3b84 b vec4_origin
001e3bf8 b vec4_origin
001e3d1c b vec4_origin
001e3f54 b vec4_origin
001e3f88 b vec4_origin
001e41b4 b vec4_origin
001e41e8 b vec4_origin
001e421c b vec4_origin
001e44a4 b vec4_origin
001e4510 b vec4_origin
001e4584 b vec4_origin
001e461c b vec4_origin
001e4680 b vec4_origin
001e4850 b vec4_origin
001e4910 b vec4_origin
001e4944 b vec4_origin
001e4a74 b vec4_origin
001e4aa8 b vec4_origin
001e4b00 b vec4_origin
001eb4a0 b vec4_origin
001eb504 b vec4_origin
001f25fc b vec4_origin
0006ca00 t AppendPrintf(char*, unsigned int, char const*, ...)
0002c7e0 t BuildVertMap(vertmap_t&, Vector const*, int, IVP_Compact_Ledge const*) [clone .constprop.25]
00031eb0 t InitBoxVerts(Vector*, Vector**, Vector const&, Vector const&)
00171f54 t read_sleb128(unsigned char const*, long*)
00171f24 t read_uleb128(unsigned char const*, unsigned long*)
00066570 t ReadVector4D(char const*, Vector4D&)
00179d60 r s_ExtIndices
00180a50 r s_limit_mask
00180bd0 r s_limit_mask
00179d78 r s_MatIndices
001e3874 b vec2_invalid
001e3acc b vec2_invalid
001e3ae4 b vec2_invalid
001e3b18 b vec2_invalid
001e3b7c b vec2_invalid
001e3bf0 b vec2_invalid
001e3d14 b vec2_invalid
001e3f4c b vec2_invalid
001e3f80 b vec2_invalid
001e41ac b vec2_invalid
001e41e0 b vec2_invalid
001e4214 b vec2_invalid
001e449c b vec2_invalid
001e4508 b vec2_invalid
001e457c b vec2_invalid
001e4614 b vec2_invalid
001e4678 b vec2_invalid
001e4848 b vec2_invalid
001e4908 b vec2_invalid
001e493c b vec2_invalid
001e4a6c b vec2_invalid
001e4aa0 b vec2_invalid
001e4af8 b vec2_invalid
001e4b2c b vec2_invalid
001e4cc4 b vec2_invalid
001e4cdc b vec2_invalid
001e506c b vec2_invalid
001e5084 b vec2_invalid
001e63e4 b vec2_invalid
001e63f8 b vec2_invalid
001e6414 b vec2_invalid
001e66ec b vec2_invalid
001e6700 b vec2_invalid
001e6714 b vec2_invalid
001e6728 b vec2_invalid
001e673c b vec2_invalid
001e6750 b vec2_invalid
001e6764 b vec2_invalid
001e6778 b vec2_invalid
001e678c b vec2_invalid
001e67a0 b vec2_invalid
001e67b4 b vec2_invalid
001e67c8 b vec2_invalid
001e67dc b vec2_invalid
001e67f0 b vec2_invalid
001e6810 b vec2_invalid
001e6824 b vec2_invalid
001e6838 b vec2_invalid
001e684c b vec2_invalid
001e6860 b vec2_invalid
001e6874 b vec2_invalid
001e6888 b vec2_invalid
001e689c b vec2_invalid
001e81c0 b vec2_invalid
001e81d4 b vec2_invalid
001e81e8 b vec2_invalid
001e81fc b vec2_invalid
001e821c b vec2_invalid
001e8230 b vec2_invalid
001e8244 b vec2_invalid
001e8258 b vec2_invalid
001e826c b vec2_invalid
001e8280 b vec2_invalid
001e8294 b vec2_invalid
001eacb4 b vec2_invalid
001eacc8 b vec2_invalid
001eacdc b vec2_invalid
001eacf0 b vec2_invalid
001eae40 b vec2_invalid
001eaeac b vec2_invalid
001eaf0c b vec2_invalid
001eaf24 b vec2_invalid
001eaf38 b vec2_invalid
001eaf4c b vec2_invalid
001eaf60 b vec2_invalid
001eaf74 b vec2_invalid
001eaf88 b vec2_invalid
001eafa4 b vec2_invalid
001eafb8 b vec2_invalid
001eafcc b vec2_invalid
001eb498 b vec2_invalid
001eb4fc b vec2_invalid
001f25cc b vec2_invalid
001f25e0 b vec2_invalid
001f25f4 b vec2_invalid
001fa32c b vec2_invalid
001e68b0 b vec2_invalid
001e68d4 b vec2_invalid
001e68fc b vec2_invalid
001e6914 b vec2_invalid
001e6928 b vec2_invalid
001e693c b vec2_invalid
001e6950 b vec2_invalid
001e6964 b vec2_invalid
001e736c b vec2_invalid
001e73f4 b vec2_invalid
001e7408 b vec2_invalid
001e741c b vec2_invalid
001e7430 b vec2_invalid
001e8198 b vec2_invalid
001e81ac b vec2_invalid
001e82a8 b vec2_invalid
001e82bc b vec2_invalid
001e82d4 b vec2_invalid
001e82e8 b vec2_invalid
001e82fc b vec2_invalid
001e8310 b vec2_invalid
001e8324 b vec2_invalid
001e8338 b vec2_invalid
001e834c b vec2_invalid
001e8360 b vec2_invalid
001e8374 b vec2_invalid
001e8388 b vec2_invalid
001e839c b vec2_invalid
001e83b0 b vec2_invalid
001e83d0 b vec2_invalid
001e83e4 b vec2_invalid
001e83fc b vec2_invalid
001e8410 b vec2_invalid
001e8424 b vec2_invalid
001e8438 b vec2_invalid
001e844c b vec2_invalid
001e8460 b vec2_invalid
001e8474 b vec2_invalid
001e8488 b vec2_invalid
001e849c b vec2_invalid
001e84b0 b vec2_invalid
001e84c4 b vec2_invalid
001e84e0 b vec2_invalid
001e84f4 b vec2_invalid
001e8508 b vec2_invalid
001e851c b vec2_invalid
001ea554 b vec2_invalid
001ea568 b vec2_invalid
001ea580 b vec2_invalid
001ea594 b vec2_invalid
001ea5ac b vec2_invalid
001ea5d0 b vec2_invalid
001ea5e4 b vec2_invalid
001ea5f8 b vec2_invalid
001ea60c b vec2_invalid
001ea620 b vec2_invalid
001ea634 b vec2_invalid
001ea648 b vec2_invalid
001ea65c b vec2_invalid
001ea670 b vec2_invalid
001ea684 b vec2_invalid
001ea698 b vec2_invalid
001ea6ac b vec2_invalid
001ea6c0 b vec2_invalid
001ea6d4 b vec2_invalid
001ea6e8 b vec2_invalid
001ea710 b vec2_invalid
001eab2c b vec2_invalid
001eab40 b vec2_invalid
001eafe0 b vec2_invalid
001eaff4 b vec2_invalid
001eb008 b vec2_invalid
001e388c b vec4_invalid
001e3afc b vec4_invalid
001e3b30 b vec4_invalid
001e3b94 b vec4_invalid
001e3c08 b vec4_invalid
001e3d2c b vec4_invalid
001e3f64 b vec4_invalid
001e3f98 b vec4_invalid
001e41c4 b vec4_invalid
001e41f8 b vec4_invalid
001e422c b vec4_invalid
001e44b4 b vec4_invalid
001e4520 b vec4_invalid
001e4594 b vec4_invalid
001e462c b vec4_invalid
001e4690 b vec4_invalid
001e4860 b vec4_invalid
001e4920 b vec4_invalid
001e4954 b vec4_invalid
001e4a84 b vec4_invalid
001e4ab8 b vec4_invalid
001e4b10 b vec4_invalid
001eb4b0 b vec4_invalid
001eb514 b vec4_invalid
001f260c b vec4_invalid
0005ca30 t CM_ClearTrace(CGameTrace*)
001e48a0 b g_MeshManager
001e342c d IVP_RAND_SEED
000aa2dc t qh_intcompare(void const*, void const*)
001e4b48 b s_bRegistered
001e4c60 b s_EmptyConVar
001e4ad0 b s_VPhysPtrMap
001f7620 b texgammatable
001fa36c b emergency_used
001e4198 b g_PhysicsMutex
001f7720 b lineartoscreen
0006afc0 t NoPhysSaveFunc(physsaveparams_t const&, void*)
001e2aa8 d s_BackSlashMap
0017f780 r wszCantEndLine
0004c090 t AngDragIntegral(float, float, float, float)
001fe370 b dependents_used
0005b320 t FlushFrameLocks()
001721d5 t get_ttype_entry(lsda_header_info*, unsigned long) [clone .constprop.6]
0017fd40 r g_nRandomValues
001f9320 b lineartotexture
000d3770 t qh_compareangle(void const*, void const*)
000d37a0 t qh_comparemerge(void const*, void const*)
000d37c0 t qh_comparevisit(void const*, void const*)
00070f80 t Sys_LoadLibrary(char const*)
001f8720 b texturetolinear
00023f90 t ComputeBoxOffset(Ray_t const&) [clone .part.7]
001fa370 b emergency_buffer
00171f9e t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
001e49a0 b g_IdentityMatrix
001e4b50 b s_bBuiltBreakSet
001e2a20 d s_nDLLIdentifier
0002c280 t UpdateSharedEdge(IVP_Compact_Ledge*, int*, int, IVP_Compact_Edge*)
0017f860 r wszCantBeginLine
001fe380 b dependents_buffer
0018fd34 r ivp_uqr_mod_table
0006afd0 t NoPhysRestoreFunc(physrestoreparams_t const&, void**)
00172137 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*) [clone .constprop.5]
001e2a24 d s_DefaultAccessor
001e3b40 b g_MainDLLInterface
001e2a40 d g_PrintConVarFlags
0004cd20 t InitObjectTemplate(IVP_Template_Real_Object&, int, objectparams_t*, bool) [clone .constprop.96]
00172103 t read_encoded_value(_Unwind_Context*, unsigned char, unsigned char const*, unsigned int*)
001e66d8 b s_nConnectionCount
001eb5c0 b s_SIMDRandContexts
00024030 t ComputeCenterMatrix(Vector const&, QAngle const&, Vector const&, Vector const&, matrix3x4_t&) [clone .constprop.48]
00180520 r g_pInterfaceGlobals
00070e80 t Sys_LoadLibraryGuts(char const*)
0002e010 t vphys_sleep_timeout(CCommand const&)
00172257 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long) [clone .constprop.4]
00023f20 t Collision_ClearTrace(Vector const&, Vector const&, CBaseTrace*)
001e641c b g_CleanupSymbolTable
000c90b0 t qh_compare_facetarea(void const*, void const*)
001eb540 b s_nRandContextsInUse
001e651c b s_nRegistrationCount
00171ff0 t base_of_encoded_value(unsigned char, _Unwind_Context*)
000364b0 t IsBreakableConstraint(constraint_breakableparams_t const&)
000c90f0 t qh_compare_facetmerge(void const*, void const*)
000c9120 t qh_compare_facetvisit(void const*, void const*)
001df728 d s_DefaultDebugOverlay
00024100 t ComputeSeparatingPlane(matrix3x4_t const&, matrix3x4_t const&, Vector const&, Vector const&, float, cplane_t*) [clone .constprop.47]
001e49e0 b g_IdentityIVPToHLWorld
001df838 d g_MaterialIndexDataOps
001eb4d4 b s_TempMemoryPolyhedron
001f8f20 b g_Mathlib_GammaToLinear
001f8b20 b g_Mathlib_LinearToGamma
001e455c b g_PostRestoreObjectList
00172d2c t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
001e48f4 b s_BuildVirtualMeshMutex
001e39c0 b g_BreakSetIncludingColons
001e6520 b s_pConnectionRegistration
001e3868 b UNSPECIFIED_LOGGING_COLOR
001e3ac0 b UNSPECIFIED_LOGGING_COLOR
001e3ad4 b UNSPECIFIED_LOGGING_COLOR
001e3ad8 b UNSPECIFIED_LOGGING_COLOR
001e3b0c b UNSPECIFIED_LOGGING_COLOR
001e3b70 b UNSPECIFIED_LOGGING_COLOR
001e3be4 b UNSPECIFIED_LOGGING_COLOR
001e3d08 b UNSPECIFIED_LOGGING_COLOR
001e3f40 b UNSPECIFIED_LOGGING_COLOR
001e3f74 b UNSPECIFIED_LOGGING_COLOR
001e41a0 b UNSPECIFIED_LOGGING_COLOR
001e41d4 b UNSPECIFIED_LOGGING_COLOR
001e4208 b UNSPECIFIED_LOGGING_COLOR
001e4490 b UNSPECIFIED_LOGGING_COLOR
001e44fc b UNSPECIFIED_LOGGING_COLOR
001e4570 b UNSPECIFIED_LOGGING_COLOR
001e4608 b UNSPECIFIED_LOGGING_COLOR
001e466c b UNSPECIFIED_LOGGING_COLOR
001e483c b UNSPECIFIED_LOGGING_COLOR
001e48fc b UNSPECIFIED_LOGGING_COLOR
001e4930 b UNSPECIFIED_LOGGING_COLOR
001e4a60 b UNSPECIFIED_LOGGING_COLOR
001e4a94 b UNSPECIFIED_LOGGING_COLOR
001e4aec b UNSPECIFIED_LOGGING_COLOR
001e4b20 b UNSPECIFIED_LOGGING_COLOR
001e4cb8 b UNSPECIFIED_LOGGING_COLOR
001e4cd0 b UNSPECIFIED_LOGGING_COLOR
001e4ce9 b UNSPECIFIED_LOGGING_COLOR
001e5060 b UNSPECIFIED_LOGGING_COLOR
001e5078 b UNSPECIFIED_LOGGING_COLOR
001e63d8 b UNSPECIFIED_LOGGING_COLOR
001e63ec b UNSPECIFIED_LOGGING_COLOR
001e6405 b UNSPECIFIED_LOGGING_COLOR
001e6420 b UNSPECIFIED_LOGGING_COLOR
001e66dc b UNSPECIFIED_LOGGING_COLOR
001e66e0 b UNSPECIFIED_LOGGING_COLOR
001e66f4 b UNSPECIFIED_LOGGING_COLOR
001e6708 b UNSPECIFIED_LOGGING_COLOR
001e671c b UNSPECIFIED_LOGGING_COLOR
001e6730 b UNSPECIFIED_LOGGING_COLOR
001e6744 b UNSPECIFIED_LOGGING_COLOR
001e6758 b UNSPECIFIED_LOGGING_COLOR
001e676c b UNSPECIFIED_LOGGING_COLOR
001e6780 b UNSPECIFIED_LOGGING_COLOR
001e6794 b UNSPECIFIED_LOGGING_COLOR
001e67a8 b UNSPECIFIED_LOGGING_COLOR
001e67bc b UNSPECIFIED_LOGGING_COLOR
001e67d0 b UNSPECIFIED_LOGGING_COLOR
001e67e4 b UNSPECIFIED_LOGGING_COLOR
001e6804 b UNSPECIFIED_LOGGING_COLOR
001e6818 b UNSPECIFIED_LOGGING_COLOR
001e682c b UNSPECIFIED_LOGGING_COLOR
001e6840 b UNSPECIFIED_LOGGING_COLOR
001e6854 b UNSPECIFIED_LOGGING_COLOR
001e6868 b UNSPECIFIED_LOGGING_COLOR
001e687c b UNSPECIFIED_LOGGING_COLOR
001e6890 b UNSPECIFIED_LOGGING_COLOR
001e81b4 b UNSPECIFIED_LOGGING_COLOR
001e81c8 b UNSPECIFIED_LOGGING_COLOR
001e81dc b UNSPECIFIED_LOGGING_COLOR
001e81f0 b UNSPECIFIED_LOGGING_COLOR
001e8210 b UNSPECIFIED_LOGGING_COLOR
001e8224 b UNSPECIFIED_LOGGING_COLOR
001e8238 b UNSPECIFIED_LOGGING_COLOR
001e824c b UNSPECIFIED_LOGGING_COLOR
001e8260 b UNSPECIFIED_LOGGING_COLOR
001e8274 b UNSPECIFIED_LOGGING_COLOR
001e8288 b UNSPECIFIED_LOGGING_COLOR
001eaca8 b UNSPECIFIED_LOGGING_COLOR
001eacbc b UNSPECIFIED_LOGGING_COLOR
001eacd0 b UNSPECIFIED_LOGGING_COLOR
001eace4 b UNSPECIFIED_LOGGING_COLOR
001eae34 b UNSPECIFIED_LOGGING_COLOR
001eaea0 b UNSPECIFIED_LOGGING_COLOR
001eaf00 b UNSPECIFIED_LOGGING_COLOR
001eaf18 b UNSPECIFIED_LOGGING_COLOR
001eaf2c b UNSPECIFIED_LOGGING_COLOR
001eaf40 b UNSPECIFIED_LOGGING_COLOR
001eaf54 b UNSPECIFIED_LOGGING_COLOR
001eaf68 b UNSPECIFIED_LOGGING_COLOR
001eaf7c b UNSPECIFIED_LOGGING_COLOR
001eaf98 b UNSPECIFIED_LOGGING_COLOR
001eafac b UNSPECIFIED_LOGGING_COLOR
001eafc0 b UNSPECIFIED_LOGGING_COLOR
001eb48c b UNSPECIFIED_LOGGING_COLOR
001eb4f0 b UNSPECIFIED_LOGGING_COLOR
001f25c0 b UNSPECIFIED_LOGGING_COLOR
001f25d4 b UNSPECIFIED_LOGGING_COLOR
001f25e8 b UNSPECIFIED_LOGGING_COLOR
001fa320 b UNSPECIFIED_LOGGING_COLOR
001fa350 b UNSPECIFIED_LOGGING_COLOR
001e68a4 b UNSPECIFIED_LOGGING_COLOR
001e68c8 b UNSPECIFIED_LOGGING_COLOR
001e68f0 b UNSPECIFIED_LOGGING_COLOR
001e6908 b UNSPECIFIED_LOGGING_COLOR
001e691c b UNSPECIFIED_LOGGING_COLOR
001e6930 b UNSPECIFIED_LOGGING_COLOR
001e6944 b UNSPECIFIED_LOGGING_COLOR
001e6958 b UNSPECIFIED_LOGGING_COLOR
001e7360 b UNSPECIFIED_LOGGING_COLOR
001e73e8 b UNSPECIFIED_LOGGING_COLOR
001e73fc b UNSPECIFIED_LOGGING_COLOR
001e7410 b UNSPECIFIED_LOGGING_COLOR
001e7424 b UNSPECIFIED_LOGGING_COLOR
001e818c b UNSPECIFIED_LOGGING_COLOR
001e81a0 b UNSPECIFIED_LOGGING_COLOR
001e829c b UNSPECIFIED_LOGGING_COLOR
001e82b0 b UNSPECIFIED_LOGGING_COLOR
001e82c8 b UNSPECIFIED_LOGGING_COLOR
001e82dc b UNSPECIFIED_LOGGING_COLOR
001e82f0 b UNSPECIFIED_LOGGING_COLOR
001e8304 b UNSPECIFIED_LOGGING_COLOR
001e8318 b UNSPECIFIED_LOGGING_COLOR
001e832c b UNSPECIFIED_LOGGING_COLOR
001e8340 b UNSPECIFIED_LOGGING_COLOR
001e8354 b UNSPECIFIED_LOGGING_COLOR
001e8368 b UNSPECIFIED_LOGGING_COLOR
001e837c b UNSPECIFIED_LOGGING_COLOR
001e8390 b UNSPECIFIED_LOGGING_COLOR
001e83a4 b UNSPECIFIED_LOGGING_COLOR
001e83c4 b UNSPECIFIED_LOGGING_COLOR
001e83d8 b UNSPECIFIED_LOGGING_COLOR
001e83f0 b UNSPECIFIED_LOGGING_COLOR
001e8404 b UNSPECIFIED_LOGGING_COLOR
001e8418 b UNSPECIFIED_LOGGING_COLOR
001e842c b UNSPECIFIED_LOGGING_COLOR
001e8440 b UNSPECIFIED_LOGGING_COLOR
001e8454 b UNSPECIFIED_LOGGING_COLOR
001e8468 b UNSPECIFIED_LOGGING_COLOR
001e847c b UNSPECIFIED_LOGGING_COLOR
001e8490 b UNSPECIFIED_LOGGING_COLOR
001e84a4 b UNSPECIFIED_LOGGING_COLOR
001e84b8 b UNSPECIFIED_LOGGING_COLOR
001e84d4 b UNSPECIFIED_LOGGING_COLOR
001e84e8 b UNSPECIFIED_LOGGING_COLOR
001e84fc b UNSPECIFIED_LOGGING_COLOR
001e8510 b UNSPECIFIED_LOGGING_COLOR
001ea548 b UNSPECIFIED_LOGGING_COLOR
001ea55c b UNSPECIFIED_LOGGING_COLOR
001ea574 b UNSPECIFIED_LOGGING_COLOR
001ea588 b UNSPECIFIED_LOGGING_COLOR
001ea5a0 b UNSPECIFIED_LOGGING_COLOR
001ea5c4 b UNSPECIFIED_LOGGING_COLOR
001ea5d8 b UNSPECIFIED_LOGGING_COLOR
001ea5ec b UNSPECIFIED_LOGGING_COLOR
001ea600 b UNSPECIFIED_LOGGING_COLOR
001ea614 b UNSPECIFIED_LOGGING_COLOR
001ea628 b UNSPECIFIED_LOGGING_COLOR
001ea63c b UNSPECIFIED_LOGGING_COLOR
001ea650 b UNSPECIFIED_LOGGING_COLOR
001ea664 b UNSPECIFIED_LOGGING_COLOR
001ea678 b UNSPECIFIED_LOGGING_COLOR
001ea68c b UNSPECIFIED_LOGGING_COLOR
001ea6a0 b UNSPECIFIED_LOGGING_COLOR
001ea6b4 b UNSPECIFIED_LOGGING_COLOR
001ea6c8 b UNSPECIFIED_LOGGING_COLOR
001ea6dc b UNSPECIFIED_LOGGING_COLOR
001ea704 b UNSPECIFIED_LOGGING_COLOR
001eab20 b UNSPECIFIED_LOGGING_COLOR
001eab34 b UNSPECIFIED_LOGGING_COLOR
001eafd4 b UNSPECIFIED_LOGGING_COLOR
001eafe8 b UNSPECIFIED_LOGGING_COLOR
001eaffc b UNSPECIFIED_LOGGING_COLOR
001e4ce8 b s_bRunningWithDebugModules
001df72c d s_StubPredictableController
001e3bc0 b vphys_sleep_timeout_command
0017205a t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
001e3f2c b g_ConstraintGroupActivateList
001eb4c0 b s_TempMemoryPolyhedron_Buffer
001eaf90 b ivp_surface_manager_ball_global
000c0dd0 t localCalcGeomCenterAndRotInertia(IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_U_Point*, IVP_U_Point*) [clone .constprop.13]
001e2b18 d s_pConversionArrays_NoEscConversion
001e3ba4 b __g_CreateCPhysicsInterfaceIPhysics_reg
001e2ac0 d s_pConversionArrays_StringCharConversion
0002dfb0 t __CreateCPhysicsInterfaceIPhysics_interface()
001e3d3c b __g_CreateCPhysicsCollisionIPhysicsCollision_reg
00031d50 t __CreateCPhysicsCollisionIPhysicsCollision_interface()
001e44c4 b __g_CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_reg
000464b0 t __CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_interface()
0017f760 r s_hex
001e4a18 b g_xneg
001e4a3c b g_xpos
001e4a24 b g_yneg
001e4a48 b g_ypos
001e4a30 b g_zneg
001e4a54 b g_zpos
00179f29 r axisMap
0016fe40 t Descend(char*, unsigned int, bool, unsigned int)
00071510 t V_nibble(char)
0006c6a0 t ConCommand::CanAutoComplete()
0006e220 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
0006cb40 t ConCommand::Dispatch(CCommand const&)
0006d4d0 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0006d440 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0006d3b0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0006d4d0 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0006d440 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0006d3b0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0006c8c0 t ConCommand::~ConCommand()
0006c680 t ConCommand::~ConCommand()
0006c680 t ConCommand::~ConCommand()
0005e230 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
0005e230 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
00077e40 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
000771d0 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
00078dc0 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
000762f0 t CUtlBuffer::GetOverflow(int)
000780d0 t CUtlBuffer::IsBigEndian()
000792d0 t CUtlBuffer::PutOverflow(int)
00078d40 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00076940 t CUtlBuffer::CheckPeekGet(int, int)
00076690 t CUtlBuffer::DetachMemory()
000780a0 t CUtlBuffer::SetBigEndian(bool)
00077da0 t CUtlBuffer::EatCPPComment()
00077030 t CUtlBuffer::EatWhiteSpace()
000767f0 t CUtlBuffer::OnGetOverflow(int)
000767c0 t CUtlBuffer::OnPutOverflow(int)
00076640 t CUtlBuffer::SetBufferType(bool, bool)
000766d0 t CUtlBuffer::EnsureCapacity(int)
00076b90 t CUtlBuffer::PeekLineLength()
00076d00 t CUtlBuffer::PeekWhiteSpace(int)
00076ca0 t CUtlBuffer::PeekStringMatch(int, char const*, int)
00077450 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
00076d90 t CUtlBuffer::PeekStringLength()
000787f0 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
00076790 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00078cc0 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
000780e0 t CUtlBuffer::AddNullTermination(int)
000775d0 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
000784b0 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
00078070 t CUtlBuffer::ActivateByteSwapping(bool)
00076af0 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
00077390 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
00076ec0 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
000770a0 t CUtlBuffer::Get(void*, int)
000781b0 t CUtlBuffer::Put(void const*, int)
00078a90 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00078a30 t CUtlBuffer::Swap(CUtlBuffer&)
00077d70 t CUtlBuffer::Scanf(char const*, ...)
00078480 t CUtlBuffer::Printf(char const*, ...)
000770f0 t CUtlBuffer::GetLine(char*, int)
00076c40 t CUtlBuffer::GetUpTo(void*, int)
00076aa0 t CUtlBuffer::PeekGet(int, int)
00076820 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
00078150 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
00077710 t CUtlBuffer::VaScanf(char const*, char*)
000768b0 t CUtlBuffer::CheckGet(int)
00078000 t CUtlBuffer::CheckPut(int)
00076970 t CUtlBuffer::GetToken(char const*)
00078410 t CUtlBuffer::VaPrintf(char const*, char*)
000774b0 t CUtlBuffer::GetString(char*, int)
00078230 t CUtlBuffer::PutString(char const*)
000791a0 t CUtlBuffer::CUtlBuffer(int, int, int)
00078c10 t CUtlBuffer::CUtlBuffer(void const*, int, int)
000791a0 t CUtlBuffer::CUtlBuffer(int, int, int)
00078c10 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0006eb30 t CUtlMemory<CUtlString, int>::Grow(int)
000487a0 t CUtlMemory<CUtlSymbol, int>::Grow(int)
00036250 t CUtlMemory<bboxcache_t, int>::Grow(int)
0007cdf0 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
000430f0 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Grow(int)
0006b6a0 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short>::Grow(int)
00070a50 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
00044d60 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
0002e890 t CUtlMemory<CPhysicsCollisionSet, int>::Grow(int)
00050f50 t CUtlMemory<postrestore_objectlist_t, int>::Grow(int)
000488f0 t CUtlMemory<CSurface, int>::Grow(int)
0006acf0 t CUtlMemory<kventry_t, int>::Grow(int)
0006ac30 t CUtlMemory<char, int>::Grow(int)
00076380 t CUtlMemory<unsigned char, int>::ConvertToGrowableMemory(int) [clone .part.32]
000793b0 t CUtlMemory<unsigned char, int>::Grow(int)
00079370 t CUtlMemory<unsigned char, int>::Purge()
0002dd70 t CUtlMemory<int, int>::Grow(int)
0002dc40 t CUtlMemory<int, int>::Purge()
0006ae60 t CUtlMemory<unsigned int, int>::Grow(int)
00070730 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
00070170 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::~CUtlMemory()
00070170 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::~CUtlMemory()
000448e0 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::Grow(int)
00041ad0 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::~CUtlMemory()
00041ad0 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::~CUtlMemory()
00043940 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Grow(int)
000412c0 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::~CUtlMemory()
000412c0 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::~CUtlMemory()
000441d0 t CUtlMemory<CPhysicsEnvironment::PredictedData_t, int>::Grow(int)
000419e0 t CUtlMemory<CPhysicsEnvironment::PredictedData_t, int>::~CUtlMemory()
000419e0 t CUtlMemory<CPhysicsEnvironment::PredictedData_t, int>::~CUtlMemory()
0007cb70 t CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int>::Grow(int)
0007ca50 t CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int>::Grow(int)
00050df0 t CUtlMemory<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, int>::Grow(int)
00050c80 t CUtlMemory<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, int>::~CUtlMemory()
00050c80 t CUtlMemory<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, int>::~CUtlMemory()
000564e0 t CUtlMemory<CPredictedPlayerController::PlayerControllerPredictionBackups_t, int>::Grow(int)
000561d0 t CUtlMemory<CPredictedPlayerController::PlayerControllerPredictionBackups_t, int>::~CUtlMemory()
000561d0 t CUtlMemory<CPredictedPlayerController::PlayerControllerPredictionBackups_t, int>::~CUtlMemory()
0004a320 t CUtlMemory<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, int>::Grow(int)
0004a180 t CUtlMemory<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, int>::~CUtlMemory()
0004a180 t CUtlMemory<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, int>::~CUtlMemory()
00044be0 t CUtlMemory<CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t, int>::Grow(int)
000418c0 t CUtlMemory<CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t, int>::~CUtlMemory()
000418c0 t CUtlMemory<CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t, int>::~CUtlMemory()
00043db0 t CUtlMemory<CPhysCollide*, int>::Grow(int)
00041550 t CUtlMemory<CPhysCollide*, int>::~CUtlMemory()
00041550 t CUtlMemory<CPhysCollide*, int>::~CUtlMemory()
000708f0 t CUtlMemory<memhandle_t__*, int>::Grow(int)
000424a0 t CUtlMemory<CPhysicsObject*, int>::Grow(int)
00043690 t CUtlMemory<IPhysicsObject*, int>::Grow(int)
000414a0 t CUtlMemory<IPhysicsObject*, int>::~CUtlMemory()
000414a0 t CUtlMemory<IPhysicsObject*, int>::~CUtlMemory()
00046360 t CUtlMemory<IVP_Real_Object*, int>::Grow(int)
00042340 t CUtlMemory<IDeleteQueueItem*, int>::Grow(int)
00041a90 t CUtlMemory<IDeleteQueueItem*, int>::~CUtlMemory()
00041a90 t CUtlMemory<IDeleteQueueItem*, int>::~CUtlMemory()
0002e740 t CUtlMemory<IPhysicsEnvironment*, int>::Grow(int)
0005c610 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Grow(int)
0005c4b0 t CUtlMemory<CPhysCollideVirtualMesh*, int>::~CUtlMemory()
0005c4b0 t CUtlMemory<CPhysCollideVirtualMesh*, int>::~CUtlMemory()
0003be90 t CUtlMemory<CPhysicsConstraintGroup*, int>::Grow(int)
00043c50 t CUtlMemory<CPhysicsFluidController*, int>::Grow(int)
00041600 t CUtlMemory<CPhysicsFluidController*, int>::~CUtlMemory()
00041600 t CUtlMemory<CPhysicsFluidController*, int>::~CUtlMemory()
0004a4a0 t CUtlMemory<CPredictedPhysicsObject*, int>::Grow(int)
0004a0d0 t CUtlMemory<CPredictedPhysicsObject*, int>::~CUtlMemory()
0004a0d0 t CUtlMemory<CPredictedPhysicsObject*, int>::~CUtlMemory()
00044070 t CUtlMemory<IPhysicsMotionController*, int>::Grow(int)
00041760 t CUtlMemory<IPhysicsMotionController*, int>::~CUtlMemory()
00041760 t CUtlMemory<IPhysicsMotionController*, int>::~CUtlMemory()
00043f10 t CUtlMemory<IPhysicsPlayerController*, int>::Grow(int)
000416b0 t CUtlMemory<IPhysicsPlayerController*, int>::~CUtlMemory()
000416b0 t CUtlMemory<IPhysicsPlayerController*, int>::~CUtlMemory()
00044a80 t CUtlMemory<IPredictable_Controller_Independant*, int>::Grow(int)
00041810 t CUtlMemory<IPredictable_Controller_Independant*, int>::~CUtlMemory()
00041810 t CUtlMemory<IPredictable_Controller_Independant*, int>::~CUtlMemory()
0004a1c0 t CUtlMemory<IVP_Core*, int>::Grow(int)
0004a090 t CUtlMemory<IVP_Core*, int>::~CUtlMemory()
0004a090 t CUtlMemory<IVP_Core*, int>::~CUtlMemory()
00076000 t CUtlMemory<char*, int>::Grow(int)
0006ec90 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::Grow(int)
0006ea30 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::~CUtlMemory()
0006ea30 t CUtlMemory<void (*)(IConVar*, char const*, float), int>::~CUtlMemory()
00066320 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Grow(int)
000662e0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::~CUtlMemory()
000662e0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::~CUtlMemory()
0007cc90 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
0007c770 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::~CUtlMemory()
0007c770 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::~CUtlMemory()
000705d0 t CUtlMemory<void*, int>::Grow(int)
00076150 t CUtlMemory<wchar_t*, int>::Grow(int)
0006aae0 t CUtlMemory<unsigned short, int>::Grow(int)
0007e590 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0007e700 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0007e870 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0007c830 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
0007eac0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
0007cef0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
0007c7b0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
000426a0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00042810 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00043300 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00042980 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
00043550 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Insert(CPhysicsListenerCollision::corepair_t const&)
00042e80 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000431f0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NewNode()
00041fd0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveAll()
0006b890 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0006ba10 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0006bb90 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0006bdc0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t const&)
0006b780 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::NewNode()
0006b540 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
00079650 t CUtlString::MatchesPattern(CUtlString const&, int)
000797a0 t CUtlString::StripTrailingSlash()
00079f60 t CUtlString::UnqualifiedFilename()
00079820 t CUtlString::Get()
00079b50 t CUtlString::Set(char const*)
0007a390 t CUtlString::Left(int)
000797f0 t CUtlString::Purge()
0007a350 t CUtlString::Right(int)
0007a1d0 t CUtlString::Slice(int, int)
00079970 t CUtlString::Append(char const*)
00079be0 t CUtlString::Format(char const*, ...)
00079fa0 t CUtlString::AbsPath(char const*)
00079ef0 t CUtlString::DirName()
00079b90 t CUtlString::FormatV(char const*, char*)
00079cb0 t CUtlString::Replace(char, char)
000795c0 t CUtlString::ToLower()
00079d80 t CUtlString::PathJoin(char const*, char const*)
0007a0c0 t CUtlString::SetDirect(char const*, int)
00079850 t CUtlString::SetLength(int)
00079c10 t CUtlString::operator=(char const*)
0007a030 t CUtlString::operator=(CUtlString const&)
00079d20 t CUtlString::CUtlString(char const*)
00079540 t CUtlString::CUtlString(void const*, int)
00079520 t CUtlString::CUtlString(void*, int, int)
00079c40 t CUtlString::CUtlString(CUtlString const&)
00079710 t CUtlString::CUtlString()
00079d20 t CUtlString::CUtlString(char const*)
00079540 t CUtlString::CUtlString(void const*, int)
00079520 t CUtlString::CUtlString(void*, int, int)
00079c40 t CUtlString::CUtlString(CUtlString const&)
00079710 t CUtlString::CUtlString()
00079870 t CUtlString::operator+=(char)
00079980 t CUtlString::operator+=(double)
000799d0 t CUtlString::operator+=(int)
000798d0 t CUtlString::operator+=(char const*)
00079a20 t CUtlString::operator+=(CUtlString const&)
0007b8f0 t CUtlSymbol::Initialize()
001e6400 b CUtlSymbol::s_pSymbolTable
0007bb80 t CUtlSymbol::LockTableForRead()
0007a3d0 t CUtlSymbol::UnlockTableForRead()
0007a430 t CUtlSymbol::DisableStaticSymbolTable()
001e2b20 d CUtlSymbol::s_bAllowStaticSymbolTable
0007ba10 t CUtlSymbol::CurrTable()
0007c680 t CUtlSymbol::CUtlSymbol(char const*)
0007c680 t CUtlSymbol::CUtlSymbol(char const*)
0006ebf0 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
00048860 t CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
0002e960 t CUtlVector<CPhysicsCollisionSet, CUtlMemory<CPhysicsCollisionSet, int> >::InsertBefore(int)
00051010 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::InsertBefore(int, postrestore_objectlist_t const&)
00050aa0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
00050aa0 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
00056490 t CUtlVector<Vector, CUtlMemoryFixed<Vector, 8u, 0> >::ShiftElementsRight(int, int)
000489b0 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::GrowVector(int)
00048750 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::ShiftElementsRight(int, int)
00048680 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::~CUtlVector()
00048680 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::~CUtlVector()
0006adc0 t CUtlVector<kventry_t, CUtlMemory<kventry_t, int> >::InsertBefore(int, kventry_t const&)
0016aa80 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::SetCount(int)
0016a810 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
0016a810 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
0002de30 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
0002c790 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.22]
0002dd20 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
0002dcd0 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
0002dcd0 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
0002de80 t CUtlVector<int, CUtlMemoryFixedGrowable<int, 64u, int> >::GrowVector(int)
0002df40 t CUtlVector<int, CUtlMemoryFixedGrowable<int, 64u, int> >::SetCount(int)
0006af30 t CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::InsertBefore(int, unsigned int const&)
0007dac0 t CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::SetCount(int)
00043a10 t CUtlVector<CCollisionSolver::realobjectpair_t, CUtlMemory<CCollisionSolver::realobjectpair_t, int> >::InsertBefore(int, CCollisionSolver::realobjectpair_t const&)
000442a0 t CUtlVector<CPhysicsEnvironment::PredictedData_t, CUtlMemory<CPhysicsEnvironment::PredictedData_t, int> >::InsertBefore(int, CPhysicsEnvironment::PredictedData_t const&)
00041a20 t CUtlVector<CPhysicsEnvironment::PredictedData_t, CUtlMemory<CPhysicsEnvironment::PredictedData_t, int> >::~CUtlVector()
00041a20 t CUtlVector<CPhysicsEnvironment::PredictedData_t, CUtlMemory<CPhysicsEnvironment::PredictedData_t, int> >::~CUtlVector()
0007cc40 t CUtlVector<CCountedStringPoolBase<unsigned int>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int> >::GrowVector(int)
0007ca00 t CUtlVector<CCountedStringPoolBase<unsigned int>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned int>::hash_item_t, int> >::ShiftElementsRight(int, int)
0007cb20 t CUtlVector<CCountedStringPoolBase<unsigned short>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int> >::GrowVector(int)
0007c9b0 t CUtlVector<CCountedStringPoolBase<unsigned short>::hash_item_t, CUtlMemory<CCountedStringPoolBase<unsigned short>::hash_item_t, int> >::ShiftElementsRight(int, int)
00050eb0 t CUtlVector<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, CUtlMemory<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, int> >::InsertBefore(int, CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t const&)
00050c10 t CUtlVector<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, CUtlMemory<CPredictedPhysicsObject::PhysicsObjectPredictionBackups_t, int> >::RemoveMultipleFromHead(int)
000565a0 t CUtlVector<CPredictedPlayerController::PlayerControllerPredictionBackups_t, CUtlMemory<CPredictedPlayerController::PlayerControllerPredictionBackups_t, int> >::InsertBefore(int, CPredictedPlayerController::PlayerControllerPredictionBackups_t const&)
00056130 t CUtlVector<CPredictedPlayerController::PlayerControllerPredictionBackups_t, CUtlMemory<CPredictedPlayerController::PlayerControllerPredictionBackups_t, int> >::RemoveMultipleFromHead(int)
0004a3f0 t CUtlVector<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, CUtlMemory<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, int> >::InsertBefore(int, CPredictedPhysicsMotionController::PredictionCommandOffsets_t const&)
0004a020 t CUtlVector<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, CUtlMemory<CPredictedPhysicsMotionController::PredictionCommandOffsets_t, int> >::RemoveMultipleFromHead(int)
00044cb0 t CUtlVector<CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t, CUtlMemory<CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t, int> >::InsertBefore(int, CPredictableControllerSimulationOrderTracker_Manager::CallOrderEntry_t const&)
00043e80 t CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::InsertBefore(int, CPhysCollide* const&)
00041590 t CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::~CUtlVector()
00041590 t CUtlVector<CPhysCollide*, CUtlMemory<CPhysCollide*, int> >::~CUtlVector()
000709c0 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
00042570 t CUtlVector<CPhysicsObject*, CUtlMemory<CPhysicsObject*, int> >::InsertBefore(int, CPhysicsObject* const&)
00041110 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::FastRemove(int)
00043760 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::InsertBefore(int, IPhysicsObject* const&)
000414e0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
000414e0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00046420 t CUtlVector<IVP_Real_Object*, CUtlMemory<IVP_Real_Object*, int> >::InsertBefore(int, IVP_Real_Object* const&)
00042410 t CUtlVector<IDeleteQueueItem*, CUtlMemory<IDeleteQueueItem*, int> >::InsertBefore(int, IDeleteQueueItem* const&)
0002e800 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::InsertBefore(int, IPhysicsEnvironment* const&)
0002e540 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::~CUtlVector()
0002e540 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::~CUtlVector()
0005c6d0 t CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> >::InsertBefore(int, CPhysCollideVirtualMesh* const&)
0003bf50 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::InsertBefore(int, CPhysicsConstraintGroup* const&)
0003bc70 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
0003bc70 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
00043d20 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::InsertBefore(int, CPhysicsFluidController* const&)
00041640 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::~CUtlVector()
00041640 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::~CUtlVector()
0004a570 t CUtlVector<CPredictedPhysicsObject*, CUtlMemory<CPredictedPhysicsObject*, int> >::InsertBefore(int, CPredictedPhysicsObject* const&)
0004a110 t CUtlVector<CPredictedPhysicsObject*, CUtlMemory<CPredictedPhysicsObject*, int> >::~CUtlVector()
0004a110 t CUtlVector<CPredictedPhysicsObject*, CUtlMemory<CPredictedPhysicsObject*, int> >::~CUtlVector()
00044140 t CUtlVector<IPhysicsMotionController*, CUtlMemory<IPhysicsMotionController*, int> >::InsertBefore(int, IPhysicsMotionController* const&)
000417a0 t CUtlVector<IPhysicsMotionController*, CUtlMemory<IPhysicsMotionController*, int> >::~CUtlVector()
000417a0 t CUtlVector<IPhysicsMotionController*, CUtlMemory<IPhysicsMotionController*, int> >::~CUtlVector()
00043fe0 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::InsertBefore(int, IPhysicsPlayerController* const&)
000416f0 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::~CUtlVector()
000416f0 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::~CUtlVector()
00044b50 t CUtlVector<IPredictable_Controller_Independant*, CUtlMemory<IPredictable_Controller_Independant*, int> >::InsertBefore(int, IPredictable_Controller_Independant* const&)
0004a290 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::InsertBefore(int, IVP_Core* const&)
00049fd0 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::Remove(int)
000760c0 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
0006ed50 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::InsertBefore(int, void (* const&)(IConVar*, char const*, float))
0006ea70 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
0006ea70 t CUtlVector<void (*)(IConVar*, char const*, float), CUtlMemory<void (*)(IConVar*, char const*, float), int> >::~CUtlVector()
000663e0 t CUtlVector<IVP_Compact_Ledgetree_Node const*, CUtlMemory<IVP_Compact_Ledgetree_Node const*, int> >::SetCount(int)
0007cd60 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
000706a0 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
0006ffe0 t CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
0006ffe0 t CUtlVector<void*, CUtlMemory<void*, int> >::~CUtlVector()
00076210 t CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::InsertBefore(int, wchar_t* const&)
0006aba0 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::InsertBefore(int, unsigned short const&)
0007d000 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::SetCount(int)
0006a910 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::~CUtlVector()
0006a910 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::~CUtlVector()
00062f90 t CVisitHash::CVisitHash()
00062f90 t CVisitHash::CVisitHash()
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
00172bdc t __cxxabiv1::__terminate(void (*)())
00172c1e t __cxxabiv1::__unexpected(void (*)())
001727ea t __cxxabiv1::__forced_unwind::~__forced_unwind()
00172754 t __cxxabiv1::__forced_unwind::~__forced_unwind()
00172754 t __cxxabiv1::__forced_unwind::~__forced_unwind()
001727bc t __cxxabiv1::__foreign_exception::~__foreign_exception()
00172772 t __cxxabiv1::__foreign_exception::~__foreign_exception()
00172772 t __cxxabiv1::__foreign_exception::~__foreign_exception()
001e3848 d __cxxabiv1::__terminate_handler
001e3844 d __cxxabiv1::__unexpected_handler
00171ec0 t hk_Console::get_instance()
001e3840 d hk_Console::m_default_console_buffer
00171e20 t hk_Console::exit(int)
00171f00 t hk_Console::flush()
00171e40 t hk_Console::printf(char const*, ...)
001fa348 b hk_Console::m_console
00171f10 t hk_Console::~hk_Console()
00171ef0 t hk_Console::~hk_Console()
00171ef0 t hk_Console::~hk_Console()
00080610 t hk_Link_EF::get_controller_name()
00080600 t hk_Link_EF::get_controller_priority()
00080620 t hk_Link_EF::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00080630 t hk_Link_EF::anchor_will_be_deleted_event(IVP_Anchor*)
000805f0 t hk_Link_EF::get_associated_controlled_cores()
00080650 t hk_Link_EF::core_is_going_to_be_deleted_event(IVP_Core*)
000806e0 t hk_Link_EF::~hk_Link_EF()
00080680 t hk_Link_EF::~hk_Link_EF()
00080680 t hk_Link_EF::~hk_Link_EF()
00093920 t hk_Matrix3::set_diagonal(float, float, float)
00093d60 t hk_Matrix3::set_mul3_inv(hk_Rotation const&, hk_Matrix3 const&)
00093cc0 t hk_Matrix3::set_mul3_inv2(hk_Matrix3 const&, hk_Rotation const&)
00093b60 t hk_Matrix3::set_cross_skew(hk_Vector3 const&, hk_Matrix3 const&)
00093860 t hk_Matrix3::set_identity_rotation()
00094080 t hk_Matrix3::set_rotated_diagonal_matrix(hk_Rotation const&, hk_Vector3 const&)
00093950 t hk_Matrix3::invert(float)
00093ec0 t hk_Matrix3::rotate(int, float)
00093810 t hk_Matrix3::set_cols(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00093c00 t hk_Matrix3::set_mul3(hk_Matrix3 const&, hk_Matrix3 const&)
000937a0 t hk_Matrix3::set_rows(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
000938f0 t hk_Matrix3::set_zero()
00093b30 t hk_Matrix3::transpose()
00093e70 t hk_Matrix3::operator-=(hk_Matrix3 const&)
00093e20 t hk_Matrix3::operator+=(hk_Matrix3 const&)
00094bb0 t hk_Vector3::set_rotated_dir(hk_Rotation const&, hk_Vector3 const&)
00094c40 t hk_Vector3::set_rotated_inv_dir(hk_Rotation const&, hk_Vector3 const&)
00094a70 t hk_Vector3::set_transformed_pos(hk_Transform const&, hk_Vector3 const&)
00094b10 t hk_Vector3::set_transformed_inv_pos(hk_Transform const&, hk_Vector3 const&)
0002e360 t IAppSystem::IsSingleton()
0002e330 t IAppSystem::GetDependencies()
0002e340 t IAppSystem::GetTier()
0002e350 t IAppSystem::Reconnect(void* (*)(char const*, int*), char const*)
000e492a t IVP_Anchor::init_anchor(IVP_Actuator*, IVP_Template_Anchor*)
000e7b74 t IVP_Anchor::get_next_anchor()
000e7b7e t IVP_Anchor::get_prev_anchor()
000e7b8a t IVP_Anchor::anchor_get_real_object()
000e3150 t IVP_Anchor::object_is_going_to_be_deleted_event(IVP_Real_Object*)
000e7b6e t IVP_Anchor::IVP_Anchor()
000e7b68 t IVP_Anchor::IVP_Anchor()
000e3b00 t IVP_Anchor::~IVP_Anchor()
000e3b2a t IVP_Anchor::~IVP_Anchor()
0011c298 t IVP_Object::to_cluster()
001189f2 t IVP_Object::init(IVP_Environment*)
0011c2a8 t IVP_Object::to_ball()
0011c290 t IVP_Object::to_poly()
0011c2a0 t IVP_Object::to_real()
0011c25e t IVP_Object::set_type(IVP_OBJECT_TYPE)
00119956 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
001189ae t IVP_Object::IVP_Object(IVP_Environment*)
001199ce t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
0011896a t IVP_Object::IVP_Object(IVP_Environment*)
0011980a t IVP_Object::~IVP_Object()
0011987e t IVP_Object::~IVP_Object()
001198ea t IVP_Object::~IVP_Object()
0013c132 t IVP_U_Quat::get_angles(IVP_U_Float_Point*)
0013b7e0 t IVP_U_Quat::invert_quat()
0013bbbe t IVP_U_Quat::normize_quat()
0013c414 t IVP_U_Quat::set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
0013bc78 t IVP_U_Quat::set_quaternion(float const (*) [4])
0013c4ac t IVP_U_Quat::set_quaternion(IVP_U_Matrix3 const*)
0013c37c t IVP_U_Quat::set_invert_mult(IVP_U_Quat const*, IVP_U_Quat const*)
0013b72a t IVP_U_Quat::fast_normize_quat()
0013b860 t IVP_U_Quat::set_div_unit_quat(IVP_U_Quat const*, IVP_U_Quat const*)
0013bf94 t IVP_U_Quat::set_fast_multiple(IVP_U_Point const*, float)
00138866 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Float_Quat const*)
001387ce t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
001388fe t IVP_U_Quat::normize_correct_step(int)
0013b838 t IVP_U_Quat::set_invert_unit_quat(IVP_U_Quat const*)
0013b696 t IVP_U_Quat::set_interpolate_linear(IVP_U_Quat const*, IVP_U_Quat const*, float)
0013be50 t IVP_U_Quat::set_very_fast_multiple(IVP_U_Float_Point const*, float)
0013c182 t IVP_U_Quat::set_interpolate_smoothly(IVP_U_Quat const*, IVP_U_Quat const*, float)
0013b946 t IVP_U_Quat::set_from_rotation_vectors(float, float, float, float, float, float)
0013c040 t IVP_U_Quat::set_fast_multiple_with_clip(IVP_U_Float_Point const*, float)
0013bef4 t IVP_U_Quat::set(float, float, float)
0013878c t IVP_U_Quat::init()
00138fc2 t IVP_U_Quat::byte_swap()
001390d0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
00139124 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
0013830e t IVP_U_Quat::IVP_U_Quat()
001390fa t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
00139156 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
00138308 t IVP_U_Quat::IVP_U_Quat()
00052870 t CNormalList::ClampVector(Vector const&, float)
00052800 t CNormalList::HasPositiveProjection(Vector const&)
000527f0 t CNormalList::IsFull()
000549d0 t CNormalList::AddNormal(Vector const&)
00055300 t CNormalList::CNormalList(CNormalList const&)
000527d0 t CNormalList::CNormalList()
00055300 t CNormalList::CNormalList(CNormalList const&)
000527d0 t CNormalList::CNormalList()
0016a8f0 t CPolyhedron::~CPolyhedron()
0016a7d0 t CPolyhedron::~CPolyhedron()
0016a7d0 t CPolyhedron::~CPolyhedron()
00065eb0 t CVProfScope::~CVProfScope()
00065eb0 t CVProfScope::~CVProfScope()
0016ad30 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
0016af30 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&, FourVectors*)
0016aeb0 t FourVectors::CalcClosestPointOnLineSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&, float __vector(4)*)
0016aeb0 t FourVectors::CalcClosestPointOnLineSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&, float __vector*)
0016ae20 t FourVectors::CalcClosestPointToLineTSIMD(FourVectors const&, FourVectors const&, FourVectors const&, FourVectors&)
000947c0 t hk_Rotation::set_axis_angle(hk_Vector3 const&, float)
000946c0 t hk_Rotation::set(hk_Quaternion const&)
00118abc t IVP_Cluster::add_object(IVP_Object*)
00118ae4 t IVP_Cluster::remove_object(IVP_Object*)
0011c2bc t IVP_Cluster::get_next_object_in_cluster(IVP_Object*)
0011c2b0 t IVP_Cluster::get_first_object_of_cluster()
00118a70 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
0011a112 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
00118a24 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
0011a1a0 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
0011ab6e t IVP_Cluster::~IVP_Cluster()
0011ac16 t IVP_Cluster::~IVP_Cluster()
0011acb6 t IVP_Cluster::~IVP_Cluster()
00143bf0 t IVP_Mindist::init_mindist(IVP_Real_Object*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_Compact_Edge const*)
00144d90 t IVP_Mindist::is_recursive()
00145030 t IVP_Mindist::get_coll_dist()
001491e0 t IVP_Mindist::recalc_mindist()
00145050 t IVP_Mindist::get_environment()
00149040 t IVP_Mindist::mindist_rescue_push()
001430e0 t IVP_Mindist::simulate_time_event(IVP_Environment*)
001425d0 t IVP_Mindist::hull_manager_is_reset(float, float)
00149330 t IVP_Mindist::recalc_invalid_mindist()
001428e0 t IVP_Mindist::exact_mindist_went_invalid(IVP_Mindist_Manager*)
00142c00 t IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)
001425f0 t IVP_Mindist::create_cp_in_advance_pretension(IVP_Real_Object*, float)
001141b6 t IVP_Mindist::try_to_generate_managed_friction(IVP_Friction_System**, IVP_BOOL*, IVP_Simulation_Unit*, IVP_BOOL)
001437a0 t IVP_Mindist::mindist_hull_limit_exceeded_event(float)
00141a70 t IVP_Mindist::print(char const*)
00115d56 t IVP_Mindist::do_impact()
00141a20 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
00141a20 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
001436a0 t IVP_Mindist::~IVP_Mindist()
00143530 t IVP_Mindist::~IVP_Mindist()
00143530 t IVP_Mindist::~IVP_Mindist()
0013fbf0 t IVP_OV_Node::IVP_OV_Node()
0013fbf0 t IVP_OV_Node::IVP_OV_Node()
0013fc30 t IVP_OV_Node::~IVP_OV_Node()
0013fc30 t IVP_OV_Node::~IVP_OV_Node()
0011fce4 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0011fd92 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0011fe6c t IVP_Polygon::~IVP_Polygon()
0011fe40 t IVP_Polygon::~IVP_Polygon()
00144e60 t IVP_Synapse::get_object()
00144ec0 t IVP_Synapse::init_synapse_real(IVP_Mindist_Base*, IVP_Real_Object*)
00144ea0 t IVP_Synapse::set_synapse_mindist(IVP_Mindist_Base*)
001417f0 t IVP_Synapse::hull_manager_is_reset(float, float)
00143bd0 t IVP_Synapse::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00141820 t IVP_Synapse::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
00144ce0 t IVP_Synapse::get_type()
00144dd0 t IVP_Synapse::~IVP_Synapse()
00144cf0 t IVP_Synapse::~IVP_Synapse()
00144cf0 t IVP_Synapse::~IVP_Synapse()
00133c42 t IVP_U_Hesse::calc_hesse(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00133ccc t IVP_U_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00133c18 t IVP_U_Hesse::mult_hesse(float)
00133bf4 t IVP_U_Hesse::calc_hesse_val(IVP_U_Point const*)
0013514a t IVP_U_Hesse::normize()
00139008 t IVP_U_Hesse::byte_swap()
0013292e t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
0013269e t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001329aa t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
00132734 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001373fe t IVP_U_Point::set_crossing(IVP_U_Hesse*, IVP_U_Hesse*, IVP_U_Hesse*)
00134438 t IVP_U_Point::calc_an_orthogonal(IVP_U_Point const*)
00133602 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Float_Point const*)
001335b6 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Point const*)
00134c10 t IVP_U_Point::solve_quadratic_equation_fast(IVP_U_Point const*)
00134edc t IVP_U_Point::solve_quadratic_equation_accurate(IVP_U_Point const*)
001345d8 t IVP_U_Point::print(char const*)
00134ad6 t IVP_U_Point::rotate(IVP_COORDINATE_INDEX, float)
001337b0 t IVP_U_Point::line_max(IVP_U_Point const*)
00133774 t IVP_U_Point::line_min(IVP_U_Point const*)
00138ee0 t IVP_U_Point::byte_swap()
00138214 t IVP_U_Point::IVP_U_Point(float, float, float)
00138de2 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
001381f4 t IVP_U_Point::IVP_U_Point()
001381fa t IVP_U_Point::IVP_U_Point(float, float, float)
00138dc4 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
001381ee t IVP_U_Point::IVP_U_Point()
0005c220 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::GetRealSize(void*)
0005c400 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::DestroyResourceStorage(void*)
0005c2d0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Lock()
0005c200 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Unlock()
0005c280 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::TryLock()
0005c3b0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005c230 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005c230 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
00040720 t CDeleteProxy<IPhysicsConstraint>::Delete()
0006e9c0 t CEmptyConVar::SetValue(float)
0006e9e0 t CEmptyConVar::SetValue(int)
0006e9a0 t CEmptyConVar::SetValue(char const*)
0006eb00 t CEmptyConVar::~CEmptyConVar()
0006eae0 t CEmptyConVar::~CEmptyConVar()
0006eae0 t CEmptyConVar::~CEmptyConVar()
00035d60 t CPhysCollide::SetOrthographicAreas(Vector const&)
000352a0 t CPhysCollide::UnserializeFromBuffer(char const*, unsigned int, int, bool)
00035d50 t CPhysCollide::ComputeOrthographicAreas(float)
00035e30 t CPhysCollide::~CPhysCollide()
00035e20 t CPhysCollide::~CPhysCollide()
00035e20 t CPhysCollide::~CPhysCollide()
00069d90 t CStringTable::AddString(char const*)
0006a9b0 t CStringTable::~CStringTable()
0006a9b0 t CStringTable::~CStringTable()
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
00061a20 t CTraceSolver::SweepSingleConvex()
000616a0 t CTraceSolver::SolveMeshIntersection(simplex_t&, float*)
000619e0 t CTraceSolver::SolveMeshIntersection2D(simplex_t&)
00065f20 t CTraceSolver::DoSweep()
0005e590 t CTraceSolver::CTraceSolver(CGameTrace*, ITraceObject*, CTraceRay*, ITraceObject*, Vector const&)
0005e590 t CTraceSolver::CTraceSolver(CGameTrace*, ITraceObject*, CTraceRay*, ITraceObject*, Vector const&)
00164410 t fourplanes_t::Set2Planes(VPlane const*)
001643b0 t fourplanes_t::Set4Planes(VPlane const*)
001642c0 t fourplanes_t::ComputeSignbits()
00164360 t fourplanes_t::SetPlane(int, Vector const&, float)
001fa354 b (anonymous namespace)::emergency_mutex
00094840 t hk_Transform::set_transform(hk_Quaternion const&, hk_Vector3 const&)
000949b0 t hk_Transform::set_interpolate(hk_QTransform&, hk_QTransform&, float)
000948f0 t hk_Transform::set_identity_transform()
00094880 t hk_Transform::set_cols4(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00094800 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
00094800 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
000710c0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
000710c0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
00035e50 t IPhysCollide::~IPhysCollide()
00035d00 t IPhysCollide::~IPhysCollide()
00035d00 t IPhysCollide::~IPhysCollide()
000e7bac t IVP_Actuator::get_controller_name()
000e7ba2 t IVP_Actuator::get_controller_priority()
000e2fe4 t IVP_Actuator::anchor_will_be_deleted_event(IVP_Anchor*)
000e7b96 t IVP_Actuator::get_associated_controlled_cores()
000e2ffc t IVP_Actuator::core_is_going_to_be_deleted_event(IVP_Core*)
000e2fb6 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000e2f88 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000e4370 t IVP_Actuator::~IVP_Actuator()
000e43de t IVP_Actuator::~IVP_Actuator()
000e3e18 t IVP_Actuator::~IVP_Actuator()
000de300 t IVP_KK_Input::calc_quad_distance_edge_edge()
000dcfda t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000dcd0e t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001281de t IVP_Material::IVP_Material(IVP_Material const&)
00128190 t IVP_Material::IVP_Material()
001281b2 t IVP_Material::IVP_Material(IVP_Material const&)
0012816e t IVP_Material::IVP_Material()
00128072 t IVP_Material::~IVP_Material()
00127e08 t IVP_Material::~IVP_Material()
00127dec t IVP_Material::~IVP_Material()
000bcda0 t IVP_Triangle::calc_hesse()
000bcde0 t IVP_Triangle::calc_areasize()
000bce40 t IVP_Triangle::print(char const*)
000bf2f0 t IVP_Triangle::IVP_Triangle()
000bf2f0 t IVP_Triangle::IVP_Triangle()
000bcb50 t IVP_Triangle::~IVP_Triangle()
000bcb40 t IVP_Triangle::~IVP_Triangle()
000bcb40 t IVP_Triangle::~IVP_Triangle()
000bce50 t IVP_Tri_Edge::other_side()
000bcf10 t IVP_Tri_Edge::check_concavity(IVP_Tri_Edge*)
000bcef0 t IVP_Tri_Edge::p()
000c1930 t IVP_Tri_Edge::search_nearest_edge_to(IVP_U_Point*, float*)
000bce80 t IVP_Tri_Edge::print(char const*)
00134120 t IVP_U_Matrix::init_rows4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001382f0 t IVP_U_Matrix::set_matrix(IVP_U_Matrix const*)
00133e94 t IVP_U_Matrix::interpolate(IVP_U_Matrix const*, IVP_U_Matrix const*, float)
00135624 t IVP_U_Matrix::real_invert(float)
00137244 t IVP_U_Matrix::real_invert(IVP_U_Matrix const*, float)
001382d8 t IVP_U_Matrix::get_position()
0013424c t IVP_U_Matrix::init_columns4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00135b38 t IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
001353ee t IVP_U_Matrix::set_transpose(IVP_U_Matrix const*)
001346e4 t IVP_U_Matrix::write_to_file(_IO_FILE*, char const*)
001364d0 t IVP_U_Matrix::read_from_file(_IO_FILE*)
00135568 t IVP_U_Matrix::quad_distance_to(IVP_U_Matrix const*)
00134872 t IVP_U_Matrix::init_rot_multiple(IVP_U_Point const*, float)
00134818 t IVP_U_Matrix::init()
00134648 t IVP_U_Matrix::print(char const*)
0013600a t IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
0013538e t IVP_U_Matrix::shift_os(IVP_U_Point const*)
00134392 t IVP_U_Matrix::shift_ws(IVP_U_Point const*)
0013985c t IVP_U_Matrix::byte_swap()
001354c8 t IVP_U_Matrix::transpose()
00139db2 t IVP_U_Memory::neuer_sp_block(unsigned int)
0013a30c t IVP_U_Memory::get_mem_transaction(unsigned int)
0013a1d2 t IVP_U_Memory::align_to_next_adress(void*)
00139e72 t IVP_U_Memory::free_mem_transaction()
0013a1e0 t IVP_U_Memory::end_memory_transaction()
0013a1c6 t IVP_U_Memory::start_memory_transaction()
0013a138 t IVP_U_Memory::init_mem_transaction_usage(char*, int)
0013a27e t IVP_U_Memory::get_mem(unsigned int)
00139ef8 t IVP_U_Memory::free_mem()
0013a092 t IVP_U_Memory::get_memc(unsigned int)
00139ce8 t IVP_U_Memory::init_mem()
00139cb6 t IVP_U_Memory::IVP_U_Memory()
00139c84 t IVP_U_Memory::IVP_U_Memory()
0013a014 t IVP_U_Memory::~IVP_U_Memory()
00139f96 t IVP_U_Memory::~IVP_U_Memory()
0009ab12 t IVP_U_Vector<IVV_Sphere>::clear()
00095436 t IVP_U_Vector<IVP_U_Hesse>::clear()
00036210 t IVP_U_Vector<IVP_U_Point>::clear()
0009d8fc t IVP_U_Vector<IVP_Triangle>::clear()
000fb74c t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
000ffac8 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
0009aacc t IVP_U_Vector<IVP_Compact_Ledge>::~IVP_U_Vector()
000ffa3c t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
000f7276 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
000ffb0e t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
000ffa82 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
000ff9b0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
000f7230 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
000ff96a t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
00131f12 t IVP_U_Vector<IVP_U_Active_Int_Delayed>::~IVP_U_Vector()
000eda34 t IVP_U_Vector<IVP_Constraint_Car_Object>::clear()
00131ecc t IVP_U_Vector<IVP_U_Active_Float_Delayed>::~IVP_U_Vector()
000ff9f6 t IVP_U_Vector<IVP_Collision_Delegator_Root>::clear()
000e7d18 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
000eda7a t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
00075230 t AsianWordWrap::CanEndLine(wchar_t)
00075270 t AsianWordWrap::CanBeginLine(wchar_t)
000752d0 t AsianWordWrap::CanBreakAfter(wchar_t const*)
000752b0 t AsianWordWrap::CanBreakRepeated(wchar_t)
0005b030 t CMeshInstance::EstimatedSize(virtualmeshlist_t const&)
0005b270 t CMeshInstance::CreateResource(virtualmeshlist_t const&)
0005b090 t CMeshInstance::ComputeRootLedgeSize(unsigned char const*)
0005b0d0 t CMeshInstance::Init(virtualmeshlist_t const&)
0005b000 t CMeshInstance::~CMeshInstance()
0005b000 t CMeshInstance::~CMeshInstance()
00063d40 t CPhysicsTrace::SweepBoxIVP(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00063ff0 t CPhysicsTrace::SweepBoxIVP(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00062c10 t CPhysicsTrace::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
000650c0 t CPhysicsTrace::SweepBoxAxisAlignedIVP(Ray_t const&, CPhysCollide const*, CPhysCollideAABBTree const*, CGameTrace*)
00064e10 t CPhysicsTrace::GetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
000641b0 t CPhysicsTrace::SweepIVP(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00064940 t CPhysicsTrace::GetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00062f70 t CPhysicsTrace::CPhysicsTrace()
00062f70 t CPhysicsTrace::CPhysicsTrace()
00062f80 t CPhysicsTrace::~CPhysicsTrace()
00062f80 t CPhysicsTrace::~CPhysicsTrace()
00035680 t CPhysPolysoup::CPhysPolysoup()
00035680 t CPhysPolysoup::CPhysPolysoup()
00040870 t CSleepObjects::event_object_frozen(IVP_Event_Object*)
0003ff20 t CSleepObjects::event_object_created(IVP_Event_Object*)
00040dd0 t CSleepObjects::event_object_deleted(IVP_Event_Object*)
00042600 t CSleepObjects::event_object_revived(IVP_Event_Object*)
00040f10 t CSleepObjects::~CSleepObjects()
00040e50 t CSleepObjects::~CSleepObjects()
00040e50 t CSleepObjects::~CSleepObjects()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
00070d80 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
000703f0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
00070800 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
00070080 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
000704e0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
000701b0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
000701b0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
00070300 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
00070300 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
00044fe0 t CUtlMultiList<void*, unsigned short>::CreateList()
00042240 t CUtlMultiList<void*, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
000449b0 t CUtlMultiList<void*, unsigned short>::Alloc()
00041f50 t CUtlMultiList<void*, unsigned short>::Remove(unsigned short, unsigned short)
00041e70 t CUtlMultiList<void*, unsigned short>::Unlink(unsigned short, unsigned short)
00041b10 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
00041b10 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
00041c50 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00041c50 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
00040810 t CVoidPairHash::~CVoidPairHash()
000407f0 t CVoidPairHash::~CVoidPairHash()
000407f0 t CVoidPairHash::~CVoidPairHash()
000923f0 t hk_Array_Base::grow_mem(int)
000924b0 t hk_Array_Base::grow_mem(int, int)
000923a0 t hk_Array_Base::alloc_mem(int, int)
00082920 t hk_Constraint::get_constraint_dof()
00082910 t hk_Constraint::get_constraint_type()
000828a0 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
000828a0 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
00082860 t hk_Constraint::~hk_Constraint()
00082820 t hk_Constraint::~hk_Constraint()
00082820 t hk_Constraint::~hk_Constraint()
00094330 t hk_Quaternion::set_axis_angle(hk_Vector3 const&, float)
00094130 t hk_Quaternion::set(hk_Rotation const&)
000943a0 t hk_Quaternion::set_slerp(hk_Quaternion const&, hk_Quaternion const&, float)
00155d24 t IVP_3D_Solver::calc_nullstelle(IVP_Time, IVP_Time, float, float, float, IVP_Real_Object*, IVP_Real_Object*)
00156546 t IVP_3D_Solver::set_max_deviation(float)
0015611a t IVP_3D_Solver::find_first_t_for_value_coll(float, float, IVP_Time, IVP_Time, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
00155ebc t IVP_3D_Solver::find_first_t_for_value_max_dev(float, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
0015610e t IVP_3D_Solver::find_first_t_for_value_max_dev2(float, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
000da200 t IVP_CFEP_Hash::pair_to_index(IVP_CFEP_Objectpair*)
000daa54 t IVP_CFEP_Hash::add(IVP_CFEP_Objectpair*)
000da934 t IVP_CFEP_Hash::find(IVP_CFEP_Objectpair*)
000da9c4 t IVP_CFEP_Hash::remove(IVP_CFEP_Objectpair*)
000da8cc t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000da900 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000da714 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000da7ac t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000da83c t IVP_CFEP_Hash::~IVP_CFEP_Hash()
00141630 t IVP_Collision::set_fvector_index(int, int)
00141580 t IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator*)
00141660 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
00141660 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
001415c0 t IVP_Collision::~IVP_Collision()
001415a0 t IVP_Collision::~IVP_Collision()
001415a0 t IVP_Collision::~IVP_Collision()
000f25e4 t IVP_MI_Vector::add_multiple(IVP_MI_Vector const*, float)
000f2632 t IVP_MI_Vector::set_time_stamp(IVP_Time)
000f381b t IVP_MI_Vector::malloc_mi_vector(int)
000f3745 t IVP_MI_Vector::malloc_and_set_mi_vector(int, float*)
000f25bc t IVP_MI_Vector::add(IVP_MI_Vector const*)
000f371c t IVP_MI_Vector::set(int, float)
000f24c0 t IVP_MI_Vector::set(IVP_MI_Vector const*)
000f2610 t IVP_MI_Vector::mult(float)
000f2594 t IVP_MI_Vector::subtract(IVP_MI_Vector const*)
0014b3f0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
0014b3f0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
0013792a t IVP_U_Matrix3::get_angles(float*, float*, float*)
001341b0 t IVP_U_Matrix3::init_rows3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001342ca t IVP_U_Matrix3::transpose3()
001337f8 t IVP_U_Matrix3::orthogonize()
00133fd4 t IVP_U_Matrix3::real_invert(float)
0013775e t IVP_U_Matrix3::orthonormize()
00134204 t IVP_U_Matrix3::init_columns3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00134a28 t IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)
00134312 t IVP_U_Matrix3::set_transpose3(IVP_U_Matrix3 const*)
00133868 t IVP_U_Matrix3::calc_eigen_vector(float, IVP_U_Point*)
00136fac t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00136af4 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
00136d00 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX)
001368d4 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001343ba t IVP_U_Matrix3::quad_rot_distance_to(IVP_U_Matrix3 const*)
001347ea t IVP_U_Matrix3::init3()
001375e4 t IVP_U_Matrix3::normize()
00138d7c t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00138da0 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
00138d20 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00138d4e t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
001382c0 t IVP_U_Matrix3::set_elem(int, int, float)
00138f18 t IVP_U_Matrix3::byte_swap()
000f8a32 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000f8a66 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000bd2a0 t P_Sur_2D_Line::has_points(P_Sur_2D_Point*, P_Sur_2D_Point*)
000bd330 t P_Sur_2D_Line::dist_to_point(IVP_U_Point*)
000bd610 t P_Sur_2D_Line::is_crossing_line(P_Sur_2D_Line*)
000bd500 t P_Sur_2D_Line::overlaps_with_line(P_Sur_2D_Line*)
000bd3e0 t P_Sur_2D_Line::hesse_dist_to_point(IVP_U_Point*)
000bd420 t P_Sur_2D_Line::point_lies_in_interval(IVP_U_Point*)
000bd250 t P_Sur_2D_Line::point_lies_to_the_left(IVP_U_Point*)
000bd190 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000bd190 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000bd240 t P_Sur_2D_Line::~P_Sur_2D_Line()
000bd240 t P_Sur_2D_Line::~P_Sur_2D_Line()
0002e460 t CBaseAppSystem<IPhysics>::Disconnect()
0002e440 t CBaseAppSystem<IPhysics>::QueryInterface(char const*)
0002e420 t CBaseAppSystem<IPhysics>::GetDependencies()
0002e470 t CBaseAppSystem<IPhysics>::Init()
0002e450 t CBaseAppSystem<IPhysics>::Connect(void* (*)(char const*, int*))
0002e490 t CBaseAppSystem<IPhysics>::GetTier()
0002e480 t CBaseAppSystem<IPhysics>::Shutdown()
0002e4a0 t CBaseAppSystem<IPhysics>::Reconnect(void* (*)(char const*, int*), char const*)
00065c80 t CDefConvexInfo::GetContents(int)
0006ce80 t ConCommandBase::CopyString(char const*)
0006c630 t ConCommandBase::RemoveFlags(int)
001e4b40 b ConCommandBase::s_pAccessor
001e4b44 b ConCommandBase::s_pConCommandBases
0006c5d0 t ConCommandBase::Init()
0006c560 t ConCommandBase::Create(char const*, char const*, int)
0006ce70 t ConCommandBase::GetNext()
0006c620 t ConCommandBase::AddFlags(int)
0006ce40 t ConCommandBase::Shutdown()
0006ce20 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0006cdf0 t ConCommandBase::ConCommandBase()
0006ce20 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0006cdf0 t ConCommandBase::ConCommandBase()
0006c8e0 t ConCommandBase::~ConCommandBase()
0006c530 t ConCommandBase::~ConCommandBase()
0006c530 t ConCommandBase::~ConCommandBase()
0004c9b0 t CPhysicsObject::EnableDrag(bool)
0004d090 t CPhysicsObject::NotifyWake()
0004a9f0 t CPhysicsObject::SetDamping(float const*, float const*)
0004c000 t CPhysicsObject::SetInertia(Vector const&)
0004db40 t CPhysicsObject::AddVelocity(Vector const*, Vector const*)
0004d060 t CPhysicsObject::NotifySleep()
0004aa30 t CPhysicsObject::SetContents(unsigned int)
0004a8c0 t CPhysicsObject::SetGameData(void*)
0004b690 t CPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
0004d7e0 t CPhysicsObject::SetVelocity(Vector const*, Vector const*)
0004b3d0 t CPhysicsObject::BecomeHinged(int)
0004c3e0 t CPhysicsObject::EnableMotion(bool)
0004b3b0 t CPhysicsObject::RemoveHinged()
0004a620 t CPhysicsObject::SetGameFlags(unsigned short)
0004a640 t CPhysicsObject::SetGameIndex(unsigned short)
0004b550 t CPhysicsObject::UpdateShadow(Vector const&, QAngle const&, bool, float)
0004c8b0 t CPhysicsObject::BecomeTrigger()
0004d7b0 t CPhysicsObject::ClampVelocity()
0004c4a0 t CPhysicsObject::EnableGravity(bool)
0004abe0 t CPhysicsObject::RemoveTrigger()
0004c5d0 t CPhysicsObject::SetSphereRadius(float)
0004e170 t CPhysicsObject::WriteToTemplate(vphysics_save_cphysicsobject_t&)
0004de70 t CPhysicsObject::ApplyForceCenter(Vector const&)
0004dda0 t CPhysicsObject::ApplyForceOffset(Vector const&, Vector const&)
0004c520 t CPhysicsObject::EnableCollisions(bool)
0004e370 t CPhysicsObject::InitFromTemplate(CPhysicsEnvironment*, void*, vphysics_save_cphysicsobject_t const&)
0004aa20 t CPhysicsObject::SetBuoyancyRatio(float)
0004a600 t CPhysicsObject::SetCallbackFlags(unsigned short)
0004c2c0 t CPhysicsObject::SetMaterialIndex(int)
0004dd00 t CPhysicsObject::ApplyTorqueCenter(Vector const&)
0004a680 t CPhysicsObject::SetCollisionHints(unsigned int)
0004b820 t CPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
0004d140 t CPhysicsObject::RecomputeDragBases()
0004a780 t CPhysicsObject::SetDragCoefficient(float*, float*)
0004b4a0 t CPhysicsObject::ComputeShadowControl(hlshadowcontrol_params_t const&, float, float)
0004ad50 t CPhysicsObject::RecheckContactPoints(bool)
0004c070 t CPhysicsObject::CreateFrictionSnapshot()
0004d0a0 t CPhysicsObject::GetVPhysicsEnvironment()
0004c840 t CPhysicsObject::RecheckCollisionFilter()
0004aa40 t CPhysicsObject::RemoveShadowController()
000509c0 t CPhysicsObject::SetErrorDelta_Position(Vector const&)
000509d0 t CPhysicsObject::SetErrorDelta_Velocity(Vector const&)
0004a750 t CPhysicsObject::SetUseAlternateGravity(bool)
0004c060 t CPhysicsObject::DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
0004df30 t CPhysicsObject::RestoreShadowController(IPhysicsShadowController*)
0004d990 t CPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
0004d5f0 t CPhysicsObject::Init(CPhysCollide const*, IVP_Real_Object*, int, float, float, float)
0004c130 t CPhysicsObject::Wake()
0004c110 t CPhysicsObject::Sleep()
0004d6d0 t CPhysicsObject::SetMass(float)
0004a7e0 t CPhysicsObject::SyncWith(IPhysicsObject*)
0004c350 t CPhysicsObject::SetShadow(float, float, bool, bool)
0004d530 t CPhysicsObject::SetVolume(float)
0004cfd0 t CPhysicsObject::CPhysicsObject()
0004cfd0 t CPhysicsObject::CPhysicsObject()
0004c280 t CPhysicsObject::~CPhysicsObject()
0004c150 t CPhysicsObject::~CPhysicsObject()
0004c150 t CPhysicsObject::~CPhysicsObject()
00057000 t CPhysicsSpring::GetEndObject()
00056720 t CPhysicsSpring::GetEndpoints(Vector*, Vector*)
000569a0 t CPhysicsSpring::AttachListener()
00056a40 t CPhysicsSpring::DetachListener()
00056ff0 t CPhysicsSpring::GetStartObject()
00056800 t CPhysicsSpring::SetSpringLength(float)
00056b70 t CPhysicsSpring::WriteToTemplate(vphysics_save_cphysicsspring_t&)
00056870 t CPhysicsSpring::SetSpringDamping(float)
000568a0 t CPhysicsSpring::SetSpringConstant(float)
00057060 t CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00057020 t CPhysicsSpring::event_object_created(IVP_Event_Object*)
00056ac0 t CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00057040 t CPhysicsSpring::event_object_revived(IVP_Event_Object*)
000569f0 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
000569f0 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
00056b50 t CPhysicsSpring::~CPhysicsSpring()
00056ae0 t CPhysicsSpring::~CPhysicsSpring()
00056ae0 t CPhysicsSpring::~CPhysicsSpring()
00070b30 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
00070cd0 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00070260 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00070260 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00044e40 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
00044340 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00041bb0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00041bb0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
000691a0 t CVPhysicsParse::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
000698d0 t CVPhysicsParse::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00068dc0 t CVPhysicsParse::ParseCustom(void*, IVPhysicsKeyHandler*)
00068ed0 t CVPhysicsParse::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00068670 t CVPhysicsParse::ParseVehicleAxle(vehicle_axleparams_t&)
00067f90 t CVPhysicsParse::ParseVehicleBody(vehicle_bodyparams_t&)
000690e0 t CVPhysicsParse::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
000683d0 t CVPhysicsParse::ParseVehicleWheel(vehicle_wheelparams_t&)
00067b60 t CVPhysicsParse::ParseVehicleEngine(vehicle_engineparams_t&)
00066480 t CVPhysicsParse::GetCurrentBlockName()
00068c30 t CVPhysicsParse::ParseCollisionRules(ragdollcollisionrules_t*, IVPhysicsKeyHandler*)
00067430 t CVPhysicsParse::ParseVehicleSteering(vehicle_steeringparams_t&)
00069450 t CVPhysicsParse::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00068210 t CVPhysicsParse::ParseVehicleSuspension(vehicle_suspensionparams_t&)
000679a0 t CVPhysicsParse::ParseVehicleEngineBoost(vehicle_engineparams_t&)
000689e0 t CVPhysicsParse::ParseRagdollAnimatedFriction(ragdollanimatedfriction_t*, IVPhysicsKeyHandler*)
000664a0 t CVPhysicsParse::Finished()
000688a0 t CVPhysicsParse::NextBlock()
0006a840 t CVPhysicsParse::SkipBlock()
00068920 t CVPhysicsParse::CVPhysicsParse(char const*)
00068920 t CVPhysicsParse::CVPhysicsParse(char const*)
0006a8d0 t CVPhysicsParse::~CVPhysicsParse()
0006a830 t CVPhysicsParse::~CVPhysicsParse()
0006a830 t CVPhysicsParse::~CVPhysicsParse()
00050b60 t IPhysicsObject::~IPhysicsObject()
00050950 t IPhysicsObject::~IPhysicsObject()
00050950 t IPhysicsObject::~IPhysicsObject()
00057070 t IPhysicsSpring::~IPhysicsSpring()
00056fe0 t IPhysicsSpring::~IPhysicsSpring()
00056fe0 t IPhysicsSpring::~IPhysicsSpring()
000e96b6 t IVP_Car_System::calc_ackerman_angle(float, float, float)
000eb96e t IVP_Car_System::event_object_deleted(IVP_Event_Object*)
000e9512 t IVP_Car_System::IVP_Car_System()
000e94f6 t IVP_Car_System::IVP_Car_System()
000e962e t IVP_Car_System::~IVP_Car_System()
000e94da t IVP_Car_System::~IVP_Car_System()
000e94be t IVP_Car_System::~IVP_Car_System()
0015a178 t IVP_Constraint::deactivate()
00159ebc t IVP_Constraint::get_environment()
00159fd6 t IVP_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
00159fb0 t IVP_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
00159f8a t IVP_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
0015a0ba t IVP_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
0015a094 t IVP_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
0015a06e t IVP_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
0015a152 t IVP_Constraint::change_fixing_point_Ros(IVP_U_Point const*)
00153190 t IVP_Constraint::get_controller_priority()
0015a022 t IVP_Constraint::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
00159f64 t IVP_Constraint::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0015a106 t IVP_Constraint::change_translation_axes_Ros(IVP_U_Matrix3 const*)
0015a048 t IVP_Constraint::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0015a12c t IVP_Constraint::change_target_fixing_point_Ros(IVP_U_Point const*)
00159f3e t IVP_Constraint::change_Aos_to_relaxe_constraint()
00159f18 t IVP_Constraint::change_Ros_to_relaxe_constraint()
00159ffc t IVP_Constraint::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
001531a0 t IVP_Constraint::get_associated_controlled_cores()
00159eb4 t IVP_Constraint::get_minimum_simulation_frequency()
00159e28 t IVP_Constraint::core_is_going_to_be_deleted_event(IVP_Core*)
0015a0e0 t IVP_Constraint::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
0015a1b2 t IVP_Constraint::activate()
00159e7a t IVP_Constraint::IVP_Constraint()
00159e40 t IVP_Constraint::IVP_Constraint()
0015a28a t IVP_Constraint::~IVP_Constraint()
0015a326 t IVP_Constraint::~IVP_Constraint()
0015a1f6 t IVP_Constraint::~IVP_Constraint()
00031b30 t IVP_Controller::reset_time(IVP_Time)
00031b40 t IVP_Controller::get_controller_name()
00031b20 t IVP_Controller::get_minimum_simulation_frequency()
00031b10 t IVP_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00031cf0 t IVP_Controller::~IVP_Controller()
00031b50 t IVP_Controller::~IVP_Controller()
00031b50 t IVP_Controller::~IVP_Controller()
000e3f10 t IVP_Extra_Info::IVP_Extra_Info()
000e3f26 t IVP_Extra_Info::IVP_Extra_Info()
00116b8a t IVP_Merge_Core::set_radius()
001162b6 t IVP_Merge_Core::place_objects()
00116030 t IVP_Merge_Core::find_main_axis()
00115eac t IVP_Merge_Core::find_mass_center()
00115f70 t IVP_Merge_Core::find_damp_factors()
00116440 t IVP_Merge_Core::synchronize_motion()
001161d4 t IVP_Merge_Core::check_for_unmovable_core()
00116c4c t IVP_Merge_Core::calc_calc()
001165b0 t IVP_Merge_Core::set_speed()
00116514 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
0011657c t IVP_Merge_Core::IVP_Merge_Core()
00116548 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
00116596 t IVP_Merge_Core::IVP_Merge_Core()
001164c0 t IVP_Merge_Core::~IVP_Merge_Core()
001164ea t IVP_Merge_Core::~IVP_Merge_Core()
0014b170 t IVP_OO_Watcher::get_ledges(IVP_Compact_Ledge const**)
0014b150 t IVP_OO_Watcher::get_objects(IVP_Real_Object**)
00144f20 t IVP_OO_Watcher::get_synapse(int)
0014ae30 t IVP_OO_Watcher::hull_limit_exceeded_event()
0014b0d0 t IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
0014b0a0 t IVP_OO_Watcher::hull_manager_is_going_to_be_deleted_event()
0014b300 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
0014b300 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
0014b2e0 t IVP_OO_Watcher::~IVP_OO_Watcher()
0014b1a0 t IVP_OO_Watcher::~IVP_OO_Watcher()
0014b1a0 t IVP_OO_Watcher::~IVP_OO_Watcher()
0013faf0 t IVP_OV_Element::add_oo_collision(IVP_Collision*)
0013fa10 t IVP_OV_Element::add_to_hull_manager(IVP_Hull_Manager*, float)
0013fb70 t IVP_OV_Element::remove_oo_collision(IVP_Collision*)
0013f950 t IVP_OV_Element::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0013f930 t IVP_OV_Element::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0013f920 t IVP_OV_Element::get_type()
0013f9b0 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
0013f9b0 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
00141200 t IVP_OV_Element::~IVP_OV_Element()
00141140 t IVP_OV_Element::~IVP_OV_Element()
00141140 t IVP_OV_Element::~IVP_OV_Element()
000bc8e0 t IVP_point_hash::find_point(IVP_Poly_Point*)
000bc880 t IVP_point_hash::remove_point(IVP_Poly_Point*)
000bc7a0 t IVP_point_hash::point_to_index(IVP_Poly_Point*)
000bc820 t IVP_point_hash::add_point(IVP_Poly_Point*)
000bc970 t IVP_point_hash::IVP_point_hash(int)
000bc970 t IVP_point_hash::IVP_point_hash(int)
000bc770 t IVP_point_hash::~IVP_point_hash()
000bc750 t IVP_point_hash::~IVP_point_hash()
000bc750 t IVP_point_hash::~IVP_point_hash()
000bcbe0 t IVP_Poly_Point::p()
000bcb90 t IVP_Poly_Point::print(char const*)
000bcb70 t IVP_Poly_Point::point_num()
000e17da t IVP_Ray_Solver::check_ray_against_ball(IVP_Ball*)
000df27a t IVP_Ray_Solver::check_ray_against_cube(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e1b00 t IVP_Ray_Solver::check_ray_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000e1a82 t IVP_Ray_Solver::check_ray_against_object(IVP_Real_Object*)
000df1e8 t IVP_Ray_Solver::check_ray_against_square(float, float, IVP_U_Float_Point const*, IVP_U_Float_Point const*, int, int)
000e1d3e t IVP_Ray_Solver::check_ray_against_all_objects_in_sim(IVP_Environment const*)
000df13c t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000df090 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000e2adc t IVP_Ray_Solver::~IVP_Ray_Solver()
000e2a18 t IVP_Ray_Solver::~IVP_Ray_Solver()
000e29fc t IVP_Ray_Solver::~IVP_Ray_Solver()
0014b030 t IVP_Synapse_OO::init_synapse_oo(IVP_OO_Watcher*, IVP_Real_Object*)
0014af90 t IVP_Synapse_OO::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0014afb0 t IVP_Synapse_OO::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
00144d70 t IVP_Synapse_OO::get_type()
00144f10 t IVP_Synapse_OO::IVP_Synapse_OO()
00144f10 t IVP_Synapse_OO::IVP_Synapse_OO()
0014b010 t IVP_Synapse_OO::~IVP_Synapse_OO()
0014afe0 t IVP_Synapse_OO::~IVP_Synapse_OO()
0014afe0 t IVP_Synapse_OO::~IVP_Synapse_OO()
000c1a90 t IVP_Tetra_Edge::p()
000c1a20 t IVP_Tetra_Edge::print(char const*)
00125bfa t IVP_Time_Event::simulate_time_event(IVP_Environment*)
00125ba6 t IVP_Time_Event::IVP_Time_Event()
00125b8a t IVP_Time_Event::IVP_Time_Event()
0013aa76 t IVP_U_Min_Hash::remove_min()
0013a918 t IVP_U_Min_Hash::change_value(void*, float)
0013ab1c t IVP_U_Min_Hash::find_min_elem()
0013ab34 t IVP_U_Min_Hash::find_min_value()
0013a3a0 t IVP_U_Min_Hash::min_added_at_index(IVP_U_Min_Hash_Elem*, int)
0013a3fc t IVP_U_Min_Hash::min_removed_at_index(IVP_U_Min_Hash_Elem*, int)
0013a834 t IVP_U_Min_Hash::add(void*, float)
0013a59e t IVP_U_Min_Hash::remove(void*)
0013a748 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
0013a7be t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
0013a638 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
0013a6c0 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
0013b390 t IVP_U_Min_List::has_elements()
0013b37a t IVP_U_Min_List::find_min_elem()
0013b3a4 t IVP_U_Min_List::find_min_value()
0013b3b0 t IVP_U_Min_List::prefetch0_minlist()
0013b3b6 t IVP_U_Min_List::prefetch1_minlist()
0013ac20 t IVP_U_Min_List::remove_minlist_elem(unsigned int)
0013aefc t IVP_U_Min_List::add(void*, float)
0013ad2e t IVP_U_Min_List::check()
0013adb8 t IVP_U_Min_List::IVP_U_Min_List(int)
0013ae5a t IVP_U_Min_List::IVP_U_Min_List(int)
0013b312 t IVP_U_Min_List::~IVP_U_Min_List()
0013b346 t IVP_U_Min_List::~IVP_U_Min_List()
00132be2 t IVP_U_Straight::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*, float*)
00132826 t IVP_U_Straight::set(IVP_U_Point const*, IVP_U_Point const*)
001327ca t IVP_U_Straight::set(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0013287e t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
001328d6 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
000bd100 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000bd100 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000bd180 t P_Sur_2D_Point::~P_Sur_2D_Point()
000bd180 t P_Sur_2D_Point::~P_Sur_2D_Point()
00032210 t CCollisionQuery::ConvexCount()
00032240 t CCollisionQuery::GetGameData(int)
00032220 t CCollisionQuery::TriangleCount(int)
00032260 t CCollisionQuery::GetTriangleVerts(int, int, Vector*)
000322f0 t CCollisionQuery::SetTriangleVerts(int, int, Vector const*)
00032300 t CCollisionQuery::GetTriangleMaterialIndex(int, int)
00032330 t CCollisionQuery::SetTriangleMaterialIndex(int, int, int)
00034960 t CCollisionQuery::Triangle(IVP_Compact_Ledge*, int)
00034990 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
00034990 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
000360a0 t CCollisionQuery::~CCollisionQuery()
00036040 t CCollisionQuery::~CCollisionQuery()
00036040 t CCollisionQuery::~CCollisionQuery()
000405c0 t CDragController::get_controller_name()
000405d0 t CDragController::get_controller_priority()
000408d0 t CDragController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00040790 t CDragController::~CDragController()
000405b0 t CDragController::~CDragController()
000405b0 t CDragController::~CDragController()
00045090 t CObjectPairHash::AddObjectPair(void*, void*)
00040840 t CObjectPairHash::IsObjectInHash(void*)
00044680 t CObjectPairHash::RemoveObjectPair(void*, void*)
00040670 t CObjectPairHash::IsObjectPairInHash(void*, void*)
00041190 t CObjectPairHash::GetPairListForObject(void*, int, void**)
00041240 t CObjectPairHash::GetPairCountForObject(void*)
000443f0 t CObjectPairHash::RemoveAllPairsForObject(void*)
00041dd0 t CObjectPairHash::~CObjectPairHash()
00041d40 t CObjectPairHash::~CObjectPairHash()
00041d40 t CObjectPairHash::~CObjectPairHash()
0002e510 t CTier1AppSystem<IPhysics, 0>::Disconnect()
0002e4e0 t CTier1AppSystem<IPhysics, 0>::Init()
0002e520 t CTier1AppSystem<IPhysics, 0>::Connect(void* (*)(char const*, int*))
0002e430 t CTier1AppSystem<IPhysics, 0>::GetTier()
0002e4c0 t CTier1AppSystem<IPhysics, 0>::Shutdown()
00079ad0 t CUtlBinaryBlock::Set(void const*, int)
00079740 t CUtlBinaryBlock::SetLength(int)
0007a000 t CUtlBinaryBlock::operator=(CUtlBinaryBlock const&)
00079690 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00079480 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
00079460 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
0007a060 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
00079690 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00079480 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
00079460 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
0007a060 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
0007c890 t CUtlSymbolTable::CTree::~CTree()
0007c890 t CUtlSymbolTable::CTree::~CTree()
0007c3f0 t CUtlSymbolTable::AddString(char const*)
0007b6c0 t CUtlSymbolTable::RemoveAll()
0007b710 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
0007b710 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
0007b7b0 t CUtlSymbolTable::~CUtlSymbolTable()
0007b7b0 t CUtlSymbolTable::~CUtlSymbolTable()
0008e0c0 t hk_Linear_Query::initialize(hk_Rigid_Body_Core*, hk_Rigid_Body_Core*, float __vector(4), float __vector(4))
0008e0c0 t hk_Linear_Query::initialize(hk_Rigid_Body_Core*, hk_Rigid_Body_Core*, float __vector, float __vector)
00094cd0 t hk_Vector3_Util::random_vec()
00094d00 t hk_Vector3_Util::perp_vec(hk_Vector3 const&)
00035e70 t ICollisionQuery::~ICollisionQuery()
00035cf0 t ICollisionQuery::~ICollisionQuery()
00035cf0 t ICollisionQuery::~ICollisionQuery()
00117134 t IVP_Core_Merged::set_by_merge(IVP_Core*, IVP_Core*)
000f9dc0 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000fa3ec t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000f9e78 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000fa4a2 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000fcd68 t IVP_Environment::reset_time()
000fce9e t IVP_Environment::create_ball(IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000fc4e4 t IVP_Environment::do_d_events()
000ff8dc t IVP_Environment::get_gravity()
000fd376 t IVP_Environment::set_gravity(IVP_U_Point*)
000fd140 t IVP_Environment::create_force(IVP_Template_Force*)
000fd502 t IVP_Environment::simulate_psi(IVP_Time)
000fd2d2 t IVP_Environment::create_rotmot(IVP_Template_Rot_Mot*)
000fd08c t IVP_Environment::create_spring(IVP_Template_Spring*)
000fd234 t IVP_Environment::create_torque(IVP_Template_Torque*)
000ff78a t IVP_Environment::get_env_state()
000fc89a t IVP_Environment::merge_objects(IVP_U_Vector<IVP_Real_Object>*)
000fcf14 t IVP_Environment::create_polygon(IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000fbeaa t IVP_Environment::fire_event_PSI()
000fcd30 t IVP_Environment::simulate_dtime(float)
000fcde2 t IVP_Environment::simulate_until(IVP_Time)
000fc28e t IVP_Environment::add_draw_vector(IVP_U_Point const*, IVP_U_Float_Point const*, char const*, int)
0011cf3c t IVP_Environment::add_revive_core(IVP_Core*)
000fc6da t IVP_Environment::add_listener_PSI(IVP_Listener_PSI*)
000ff8be t IVP_Environment::get_current_time()
000fce78 t IVP_Environment::get_root_cluster()
000ff816 t IVP_Environment::get_sim_unit_mem()
000ff8cc t IVP_Environment::get_wakeup_count()
0011cd7e t IVP_Environment::revive_cores_PSI()
000fb984 t IVP_Environment::set_current_time(IVP_Time)
000fcf8a t IVP_Environment::create_check_dist(IVP_Template_Check_Dist*)
000f3d7e t IVP_Environment::create_constraint(IVP_Template_Constraint const*)
000fcfe0 t IVP_Environment::create_stabilizer(IVP_Template_Stabilizer*)
000fd036 t IVP_Environment::create_suspension(IVP_Template_Suspension*)
000ff734 t IVP_Environment::get_next_PSI_time()
000ff760 t IVP_Environment::get_delta_PSI_time()
000ff8b0 t IVP_Environment::get_freeze_manager()
000ff824 t IVP_Environment::get_short_term_mem()
0011cc66 t IVP_Environment::remove_revive_core(IVP_Core*)
000fd3ce t IVP_Environment::set_delta_PSI_time(float)
000fccf2 t IVP_Environment::simulate_time_step(float)
000fc092 t IVP_Environment::remove_listener_PSI(IVP_Listener_PSI*)
000ff77c t IVP_Environment::get_current_time_code()
000ff858 t IVP_Environment::get_statistic_manager()
000ff8f8 t IVP_Environment::get_gravity_controller()
000ff76e t IVP_Environment::get_inv_delta_PSI_time()
000ff80a t IVP_Environment::get_performancecounter()
000fd1de t IVP_Environment::create_controller_motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
000fd412 t IVP_Environment::delete_draw_vector_debug()
000fbb1c t IVP_Environment::fire_event_object_frozen(IVP_Event_Object*)
000fbbdc t IVP_Environment::fire_event_pre_collision(IVP_Event_Collision*)
000ff74a t IVP_Environment::get_old_time_of_last_PSI()
000fba5e t IVP_Environment::fire_event_object_created(IVP_Event_Object*)
000fbabe t IVP_Environment::fire_event_object_deleted(IVP_Event_Object*)
000fbb7c t IVP_Environment::fire_event_object_revived(IVP_Event_Object*)
000fbc52 t IVP_Environment::fire_event_post_collision(IVP_Event_Collision*)
000fc840 t IVP_Environment::add_listener_object_global(IVP_Listener_Object*)
000ff726 t IVP_Environment::get_integrated_energy_damp()
000fcc10 t IVP_Environment::add_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000fbcca t IVP_Environment::fire_event_friction_created(IVP_Event_Friction*)
000fbd42 t IVP_Environment::fire_event_friction_deleted(IVP_Event_Friction*)
000ff864 t IVP_Environment::get_betterstatisticsmanager()
000ffb54 t IVP_Environment::must_perform_movement_check()
000fce2a t IVP_Environment::simulate_variable_time_step(float)
000fbf12 t IVP_Environment::fire_event_constraint_broken(IVP_Constraint*)
000fbf70 t IVP_Environment::fire_event_constraint_broken(hk_Breakable_Constraint*)
000fccba t IVP_Environment::force_psi_on_next_simulation()
000fc734 t IVP_Environment::add_listener_collision_global(IVP_Listener_Collision*)
000fb99c t IVP_Environment::remove_listener_object_global(IVP_Listener_Object*)
000fcba8 t IVP_Environment::add_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000fc680 t IVP_Environment::add_listener_constraint_global(IVP_Listener_Constraint*)
000fc294 t IVP_Environment::get_global_collision_tolerance()
000fc78e t IVP_Environment::install_listener_object_global(IVP_Listener_Object*)
000fcbdc t IVP_Environment::remove_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000fc348 t IVP_Environment::set_global_collision_tolerance(float, float)
000fbdba t IVP_Environment::fire_event_friction_pair_created(IVP_Friction_Core_Pair*)
000fbe32 t IVP_Environment::fire_event_friction_pair_deleted(IVP_Friction_Core_Pair*)
000fbfd0 t IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision*)
000fcb74 t IVP_Environment::remove_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000fc154 t IVP_Environment::remove_listener_constraint_global(IVP_Listener_Constraint*)
000fb8ca t IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object*)
000fd7f4 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000fdfea t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000fe786 t IVP_Environment::~IVP_Environment()
000fed42 t IVP_Environment::~IVP_Environment()
0013923e t IVP_Inline_Math::save_acosf(float)
00138b52 t IVP_Inline_Math::approx5_cos(float)
00138b22 t IVP_Inline_Math::approx5_sin(float)
001352f8 t IVP_Inline_Math::isqrt_float(float)
00134e9e t IVP_Inline_Math::isqrt_double(float)
00138af2 t IVP_Inline_Math::fast_approx_asin(float)
00138b82 t IVP_Inline_Math::upper_limit_asin(float)
00138c1e t IVP_Inline_Math::invert_2x2_matrix(float, float, float, float, float*, float*, float*, float*)
00138be2 t IVP_Inline_Math::fast_anywhere_asin(float)
00139275 t IVP_Inline_Math::cosd(float)
001392bb t IVP_Inline_Math::sind(float)
0013921b t IVP_Inline_Math::acosd(float)
001391f8 t IVP_Inline_Math::asind(float)
001391d5 t IVP_Inline_Math::atand(float)
0013822d t IVP_Inline_Math::fabsd(float)
00139350 t IVP_Inline_Math::sqrtd(float)
00139188 t IVP_Inline_Math::atan2d(float, float)
00139298 t IVP_Inline_Math::ivp_cosf(float)
001391b2 t IVP_Inline_Math::ivp_expf(float)
001392de t IVP_Inline_Math::ivp_sinf(float)
00138bb2 t IVP_Inline_Math::fast_asin(float)
00138ae0 t IVP_Inline_Math::int_div_2(int)
00139310 t IVP_Inline_Math::ivp_sqrtf(float)
00119d10 t IVP_Real_Object::reset_time(IVP_Time)
0011bc9a t IVP_Real_Object::set_pinned(IVP_BOOL)
0011a024 t IVP_Real_Object::change_mass(float)
001188fe t IVP_Real_Object::insert_anchor(IVP_Anchor*)
0011892c t IVP_Real_Object::remove_anchor(IVP_Anchor*)
0011c392 t IVP_Real_Object::set_is_debris(IVP_BOOL)
0011c338 t IVP_Real_Object::get_ov_element()
00118952 t IVP_Real_Object::delete_silently()
00127a82 t IVP_Real_Object::get_cache_object()
0011c2f8 t IVP_Real_Object::get_first_anchor()
0011c31e t IVP_Real_Object::get_hull_manager()
001191ce t IVP_Real_Object::init_object_core(IVP_Environment*, IVP_Template_Real_Object const*)
0011bfc8 t IVP_Real_Object::set_extra_radius(float)
00118e8a t IVP_Real_Object::do_radar_checking(IVP_Radar*)
00118e1e t IVP_Real_Object::convert_to_phantom(IVP_Template_Phantom const*)
0011ad56 t IVP_Real_Object::disable_simulation()
0011c386 t IVP_Real_Object::get_movement_state()
001190da t IVP_Real_Object::recalc_core_radius()
0011c346 t IVP_Real_Object::set_movement_state(IVP_Movement_Type)
00119df6 t IVP_Real_Object::add_listener_object(IVP_Listener_Object*)
0011a332 t IVP_Real_Object::async_push_object_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
001197b0 t IVP_Real_Object::calc_m_core_f_object(IVP_U_Matrix*)
00118c56 t IVP_Real_Object::ensure_in_simulation()
0011b17a t IVP_Real_Object::change_unmovable_flag(IVP_BOOL)
00119bb0 t IVP_Real_Object::get_all_near_mindists()
00119ab2 t IVP_Real_Object::unlink_contact_points(IVP_BOOL)
00119e5e t IVP_Real_Object::add_listener_collision(IVP_Listener_Collision*)
0011c3be t IVP_Real_Object::get_controller_phantom()
00119dc2 t IVP_Real_Object::remove_listener_object(IVP_Listener_Object*)
0011aed6 t IVP_Real_Object::disable_simulation_list(IVP_Environment*, IVP_Real_Object**, int)
0011c306 t IVP_Real_Object::get_first_exact_synapse()
00119e92 t IVP_Real_Object::set_new_m_object_f_core(IVP_U_Matrix const*)
0011bdd8 t IVP_Real_Object::set_new_surface_manager(IVP_SurfaceManager*)
0011a0c8 t IVP_Real_Object::ensure_in_simulation_now()
00127a2c t IVP_Real_Object::get_cache_object_no_lock()
00119b72 t IVP_Real_Object::recheck_collision_filter()
00119ffa t IVP_Real_Object::recompile_values_changed()
0011a2b0 t IVP_Real_Object::async_add_speed_object_ws(IVP_U_Float_Point const*)
0011b40c t IVP_Real_Object::clear_internal_references()
0011a63e t IVP_Real_Object::delete_and_check_vicinity()
00119e2a t IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision*)
001188e0 t IVP_Real_Object::change_fast_piling_allowed(IVP_BOOL)
0011bbf2 t IVP_Real_Object::enable_collision_detection(IVP_BOOL)
0011a054 t IVP_Real_Object::force_grow_friction_system()
0011c312 t IVP_Real_Object::get_first_friction_synapse()
00119fd0 t IVP_Real_Object::recompile_material_changed()
00118ca0 t IVP_Real_Object::set_new_quat_object_f_core(IVP_U_Quat const*, IVP_U_Point const*)
00118cf8 t IVP_Real_Object::beam_object_to_new_position(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
00119cce t IVP_Real_Object::revive_object_for_simulation()
0011a22e t IVP_Real_Object::async_add_rot_speed_object_cs(IVP_U_Float_Point const*)
0011c3ae t IVP_Real_Object::is_collision_detection_enabled()
0011a5a8 t IVP_Real_Object::revive_nearest_objects_grow_fs()
00119c16 t IVP_Real_Object::recalc_exact_mindists_of_object()
00119a46 t IVP_Real_Object::unlink_contact_points_for_object(IVP_Real_Object*)
00119c5e t IVP_Real_Object::recalc_invalid_mindists_of_object()
00118b12 t IVP_Real_Object::get_collision_check_reference_count()
00119d3e t IVP_Real_Object::update_exact_mindist_events_of_object()
0011a712 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0011a940 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0011b4c6 t IVP_Real_Object::~IVP_Real_Object()
0011b992 t IVP_Real_Object::~IVP_Real_Object()
0011b72e t IVP_Real_Object::~IVP_Real_Object()
000c1a00 t IVP_Tetra_Point::p()
000c1cf0 t IVP_Tetra_Point::init(IVP_Tetra_Intrude*)
000c19a0 t IVP_Tetra_Point::print(char const*)
000361d0 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
000361d0 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
0013dafc t IVP_VHash_Store::change_elem(void*, void*)
0013e248 t IVP_VHash_Store::remove_elem(void*)
0013d828 t IVP_VHash_Store::remove_elem(void*, unsigned int)
0013d7f2 t IVP_VHash_Store::untouch_all()
0013dbe4 t IVP_VHash_Store::touch_element(void*, unsigned int)
0013d98e t IVP_VHash_Store::check()
0013dc88 t IVP_VHash_Store::print()
0013e430 t IVP_VHash_Store::rehash(int)
0013ed2a t IVP_VHash_Store::add_elem(void*, void*)
0013ec3a t IVP_VHash_Store::add_elem(void*, void*, int)
0013d994 t IVP_VHash_Store::find_elem(void*)
0013da80 t IVP_VHash_Store::find_elem(void*, unsigned int)
0013ddaa t IVP_VHash_Store::IVP_VHash_Store(int)
0013d7ce t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0013ddf4 t IVP_VHash_Store::IVP_VHash_Store(int)
0013d7aa t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0013df1a t IVP_VHash_Store::~IVP_VHash_Store()
0013df52 t IVP_VHash_Store::~IVP_VHash_Store()
00057e30 t vehicleparams_t::GetBaseMap()
001e08a0 d vehicleparams_t::m_DataMap
00043ac0 t CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
00040ae0 t CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00040500 t CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00040570 t CCollisionSolver::max_collision_checks_exceeded(int)
00043800 t CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00040410 t CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
00040520 t CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
000413e0 t CCollisionSolver::~CCollisionSolver()
00041310 t CCollisionSolver::~CCollisionSolver()
00041310 t CCollisionSolver::~CCollisionSolver()
0006ef40 t CDataManagerBase::TargetSize()
0006f890 t CDataManagerBase::MarkAsStale(memhandle_t__*)
0006fcf0 t CDataManagerBase::CreateHandle(bool)
0006f7b0 t CDataManagerBase::LockResource(memhandle_t__*)
0006f330 t CDataManagerBase::TouchByIndex(unsigned short)
0006ef50 t CDataManagerBase::AvailableSize()
0006f0a0 t CDataManagerBase::BreakAllLocks()
0006ee20 t CDataManagerBase::SetTargetSize(unsigned int)
0006f3b0 t CDataManagerBase::TouchResource(memhandle_t__*)
0006f210 t CDataManagerBase::EnsureCapacity(unsigned int)
0006efb0 t CDataManagerBase::UnlockResource(memhandle_t__*)
0006f5a0 t CDataManagerBase::DestroyResource(memhandle_t__*)
0006fb70 t CDataManagerBase::FlushAllUnlocked()
0006fea0 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006f310 t CDataManagerBase::FlushToTargetSize()
0006f150 t CDataManagerBase::GetForFreeByIndex(unsigned short)
0006fe20 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006ede0 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
0006f420 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
0006eeb0 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
0006f6c0 t CDataManagerBase::LockResourceReturnCount(int*, memhandle_t__*)
0006ee30 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
0006ffb0 t CDataManagerBase::Lock()
0006f2d0 t CDataManagerBase::Purge(unsigned int)
0006ffd0 t CDataManagerBase::Unlock()
0006ffc0 t CDataManagerBase::TryLock()
0006f950 t CDataManagerBase::FlushAll()
0006ef10 t CDataManagerBase::ToHandle(unsigned short)
0006ef60 t CDataManagerBase::UsedSize()
0006f4c0 t CDataManagerBase::BreakLock(memhandle_t__*)
0006ff20 t CDataManagerBase::CDataManagerBase(unsigned int)
0006ff20 t CDataManagerBase::CDataManagerBase(unsigned int)
0006ef90 t CDataManagerBase::~CDataManagerBase()
0006ef70 t CDataManagerBase::~CDataManagerBase()
0006ef70 t CDataManagerBase::~CDataManagerBase()
0006e960 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
000714a0 t CDllDemandLoader::GetFactory()
000714f0 t CDllDemandLoader::Unload()
00071480 t CDllDemandLoader::CDllDemandLoader(char const*)
00071480 t CDllDemandLoader::CDllDemandLoader(char const*)
00070e50 t CDllDemandLoader::~CDllDemandLoader()
00070e30 t CDllDemandLoader::~CDllDemandLoader()
00070e30 t CDllDemandLoader::~CDllDemandLoader()
00031be0 t CPhysics_Airboat::IsBoosting()
0002ef90 t CPhysics_Airboat::do_steering(float, bool)
0002f110 t CPhysics_Airboat::InitAirboat(IVP_Template_Car_System const*)
0002fd50 t CPhysics_Airboat::PreRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
0002fec0 t CPhysics_Airboat::PostRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
0002ece0 t CPhysics_Airboat::get_skid_info(IVP_Wheel_Skid_Info*)
0002f930 t CPhysics_Airboat::GetWaterDepth(Ray_t*, IPhysicsObject*)
0002ec00 t CPhysics_Airboat::get_body_speed(IVP_COORDINATE_INDEX)
00031bd0 t CPhysics_Airboat::set_powerslide(float, float)
00031c10 t CPhysics_Airboat::update_booster(float)
0002ef20 t CPhysics_Airboat::update_throttle(float)
00031c00 t CPhysics_Airboat::activate_booster(float, float, float)
000304f0 t CPhysics_Airboat::DoSimulationDrag(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
0002eb30 t CPhysics_Airboat::get_wheel_torque(IVP_POS_WHEEL)
0002f1a0 t CPhysics_Airboat::SetWheelFriction(int, float)
0002eed0 t CPhysics_Airboat::do_steering_wheel(IVP_POS_WHEEL, float)
00031c20 t CPhysics_Airboat::get_booster_delay()
00031a50 t CPhysics_Airboat::InitRaycastCarAxes(IVP_Template_Car_System const*)
00031640 t CPhysics_Airboat::InitRaycastCarBody(IVP_Template_Car_System const*)
0002ee90 t CPhysics_Airboat::change_wheel_torque(IVP_POS_WHEEL, float)
00030f50 t CPhysics_Airboat::DoSimulationGravity(IVP_Event_Sim*)
00030b10 t CPhysics_Airboat::DoSimulationTurbine(IVP_Event_Sim*)
00031ba0 t CPhysics_Airboat::get_controller_name()
0002fe00 t CPhysics_Airboat::UpdateAirborneState(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
0002eb10 t CPhysics_Airboat::change_spring_length(IVP_POS_WHEEL, float)
0002f9f0 t CPhysics_Airboat::do_raycasts_gameside(int, IVP_Ray_Solver_Template*, IVP_Raycast_Airboat_Impact*)
000303b0 t CPhysics_Airboat::DoSimulationPontoons(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030c20 t CPhysics_Airboat::DoSimulationSteering(IVP_Event_Sim*)
00031710 t CPhysics_Airboat::InitRaycastCarWheels(IVP_Template_Car_System const*)
0002eba0 t CPhysics_Airboat::change_body_downforce(float)
00031bb0 t CPhysics_Airboat::change_max_body_force(IVP_POS_WHEEL, float)
0002edc0 t CPhysics_Airboat::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
0002f290 t CPhysics_Airboat::pre_raycasts_gameside(int, IVP_Ray_Solver_Template*, Ray_t*, IVP_Raycast_Airboat_Impact*)
0002ed40 t CPhysics_Airboat::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
0002ea80 t CPhysics_Airboat::change_spring_constant(IVP_POS_WHEEL, float)
00031c30 t CPhysics_Airboat::get_booster_time_to_go()
00031b80 t CPhysics_Airboat::update_wheel_positions()
0002eb90 t CPhysics_Airboat::change_fast_turn_factor(float)
0002eaa0 t CPhysics_Airboat::change_spring_dampening(IVP_POS_WHEEL, float)
0002ebd0 t CPhysics_Airboat::get_controller_priority()
0002eca0 t CPhysics_Airboat::get_orig_axles_distance()
00031510 t CPhysics_Airboat::change_friction_of_wheel(IVP_POS_WHEEL, float)
000313d0 t CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00031bf0 t CPhysics_Airboat::set_booster_acceleration(float)
0002eae0 t CPhysics_Airboat::change_spring_pre_tension(IVP_POS_WHEEL, float)
00030f60 t CPhysics_Airboat::CountSurfaceContactPoints(IVP_Raycast_Airboat_Impact*)
00030310 t CPhysics_Airboat::DoSimulationPontoonsWater(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00031530 t CPhysics_Airboat::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
00031bc0 t CPhysics_Airboat::update_body_countertorque()
0002eb70 t CPhysics_Airboat::change_stabilizer_constant(IVP_POS_AXIS, float)
00030200 t CPhysics_Airboat::DoSimulationPontoonsGround(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
0002ebe0 t CPhysics_Airboat::get_wheel_angular_velocity(IVP_POS_WHEEL)
000311b0 t CPhysics_Airboat::DoSimulationKeepUprightRoll(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030450 t CPhysics_Airboat::PerformFrictionNotification(float, float, int, IPhysicsCollisionData*)
0002f1c0 t CPhysics_Airboat::ComputeFrontPontoonWaveNoise(int, float)
00030fa0 t CPhysics_Airboat::DoSimulationKeepUprightPitch(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
0002ec60 t CPhysics_Airboat::get_orig_front_wheel_distance()
0002ee50 t CPhysics_Airboat::get_associated_controlled_cores()
0002ee70 t CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
0002eac0 t CPhysics_Airboat::change_spring_dampening_compression(IVP_POS_WHEEL, float)
00031ab0 t CPhysics_Airboat::get_axle(IVP_POS_AXIS)
0002f180 t CPhysics_Airboat::GetWheel(int)
0002eb50 t CPhysics_Airboat::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
00031ad0 t CPhysics_Airboat::get_wheel(IVP_POS_WHEEL)
00031910 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
00031910 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
0002f0f0 t CPhysics_Airboat::~CPhysics_Airboat()
0002f030 t CPhysics_Airboat::~CPhysics_Airboat()
0002f030 t CPhysics_Airboat::~CPhysics_Airboat()
001279c4 t IVP_Cache_Object::get_core_pos()
001279b8 t IVP_Cache_Object::remove_reference()
00127438 t IVP_Cache_Object::update_cache_object()
001e2bd8 d IVP_Compact_Edge::next_table
001e2be8 d IVP_Compact_Edge::prev_table
000dba6e t IVP_Compact_Edge::get_opposite()
000db6ea t IVP_Compact_Edge::set_is_virtual(unsigned int)
000db6cc t IVP_Compact_Edge::set_opposite_index(int)
000db6be t IVP_Compact_Edge::set_start_point_index(int)
000db9f8 t IVP_Compact_Edge::get_next()
000dba38 t IVP_Compact_Edge::get_prev()
000db03e t IVP_Compact_Edge::byte_swap()
000daf84 t IVP_Compact_Edge::IVP_Compact_Edge()
000daf70 t IVP_Compact_Edge::IVP_Compact_Edge()
0010fdb8 t IVP_Hull_Manager::reset_time(IVP_Time)
0010fd2a t IVP_Hull_Manager::reset_times()
0010fcec t IVP_Hull_Manager::delete_hull_manager()
0010fde6 t IVP_Hull_Manager::get_synapse_check_count(IVP_Environment*)
0010fdc8 t IVP_Hull_Manager::too_many_synapses_checked_error_get_additional(IVP_Environment*, int)
001417b0 t IVP_Mindist_Base::get_ledges(IVP_Compact_Ledge const**)
00141790 t IVP_Mindist_Base::get_objects(IVP_Real_Object**)
00144ee0 t IVP_Mindist_Base::get_mindist_synapse(int)
001419c0 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
001419c0 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
00144df0 t IVP_Mindist_Base::~IVP_Mindist_Base()
00144d00 t IVP_Mindist_Base::~IVP_Mindist_Base()
00144d00 t IVP_Mindist_Base::~IVP_Mindist_Base()
00141380 t IVP_ov_tree_hash::node_to_index(IVP_OV_Node*)
00141310 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001412f0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001412f0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
000be500 t IVP_Poly_Surface::get_surface_index()
000be4f0 t IVP_Poly_Surface::set(IVP_Template_Surface*, IVP_Object_Polygon_Tetra*)
00144ff0 t IVP_Synapse_Real::get_mindist()
00144f70 t IVP_Synapse_Real::init_synapse(IVP_Mindist*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
00144f40 t IVP_Synapse_Real::update_synapse(IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
00144fc0 t IVP_Synapse_Real::get_hull_manager()
00141840 t IVP_Synapse_Real::print()
00144fd0 t IVP_Synapse_Real::get_next()
00144fe0 t IVP_Synapse_Real::get_prev()
00144f60 t IVP_Synapse_Real::IVP_Synapse_Real()
00144f60 t IVP_Synapse_Real::IVP_Synapse_Real()
00144db0 t IVP_Synapse_Real::~IVP_Synapse_Real()
00144d80 t IVP_Synapse_Real::~IVP_Synapse_Real()
00144d80 t IVP_Synapse_Real::~IVP_Synapse_Real()
000fc5f2 t IVP_Time_Event_D::simulate_time_event(IVP_Environment*)
000fc234 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000fc216 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000fc470 t IVP_Time_Event_N::simulate_time_event(IVP_Environment*)
000fc270 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
000fc252 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
0012535c t IVP_Time_Manager::event_loop(IVP_Environment*, IVP_Time)
0012541e t IVP_Time_Manager::reset_time(IVP_Time)
0012561c t IVP_Time_Manager::insert_event(IVP_Time_Event*, IVP_Time)
00125590 t IVP_Time_Manager::remove_event(IVP_Time_Event*)
001255c0 t IVP_Time_Manager::update_event(IVP_Time_Event*, IVP_Time)
001254ec t IVP_Time_Manager::get_next_event(IVP_Time)
00125546 t IVP_Time_Manager::get_next_event()
00125348 t IVP_Time_Manager::get_event_count()
001254c2 t IVP_Time_Manager::env_set_current_time(IVP_Environment*, IVP_Time)
001253a2 t IVP_Time_Manager::simulate_variable_time_step(IVP_Environment*, float)
001257be t IVP_Time_Manager::IVP_Time_Manager()
00125874 t IVP_Time_Manager::IVP_Time_Manager()
00125a7a t IVP_Time_Manager::~IVP_Time_Manager()
00125b02 t IVP_Time_Manager::~IVP_Time_Manager()
0012ab08 t IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
00129244 t IVP_U_Active_Add::print()
0012bd62 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012bee6 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00131240 t IVP_U_Active_Add::~IVP_U_Active_Add()
001314c0 t IVP_U_Active_Add::~IVP_U_Active_Add()
00131728 t IVP_U_Active_Add::~IVP_U_Active_Add()
0012961a t IVP_U_Active_Int::add_dependency(IVP_U_Active_Int_Listener*)
00131e10 t IVP_U_Active_Int::give_int_value()
0012909c t IVP_U_Active_Int::update_derived()
0012a378 t IVP_U_Active_Int::remove_dependency(IVP_U_Active_Int_Listener*)
00129a84 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
00129aee t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
00129f9a t IVP_U_Active_Int::~IVP_U_Active_Int()
0012a024 t IVP_U_Active_Int::~IVP_U_Active_Int()
0012a0a6 t IVP_U_Active_Int::~IVP_U_Active_Int()
0012aa70 t IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
00129200 t IVP_U_Active_Sub::print()
0012ba5a t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012bbde t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
00130ae8 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00130d68 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00130fd0 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
001389c8 t IVP_U_Float_Quat::set(IVP_U_Quat const*)
00138f7c t IVP_U_Float_Quat::byte_swap()
000f7746 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000f7660 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000f74c8 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000f7598 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000f7834 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000f73e2 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
0003be60 t CAlignedNewDelete<16, aligned_tmp_t>::operator delete(void*)
000758e0 t CBoyerMooreSearch::Search(unsigned char const*, int)
00075880 t CBoyerMooreSearch::CBoyerMooreSearch(unsigned char const*, int)
00075880 t CBoyerMooreSearch::CBoyerMooreSearch(unsigned char const*, int)
00045380 t CBuoyancyAttacher::get_parameters_per_core(IVP_Core*)
000454c0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000454c0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
00045cd0 t CBuoyancyAttacher::~CBuoyancyAttacher()
00045c20 t CBuoyancyAttacher::~CBuoyancyAttacher()
00045c20 t CBuoyancyAttacher::~CBuoyancyAttacher()
00046090 t CFrictionSnapshot::GetMaterial(int)
00045fd0 t CFrictionSnapshot::GetNormalForce()
00045dd0 t CFrictionSnapshot::GetContactPoint(Vector&)
00046000 t CFrictionSnapshot::GetSurfaceNormal(Vector&)
00045e30 t CFrictionSnapshot::NextFrictionData()
00045fa0 t CFrictionSnapshot::GetEnergyAbsorbed()
00045f80 t CFrictionSnapshot::RecomputeFriction()
00045f60 t CFrictionSnapshot::ClearFrictionForce()
000461b0 t CFrictionSnapshot::SetFrictionSynapse(IVP_Synapse_Friction*)
000462a0 t CFrictionSnapshot::MarkContactForDelete()
00045e20 t CFrictionSnapshot::GetFrictionCoefficient()
000460d0 t CFrictionSnapshot::DeleteAllMarkedContacts(bool)
00045d80 t CFrictionSnapshot::IsValid()
00045d90 t CFrictionSnapshot::GetObject(int)
00046150 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
00046150 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
00045f40 t CFrictionSnapshot::~CFrictionSnapshot()
00045e80 t CFrictionSnapshot::~CFrictionSnapshot()
00045e80 t CFrictionSnapshot::~CFrictionSnapshot()
00050b80 t CMaterialIndexOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00050a70 t CMaterialIndexOps::IsEmpty(SaveRestoreFieldInfo_t const&)
00050a10 t CMaterialIndexOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00050a90 t CMaterialIndexOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
0006a890 t collision_rules_t::SetDefaults(void*)
0006a870 t collision_rules_t::ParseKeyValue(void*, char const*, char const*)
000327a0 t CPhysicsCollision::ConvexFree(CPhysConvex*)
000341c0 t CPhysicsCollision::TraceBoxAA(Ray_t const&, CPhysCollide const*, CGameTrace*)
00031f20 t CPhysicsCollision::CollideSize(CPhysCollide*)
00034860 t CPhysicsCollision::IsBBoxCache(CPhysCollide*)
000359d0 t CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface*, Vector const&, Vector const&)
00035900 t CPhysicsCollision::BBoxToConvex(Vector const&, Vector const&)
00032110 t CPhysicsCollision::CollideIndex(CPhysCollide const*)
00031f40 t CPhysicsCollision::CollideWrite(char*, CPhysCollide*, bool)
000328c0 t CPhysicsCollision::ConvexVolume(CPhysConvex*)
000348d0 t CPhysicsCollision::GetBBoxCache(Vector const&, Vector const&)
00032570 t CPhysicsCollision::TraceCollide(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000353d0 t CPhysicsCollision::VCollideLoad(vcollide_t*, int, char const*, int, bool)
00035c10 t CPhysicsCollision::BBoxToCollide(Vector const&, Vector const&)
00034b10 t CPhysicsCollision::CollideVolume(CPhysCollide*)
00035ab0 t CPhysicsCollision::InitBBoxCache()
000323f0 t CPhysicsCollision::VCollideCheck(vcollide_t*, char const*)
00032550 t CPhysicsCollision::CollideGetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
00034260 t CPhysicsCollision::DestroyCollide(CPhysCollide*)
00035790 t CPhysicsCollision::PolysoupCreate()
000324a0 t CPhysicsCollision::VCollideUnload(vcollide_t*)
00035950 t CPhysicsCollision::ConvexFromVerts(Vector**, int)
00034bd0 t CPhysicsCollision::CreateDebugMesh(CPhysCollide const*, Vector**)
00034760 t CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*, Vector const&, Vector const&)
00032160 t CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
000342c0 t CPhysicsCollision::PolysoupDestroy(CPhysPolysoup*)
00034150 t CPhysicsCollision::CollideGetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00031fd0 t CPhysicsCollision::CollideGetRadius(CPhysCollide const*)
00033b10 t CPhysicsCollision::ConvexFromPlanes(float*, int, float)
00034a00 t CPhysicsCollision::CreateQueryModel(CPhysCollide*)
00032480 t CPhysicsCollision::DestroyDebugMesh(int, Vector*)
00032180 t CPhysicsCollision::GetBBoxCacheSize(int*, int*)
000327c0 t CPhysicsCollision::ConvexSurfaceArea(CPhysConvex*)
00036030 t CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
000321f0 t CPhysicsCollision::DestroyQueryModel(ICollisionQuery*)
00031f60 t CPhysicsCollision::SetConvexGameData(CPhysConvex*, unsigned int)
00034a50 t CPhysicsCollision::CollideSurfaceArea(CPhysCollide*)
000354c0 t CPhysicsCollision::UnserializeCollide(char*, int, int)
000357d0 t CPhysicsCollision::ConvexFromVertsFast(Vector**, int)
000325d0 t CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup*, Vector const&, Vector const&, Vector const&, int)
00035da0 t CPhysicsCollision::SupportsVirtualMesh()
00032090 t CPhysicsCollision::ThreadContextCreate()
000320b0 t CPhysicsCollision::CollideGetMassCenter(CPhysCollide*, Vector*)
000320f0 t CPhysicsCollision::CollideSetMassCenter(CPhysCollide*, Vector const&)
00032b50 t CPhysicsCollision::PolyhedronFromConvex(CPhysConvex*, bool)
000320a0 t CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision*)
00032060 t CPhysicsCollision::VCollideFreeUserData(vcollide_t*)
00032530 t CPhysicsCollision::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00031ff0 t CPhysicsCollision::VCollideAllocUserData(vcollide_t*, unsigned int)
00031e60 t CPhysicsCollision::ConvertConvexToCollide(CPhysConvex**, int)
00034640 t CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex*, float)
000323b0 t CPhysicsCollision::VPhysicsKeyParserCreate(vcollide_t*)
000323d0 t CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
000354f0 t CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup*, bool)
000323a0 t CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser*)
00032a10 t CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&, Vector const*, int, CPhysConvex**)
000331c0 t CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
00034100 t CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
00032130 t CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide*, Vector const&)
00034f60 t CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex**, int, convertconvexparams_t const&)
00034d70 t CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*, CPhysConvex**, int)
00035d90 t CPhysicsCollision::ReadStat(int)
00032590 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00031f80 t CPhysicsCollision::TraceBox(Ray_t const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000325b0 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00036100 t CPhysicsCollision::~CPhysicsCollision()
00035f70 t CPhysicsCollision::~CPhysicsCollision()
00035f70 t CPhysicsCollision::~CPhysicsCollision()
0002e210 t CPhysicsInterface::QueryInterface(char const*)
0002e120 t CPhysicsInterface::FindCollisionSet(unsigned int)
0002e230 t CPhysicsInterface::CreateEnvironment()
0002e180 t CPhysicsInterface::DestroyEnvironment(IPhysicsEnvironment*)
0002e170 t CPhysicsInterface::CreateObjectPairHash()
0002dff0 t CPhysicsInterface::DestroyObjectPairHash(IPhysicsObjectPairHash*)
0002e080 t CPhysicsInterface::DestroyAllCollisionSets()
0002e270 t CPhysicsInterface::FindOrCreateCollisionSet(unsigned int, int)
0002dfc0 t CPhysicsInterface::GetActiveEnvironmentByIndex(int)
0002e5e0 t CPhysicsInterface::~CPhysicsInterface()
0002e5e0 t CPhysicsInterface::~CPhysicsInterface()
000512a0 t CPlayerController::IsInContact()
00051220 t CPlayerController::IsPredicted()
000523c0 t CPlayerController::AttachObject()
000524f0 t CPlayerController::DetachObject()
00051110 t CPlayerController::GetLastImpulse(Vector*)
00051780 t CPlayerController::GetContactState(unsigned short)
00051280 t CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
000511d0 t CPlayerController::GetPushMassLimit()
00051190 t CPlayerController::SetPushMassLimit(float)
000511f0 t CPlayerController::GetPushSpeedLimit()
00051ae0 t CPlayerController::GetShadowPosition(Vector*, QAngle*)
00051820 t CPlayerController::GetShadowVelocity(Vector*)
000511b0 t CPlayerController::SetPushSpeedLimit(float)
000526a0 t CPlayerController::TryTeleportObject()
000560e0 t CPlayerController::event_object_frozen(IVP_Event_Object*)
000510c0 t CPlayerController::get_controller_name()
000560a0 t CPlayerController::event_object_created(IVP_Event_Object*)
00051210 t CPlayerController::event_object_deleted(IVP_Event_Object*)
000560c0 t CPlayerController::event_object_revived(IVP_Event_Object*)
00051240 t CPlayerController::Prediction_Resimulate(float)
00051230 t CPlayerController::SetCallOrderRegistrar(CPredictableControllerSimulationOrderTracker*)
000510b0 t CPlayerController::get_controller_priority()
00054a70 t CPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00052130 t CPlayerController::ForceTeleportToCurrentPosition()
00051260 t CPlayerController::Jump()
00051b90 t CPlayerController::StepUp(float)
000521c0 t CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00051970 t CPlayerController::MaxSpeed(Vector const&)
00051170 t CPlayerController::GetObject()
00052140 t CPlayerController::SetGround(CPhysicsObject*)
00052570 t CPlayerController::SetObject(IPhysicsObject*)
000510e0 t CPlayerController::WasFrozen()
00052440 t CPlayerController::CPlayerController(CPhysicsObject*)
00052440 t CPlayerController::CPlayerController(CPhysicsObject*)
00052680 t CPlayerController::~CPlayerController()
00052600 t CPlayerController::~CPlayerController()
00052600 t CPlayerController::~CPlayerController()
00051630 t CShadowController::GetMaxSpeed(float*, float*)
00053cf0 t CShadowController::AttachObject()
00053fa0 t CShadowController::DetachObject()
000513f0 t CShadowController::AllowsRotation()
00051420 t CShadowController::GetLastImpulse(Vector*)
00054160 t CShadowController::Update_Internal(Vector const&, QAngle const&, float)
00054520 t CShadowController::WriteToTemplate(vphysics_save_cshadowcontroller_t&)
000545e0 t CShadowController::InitFromTemplate(vphysics_save_cshadowcontroller_t const&)
000513c0 t CShadowController::AllowsTranslation()
00051670 t CShadowController::GetTargetPosition(Vector*, QAngle*)
000514f0 t CShadowController::UseShadowMaterial(bool)
000513a0 t CShadowController::get_controller_name()
000515c0 t CShadowController::GetTeleportDistance()
00051590 t CShadowController::SetTeleportDistance(float)
00051560 t CShadowController::ObjectMaterialChanged(int)
000514c0 t CShadowController::IsPhysicallyControlled()
000515e0 t CShadowController::get_controller_priority()
00051480 t CShadowController::SetPhysicallyControlled(bool)
00053970 t CShadowController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000516f0 t CShadowController::StepUp(float)
00054320 t CShadowController::Update(Vector const&, QAngle const&, float)
00051600 t CShadowController::MaxSpeed(float, float)
00054110 t CShadowController::SetObject(IPhysicsObject*)
00053ec0 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00053ca0 t CShadowController::CShadowController()
00053ec0 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00053ca0 t CShadowController::CShadowController()
000540f0 t CShadowController::~CShadowController()
00054090 t CShadowController::~CShadowController()
00054090 t CShadowController::~CShadowController()
         U CThreadSpinRWLock::SpinLockForRead()
         U CThreadSpinRWLock::SpinLockForWrite()
         U CThreadSyncObject::~CThreadSyncObject()
00078ae0 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
00078b90 t CUtlInplaceBuffer::InplaceGetLinePtr()
000792c0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
000792c0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
000485c0 t CUtlSymbolTableMT::AddString(char const*)
00048610 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
00048610 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
00035e90 t IPhysicsCollision::~IPhysicsCollision()
00035ce0 t IPhysicsCollision::~IPhysicsCollision()
00035ce0 t IPhysicsCollision::~IPhysicsCollision()
000db8f0 t IVP_Compact_Ledge::is_compact()
000db11a t IVP_Compact_Ledge::c_ledge_init()
000db3e0 t IVP_Compact_Ledge::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000db852 t IVP_Compact_Ledge::set_is_compact(IVP_BOOL)
000db87a t IVP_Compact_Ledge::get_point_array()
000db90e t IVP_Compact_Ledge::set_client_data(unsigned int)
000db92e t IVP_Compact_Ledge::set_cache_handle(unsigned short)
000db890 t IVP_Compact_Ledge::get_first_triangle()
000db82a t IVP_Compact_Ledge::set_offset_ledge_points(int)
000db838 t IVP_Compact_Ledge::set_size(int)
000db09c t IVP_Compact_Ledge::byte_swap()
001171b0 t IVP_Contact_Point::reset_time(IVP_Time)
00110662 t IVP_Contact_Point::get_material_info(IVP_Material**)
001137cc t IVP_Contact_Point::calc_coll_distance()
001171c2 t IVP_Contact_Point::get_contact_normal(IVP_U_Float_Point*)
0011888c t IVP_Contact_Point::recompute_friction()
001171e4 t IVP_Contact_Point::set_contact_normal(IVP_U_Float_Point const&)
00101a34 t IVP_Contact_Point::two_values_friction(IVP_U_Float_Point*)
00117b6e t IVP_Contact_Point::p_calc_friction_s_PK(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
001178fc t IVP_Contact_Point::p_calc_friction_s_PP(IVP_U_Point const*, IVP_U_Point const*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
001179d0 t IVP_Contact_Point::p_calc_friction_qr_PF(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00117302 t IVP_Contact_Point::p_calc_friction_ss_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00117e52 t IVP_Contact_Point::recalc_friction_s_vals(IVP_Environment*)
000ffbb0 t IVP_Contact_Point::static_friction_single(IVP_Event_Sim const*, float, float)
000ffe32 t IVP_Contact_Point::ease_the_friction_force(IVP_U_Float_Point*)
0011228c t IVP_Contact_Point::get_rescue_speed_impact(IVP_Environment*)
000ffde6 t IVP_Contact_Point::set_friction_to_neutral()
001102f4 t IVP_Contact_Point::get_rot_speed_uncertainty()
00100950 t IVP_Contact_Point::calc_virtual_mass_of_mindist()
00101ec2 t IVP_Contact_Point::get_and_set_real_friction_len(IVP_U_Float_Point*)
00103b54 t IVP_Contact_Point::friction_force_local_constraint_1d(IVP_Event_Sim const*)
00102e44 t IVP_Contact_Point::friction_force_local_constraint_2d(IVP_Event_Sim const*)
00111e52 t IVP_Contact_Point::read_materials_for_contact_situation(IVP_Impact_Solver_Long_Term*)
0010121e t IVP_Contact_Point::friction_force_local_constraint_2d_wheel(IVP_Core*, IVP_Impact_Solver_Long_Term*, IVP_Event_Sim const*, float&)
00101f58 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
00102188 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
00100d0e t IVP_Contact_Point::~IVP_Contact_Point()
00100eaa t IVP_Contact_Point::~IVP_Contact_Point()
000fb792 t IVP_Core_Fast_PSI::~IVP_Core_Fast_PSI()
000fcc44 t IVP_Debug_Manager::init_debug_manager()
000fcc86 t IVP_Debug_Manager::clear_debug_manager()
000fd46e t IVP_Debug_Manager::IVP_Debug_Manager()
000fd484 t IVP_Debug_Manager::IVP_Debug_Manager()
000fd49a t IVP_Debug_Manager::~IVP_Debug_Manager()
000fd4ce t IVP_Debug_Manager::~IVP_Debug_Manager()
00125356 t IVP_Event_Manager::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
00125658 t IVP_Event_Manager::simulate_variable_time_step(IVP_Time_Manager*, IVP_Environment*, IVP_Time_Event_PSI*, float)
00115e64 t IVP_Friction_Hash::~IVP_Friction_Hash()
00115e88 t IVP_Friction_Hash::~IVP_Friction_Hash()
00094fc4 t IVP_Halfspacesoup::add_halfspace(IVP_U_Hesse const*)
00095232 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00094e3a t IVP_Halfspacesoup::IVP_Halfspacesoup()
00095334 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00094e20 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00094e54 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00094f0c t IVP_Halfspacesoup::~IVP_Halfspacesoup()
0010ff70 t IVP_Impact_Solver::confirm_impact(int)
001119e2 t IVP_Impact_Solver::delay_decision(IVP_Core**)
00110916 t IVP_Impact_Solver::do_rescue_push(IVP_U_Float_Point*, IVP_BOOL)
001100c0 t IVP_Impact_Solver::delay_of_impact(int)
0011083a t IVP_Impact_Solver::do_push_on_core(IVP_U_Float_Point*, int)
00111352 t IVP_Impact_Solver::get_total_energy()
00111f78 t IVP_Impact_Solver::estimate_push_impulse()
001105ea t IVP_Impact_Solver::get_cos_sin_for_impact(float, float, float*, float*)
001111b0 t IVP_Impact_Solver::get_world_push_direction()
00110148 t IVP_Impact_Solver::clear_change_values_cores()
00110f86 t IVP_Impact_Solver::get_relative_speed_vector()
00110726 t IVP_Impact_Solver::calc_virt_masses_impact_solver(IVP_U_Float_Point const*)
001127a6 t IVP_Impact_Solver::get_world_direction_second_friction(IVP_Contact_Point*)
00111024 t IVP_Impact_Solver::get_world_push_direction_two_friction(float)
0011166c t IVP_Impact_Solver::do_push(float)
0011472c t IVP_Impact_Solver::do_impact(IVP_Core**, IVP_BOOL, int, float)
00110012 t IVP_Impact_Solver::undo_push()
00113a7a t IVP_Impact_System::test_loop_all_pairs()
001104a4 t IVP_Impact_System::add_pair_to_impact_system(IVP_Friction_Core_Pair*)
0011023e t IVP_Impact_System::pair_is_already_in_system(IVP_Friction_Core_Pair*)
001113ae t IVP_Impact_System::recalc_all_affected_cores()
0011044a t IVP_Impact_System::invalidate_impact_mindists(IVP_Core*)
0011242c t IVP_Impact_System::debug_check_all_dists_at_end()
0011526c t IVP_Impact_System::init_and_solve_impact_system(IVP_Mindist*, IVP_Friction_System*, IVP_Friction_Core_Pair*, IVP_Contact_Point*)
001120de t IVP_Impact_System::impact_system_check_start_pair(IVP_Friction_Core_Pair*, IVP_Contact_Point*)
0011187c t IVP_Impact_System::add_pushed_core_with_pairs_except(IVP_Core*, IVP_Friction_Core_Pair*)
001104ec t IVP_Impact_System::synchronize_core_for_impact_system(IVP_Core*)
000bca70 t IVP_I_Point_VHash::find_point(IVP_U_Point*)
000bca10 t IVP_I_Point_VHash::remove_point(IVP_U_Point*)
000bc7e0 t IVP_I_Point_VHash::point_to_index(IVP_U_Point*)
000bc9b0 t IVP_I_Point_VHash::add_point(IVP_U_Point*)
000bcb00 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000bcb00 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000bc720 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000bc700 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000bc700 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
0010fd24 t IVP_Listener_Hull::hull_manager_is_reset(float, float)
0014b520 t IVP_Range_Manager::get_coll_range_in_world(IVP_Real_Object const*)
0014b5a0 t IVP_Range_Manager::environment_will_be_deleted(IVP_Environment*)
0014b430 t IVP_Range_Manager::get_coll_range_intra_objects(IVP_Real_Object const*, IVP_Real_Object const*, float*, float*)
0014b5c0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
0014b5c0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
000e12aa t IVP_Ray_Solver_Os::check_ray_against_compact_ledge_os(IVP_Compact_Ledge const*)
000e29ae t IVP_Ray_Solver_Os::check_ray_against_compact_surface_os(IVP_Compact_Surface const*)
000e219e t IVP_Ray_Solver_Os::check_ray_against_ledge_tree_node_os(IVP_Compact_Ledgetree_Node const*)
000e1d66 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000e1182 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000c2110 t IVP_Tetra_Intrude::checkin_edge(IVP_Tri_Edge*)
000c1f40 t IVP_Tetra_Intrude::point_2_bits(IVP_U_Point*, IVP_U_Point*, int*)
000c2240 t IVP_Tetra_Intrude::checkout_edge(IVP_Tri_Edge*)
000c2a20 t IVP_Tetra_Intrude::check_intrusion(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int, IVP_Intrusion_Status*)
000c1fd0 t IVP_Tetra_Intrude::init_tetra_edge(IVP_Tetra_Edge*, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge*)
000c34c0 t IVP_Tetra_Intrude::calc_intrusion_status(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int)
000c1ea0 t IVP_Tetra_Intrude::pe(int)
000c1d00 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000c1d00 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000c1e50 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
000c1e50 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
0012ada8 t IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
00129416 t IVP_U_Active_Mult::print()
0012d1e0 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012d364 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012f5ea t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0012feb6 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
00130120 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0012a92e t IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
001295ba t IVP_U_Active_Sine::print()
0012c50a t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, float, float, float, float)
0012c66e t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, float, float, float, float)
0012f9f4 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0012fb94 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0012fd22 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
00133de6 t IVP_U_Float_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00133d56 t IVP_U_Float_Hesse::mult_hesse(float)
00133e70 t IVP_U_Float_Hesse::calc_hesse_val(IVP_U_Float_Point const*)
00138238 t IVP_U_Float_Hesse::set4(IVP_U_Float_Hesse const*)
001350fa t IVP_U_Float_Hesse::normize()
001398d4 t IVP_U_Float_Hesse::byte_swap()
0013828a t IVP_U_Float_Hesse::IVP_U_Float_Hesse(float, float, float, float)
00138264 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
0013826a t IVP_U_Float_Hesse::IVP_U_Float_Hesse(float, float, float, float)
0013825e t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
00138314 t IVP_U_Float_Point::set_to_zero()
00138a88 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, float)
001383ce t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
00134d76 t IVP_U_Float_Point::fast_normize()
00138abc t IVP_U_Float_Point::set_multiple(IVP_U_Quat const*, float)
00138344 t IVP_U_Float_Point::set_multiple(IVP_U_Float_Point const*, float)
00138368 t IVP_U_Float_Point::set_negative(IVP_U_Float_Point const*)
00133570 t IVP_U_Float_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
00138406 t IVP_U_Float_Point::set_pairwise_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00133690 t IVP_U_Float_Point::calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00133648 t IVP_U_Float_Point::set_orthogonal_part(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0013847e t IVP_U_Float_Point::inline_subtract_and_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
00134e0a t IVP_U_Float_Point::real_length_plus_normize()
001386e0 t IVP_U_Float_Point::inline_calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00139ae0 t IVP_U_Float_Point::inline_calc_cross_product_and_normize(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00138a62 t IVP_U_Float_Point::add(IVP_U_Float_Point const*)
0013842e t IVP_U_Float_Point::add(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001389ea t IVP_U_Float_Point::set(float, float, float)
00138a20 t IVP_U_Float_Point::set(float const*)
00138326 t IVP_U_Float_Point::set(IVP_U_Float_Point const*)
00138730 t IVP_U_Float_Point::inline_set_vert_to_area_defined_by_three_points(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0013838c t IVP_U_Float_Point::mult(float)
00134b62 t IVP_U_Float_Point::rotate(IVP_COORDINATE_INDEX, float)
00135aa4 t IVP_U_Float_Point::normize()
00138a3c t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*)
00138456 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0013904e t IVP_U_Float_Point::byte_swap()
00134cee t IVP_U_Float_Point::line_sqrt()
001381d4 t IVP_U_Float_Point::IVP_U_Float_Point(float, float, float)
00138e1e t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
001381b4 t IVP_U_Float_Point::IVP_U_Float_Point()
001381ba t IVP_U_Float_Point::IVP_U_Float_Point(float, float, float)
00138e00 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
001381ae t IVP_U_Float_Point::IVP_U_Float_Point()
001333fe t IVP_U_String_Hash::add(char const*, void*)
001334ae t IVP_U_String_Hash::remove(char const*)
001331a4 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
001331e0 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
00132eb8 t IVP_U_String_Hash::~IVP_U_String_Hash()
00132f24 t IVP_U_String_Hash::~IVP_U_String_Hash()
0013d568 t IVP_U_Vector_Base::increment_mem()
000bd0d0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000bd0d0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
0006b460 t CDefSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00050970 t CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
0006b480 t CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
0006b470 t CDefSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
0006b490 t CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00036420 t CPhysicsConstraint::Deactivate()
00039b00 t CPhysicsConstraint::InitLength(IVP_Environment*, CPhysicsConstraintGroup*, constraint_lengthparams_t const&)
00039f10 t CPhysicsConstraint::InitPulley(IVP_Environment*, CPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003ae00 t CPhysicsConstraint::InitRagdoll(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
000394e0 t CPhysicsConstraint::InitSliding(IVP_Environment*, CPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003bbf0 t CPhysicsConstraint::SetGameData(void*)
00038a80 t CPhysicsConstraint::DetachListener()
0003b740 t CPhysicsConstraint::InitBallsocket(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
000365e0 t CPhysicsConstraint::SetLinearMotor(float, float)
0003bd50 t CPhysicsConstraint::OutputDebugInfo()
00036670 t CPhysicsConstraint::SetAngularMotor(float, float)
00038c40 t CPhysicsConstraint::SetupRagdollAxis(int, constraint_axislimit_t const&, hk_Limited_Ball_Socket_BP*)
0003bc60 t CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003bc20 t CPhysicsConstraint::event_object_created(IVP_Event_Object*)
00038bb0 t CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003bc40 t CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
00036990 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&)
00036450 t CPhysicsConstraint::Activate()
0003a3b0 t CPhysicsConstraint::InitFixed(IVP_Environment*, CPhysicsConstraintGroup*, constraint_fixedparams_t const&)
0003a770 t CPhysicsConstraint::InitHinge(IVP_Environment*, CPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00037780 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
00037780 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
00038b80 t CPhysicsConstraint::~CPhysicsConstraint()
00038af0 t CPhysicsConstraint::~CPhysicsConstraint()
00038af0 t CPhysicsConstraint::~CPhysicsConstraint()
00076300 t CUtlCharConversion::FindConversion(char const*, int*)
000763f0 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000763f0 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00059c50 t CVehicleController::CalcEngine(float, float, bool, float, bool)
000571a0 t CVehicleController::IsBoosting()
00058040 t CVehicleController::CreateWheel(int, vehicle_axleparams_t&)
00059840 t CVehicleController::CalcSteering(float, float, float, bool)
0005a150 t CVehicleController::UpdateEngine(vehicle_controlparams_t const&, float, float, float, bool, bool)
0005ac60 t CVehicleController::GetWheelCount()
00058a50 t CVehicleController::InitCarSystem(CPhysicsObject*)
000571d0 t CVehicleController::OnVehicleExit()
00057160 t CVehicleController::UpdateBooster(float)
00058020 t CVehicleController::AttachListener()
00057500 t CVehicleController::OnVehicleEnter()
000594e0 t CVehicleController::UpdateSkidding(bool)
00059a40 t CVehicleController::UpdateSteering(vehicle_controlparams_t const&, float, float)
00058320 t CVehicleController::CreateTraceData(int, vehicle_axleparams_t&)
00058bc0 t CVehicleController::InitVehicleData(vehicleparams_t const&)
00057140 t CVehicleController::SetSpringLength(int, float)
000593a0 t CVehicleController::UpdateHandbrake(vehicle_controlparams_t const&, float, bool, bool)
0005a400 t CVehicleController::WriteToTemplate(vphysics_save_cvehiclecontroller_t&)
000587f0 t CVehicleController::CreateIVPObjects()
0005ac40 t CVehicleController::GetVehicleParams()
0005a670 t CVehicleController::InitFromTemplate(CPhysicsEnvironment*, void*, IPhysicsGameTrace*, vphysics_save_cvehiclecontroller_t const&)
0005ac90 t CVehicleController::IsEngineDisabled()
000574d0 t CVehicleController::SetWheelFriction(int, float)
00059020 t CVehicleController::UpdatePowerslide(vehicle_controlparams_t const&, bool, float)
000584d0 t CVehicleController::InitCarSystemBody(IVP_Template_Car_System&)
0005ac70 t CVehicleController::SetEngineDisabled(bool)
000589e0 t CVehicleController::ShutdownCarSystem()
00059650 t CVehicleController::UpdateExtraForces()
00057090 t CVehicleController::VehicleDataReload()
0005ac30 t CVehicleController::GetOperatingParams()
0005acf0 t CVehicleController::event_object_frozen(IVP_Event_Object*)
00058540 t CVehicleController::InitCarSystemWheels(IVP_Template_Car_System&)
0005acb0 t CVehicleController::event_object_created(IVP_Event_Object*)
00058b10 t CVehicleController::event_object_deleted(IVP_Event_Object*)
0005acd0 t CVehicleController::event_object_revived(IVP_Event_Object*)
000575c0 t CVehicleController::GetWheelContactPoint(int, Vector*, int*)
00059810 t CVehicleController::UpdateWheelPositions()
000572f0 t CVehicleController::GetCarSystemDebugData(vehicle_debugcarsystem_t&)
00059ac0 t CVehicleController::CalcEngineTransmission(float)
00059290 t CVehicleController::UpdateEngineTurboStart(vehicle_controlparams_t const&, float)
00059340 t CVehicleController::UpdateEngineTurboFinish()
0005ac50 t CVehicleController::GetVehicleParamsForChange()
0005a1d0 t CVehicleController::Update(float, vehicle_controlparams_t&)
00057550 t CVehicleController::GetWheel(int)
00058dc0 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00058dc0 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00058ba0 t CVehicleController::~CVehicleController()
00058b40 t CVehicleController::~CVehicleController()
00058b40 t CVehicleController::~CVehicleController()
00092280 t hk_Rigid_Body_Core::apply_impulses(hk_Core_VMQ_Input&, float const*)
00092230 t hk_Rigid_Body_Core::apply_impulse3_spin(hk_Core_VMQ_Input&, float __vector(4))
00092230 t hk_Rigid_Body_Core::apply_impulse3_spin(hk_Core_VMQ_Input&, float __vector)
00091fe0 t hk_Rigid_Body_Core::add_to_mass_matrix_inv(hk_Core_VMQ_Input&, hk_Dense_Matrix&, float*)
0003bd30 t IPhysicsConstraint::~IPhysicsConstraint()
0003bbd0 t IPhysicsConstraint::~IPhysicsConstraint()
0003bbd0 t IPhysicsConstraint::~IPhysicsConstraint()
000e353a t IVP_Actuator_Extra::do_float_cam(float)
000e3836 t IVP_Actuator_Extra::do_puck_force(float)
000e310a t IVP_Actuator_Extra::get_float_cam_props(float*, float*, float*, float*)
000e3174 t IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000e375c t IVP_Actuator_Extra::calc_float_cam_matrix(IVP_U_Matrix*)
000e3952 t IVP_Actuator_Extra::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e30f8 t IVP_Actuator_Extra::get_force()
000e6768 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000e6916 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000e5b96 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000e5cba t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000e5dcc t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000e7bee t IVP_Actuator_Force::get_controller_name()
000e398e t IVP_Actuator_Force::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e41f2 t IVP_Actuator_Force::set_force(float)
000e4fd0 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000e5048 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000e5ede t IVP_Actuator_Force::~IVP_Actuator_Force()
000e5f14 t IVP_Actuator_Force::~IVP_Actuator_Force()
000e5f3a t IVP_Actuator_Force::~IVP_Actuator_Force()
001264e0 t IVP_Anomaly_Limits::get_max_collisions_per_psi()
00125d10 t IVP_Anomaly_Limits::environment_will_be_deleted(IVP_Environment*)
001264ec t IVP_Anomaly_Limits::get_max_collision_checks_per_psi()
00125c8c t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
00125c40 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
0012649c t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00125cf4 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00125cd8 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
000ef79c t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000ef782 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000f823e t IVP_Core_Collision::split_collision_merged_core_next_PSI()
000fa558 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000fa588 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000fb8bc t IVP_Freeze_Manager::init_freeze_manager()
000fb8ae t IVP_Freeze_Manager::IVP_Freeze_Manager()
000fb8a0 t IVP_Freeze_Manager::IVP_Freeze_Manager()
0006a8f0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
0006a820 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
0006a820 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000bc5d0 t IVP_I_FPoint_VHash::find_point(IVP_U_Float_Point*)
000bc570 t IVP_I_FPoint_VHash::remove_point(IVP_U_Float_Point*)
000bc4d0 t IVP_I_FPoint_VHash::point_to_index(IVP_U_Float_Point*)
000bc510 t IVP_I_FPoint_VHash::add_point(IVP_U_Float_Point*)
000bc660 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000bc660 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000bc4a0 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000bc480 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000bc480 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000e2a40 t IVP_Ray_Solver_Min::get_ray_hit()
000e2a6c t IVP_Ray_Solver_Min::get_ray_dist()
000e0ebe t IVP_Ray_Solver_Min::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, float, IVP_U_Point*)
000e2c14 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000e2cce t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000e2b08 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000e2a94 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000e2a78 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
001286a6 t IVP_SurfaceManager::add_reference_to_ledge(IVP_Compact_Ledge const*)
001286ac t IVP_SurfaceManager::remove_reference_to_ledge(IVP_Compact_Ledge const*)
001285b4 t IVP_SurfaceManager::get_ledge_specific_client_data(IVP_Compact_Ledge const*)
001285a0 t IVP_SurfaceManager::set_ledge_specific_client_data(IVP_Compact_Ledge*, unsigned int)
0012860a t IVP_SurfaceManager::~IVP_SurfaceManager()
00128584 t IVP_SurfaceManager::~IVP_SurfaceManager()
00128568 t IVP_SurfaceManager::~IVP_SurfaceManager()
000e4334 t IVP_Template_Force::IVP_Template_Force()
000e4240 t IVP_Template_Force::IVP_Template_Force()
001256fc t IVP_Time_Event_PSI::simulate_time_event(IVP_Environment*)
00125bde t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
00125bc2 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
001e2bf8 d IVP_U_Active_Float::change_meter
00129666 t IVP_U_Active_Float::add_dependency(IVP_U_Active_Float_Listener*)
0012904c t IVP_U_Active_Float::update_derived()
00131e04 t IVP_U_Active_Float::get_float_value()
00131df8 t IVP_U_Active_Float::give_double_value()
0012a2b6 t IVP_U_Active_Float::remove_dependency(IVP_U_Active_Float_Listener*)
00129b58 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
00129bc2 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
0012a128 t IVP_U_Active_Float::~IVP_U_Active_Float()
0012a1b2 t IVP_U_Active_Float::~IVP_U_Active_Float()
0012a234 t IVP_U_Active_Float::~IVP_U_Active_Float()
0012ad02 t IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
001293c4 t IVP_U_Active_Limit::print()
0012cf38 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, float, float)
0012d08c t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, float, float)
0012f128 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0012f2c8 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0012f456 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0012aba4 t IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
001294f8 t IVP_U_Active_Pulse::print()
0012c06a t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, float, int, int, float, float)
0012c1e4 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, float, int, int, float, float)
00131998 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
00131b38 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0012d9bc t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
00131dc0 t IVP_U_Active_Value::add_reference()
00131dcc t IVP_U_Active_Value::remove_reference()
00131dec t IVP_U_Active_Value::get_name()
00129976 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
001299b0 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
001297ee t IVP_U_Active_Value::~IVP_U_Active_Value()
00129832 t IVP_U_Active_Value::~IVP_U_Active_Value()
0012986e t IVP_U_Active_Value::~IVP_U_Active_Value()
00138a04 t IVP_U_Float_Point3::set(float const*)
00139094 t IVP_U_Float_Point3::byte_swap()
00156568 t IVP_U_Matrix_Cache::calc_matrix_at(IVP_Time, int)
001563ca t IVP_U_Matrix_Cache::calc_matrix_at_now(IVP_Time, int)
001564e4 t IVP_U_Matrix_Cache::calc_calc_matrix_cache(IVP_Cache_Object*)
001563d6 t IVP_U_Matrix_Cache::p_init(IVP_Cache_Object*)
0015648a t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00156430 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00046b90 t CIVPMaterialManager::SetPropMap(int*, int)
00048510 t CIVPMaterialManager::get_elasticity(IVP_Contact_Situation*)
00048550 t CIVPMaterialManager::get_friction_factor(IVP_Contact_Situation*)
00046580 t CIVPMaterialManager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
00046b30 t CIVPMaterialManager::CIVPMaterialManager()
00046b30 t CIVPMaterialManager::CIVPMaterialManager()
00048460 t CIVPMaterialManager::~CIVPMaterialManager()
00048450 t CIVPMaterialManager::~CIVPMaterialManager()
00048450 t CIVPMaterialManager::~CIVPMaterialManager()
0003ce40 t CPhysicsEnvironment::ClearStats()
0003d800 t CPhysicsEnvironment::PhantomAdd(CPhysicsObject*)
0006b410 t CPhysicsEnvironment::PreRestore(physprerestoreparams_t const&)
0003d190 t CPhysicsEnvironment::SetGravity(Vector const&)
0003cbe0 t CPhysicsEnvironment::IsPredicted()
0006b1e0 t CPhysicsEnvironment::PostRestore()
0003d0e0 t CPhysicsEnvironment::CreateSpring(IPhysicsObject*, IPhysicsObject*, springparams_t*)
0003cd80 t CPhysicsEnvironment::SetPredicted(bool)
0003f350 t CPhysicsEnvironment::DestroyObject(IPhysicsObject*)
0003c820 t CPhysicsEnvironment::DestroySpring(IPhysicsSpring*)
0003d840 t CPhysicsEnvironment::PhantomRemove(CPhysicsObject*)
0003c990 t CPhysicsEnvironment::SetAirDensity(float)
0003fd80 t CPhysicsEnvironment::SetQuickDelete(bool)
0003f7e0 t CPhysicsEnvironment::TransferObject(IPhysicsObject*, IPhysicsEnvironment*)
0003c660 t CPhysicsEnvironment::GetDebugOverlay()
0003c610 t CPhysicsEnvironment::SetDebugOverlay(void* (*)(char const*, int*))
0003d4f0 t CPhysicsEnvironment::ClearDeadObjects()
0003f580 t CPhysicsEnvironment::CreatePolyObject(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003c9e0 t CPhysicsEnvironment::SweepCollideable(CPhysCollide const*, Vector const&, Vector const&, QAngle const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003d690 t CPhysicsEnvironment::CleanupDeleteList()
0003e910 t CPhysicsEnvironment::DestroyConstraint(IPhysicsConstraint*)
0003fdb0 t CPhysicsEnvironment::EnableDeleteQueue(bool)
0003f2e0 t CPhysicsEnvironment::CreateSphereObject(float, int, Vector const&, QAngle const&, objectparams_t*, bool)
0003d2c0 t CPhysicsEnvironment::DebugCheckContacts()
0003c870 t CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver*)
0003f700 t CPhysicsEnvironment::AddPlayerController(IPhysicsPlayerController*)
0003cdc0 t CPhysicsEnvironment::ForceObjectsToSleep(IPhysicsObject**, int)
0003d130 t CPhysicsEnvironment::SetAlternateGravity(Vector const&)
0003d8a0 t CPhysicsEnvironment::SetupLibraryOptions()
0003d7a0 t CPhysicsEnvironment::FindPlayerController(IPhysicsObject*)
0003cee0 t CPhysicsEnvironment::ResetSimulationClock()
0003d880 t CPhysicsEnvironment::UpdateDeleteHighMark()
0003cf30 t CPhysicsEnvironment::CreateConstraintGroup(constraint_groupparams_t const&)
0003cfd0 t CPhysicsEnvironment::CreateFixedConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
0003f5f0 t CPhysicsEnvironment::CreateFluidController(IPhysicsObject*, fluidparams_t*)
0003d010 t CPhysicsEnvironment::CreateHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_hingeparams_t const&)
0003c8b0 t CPhysicsEnvironment::SetObjectEventHandler(IPhysicsObjectEvent*)
0003cec0 t CPhysicsEnvironment::SetSimulationTimestep(float)
0003cf50 t CPhysicsEnvironment::CreateLengthConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003fb00 t CPhysicsEnvironment::CreateMotionController(IMotionEvent*)
0003f760 t CPhysicsEnvironment::CreatePlayerController(IPhysicsObject*)
0003f510 t CPhysicsEnvironment::CreatePolyObjectStatic(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003cf70 t CPhysicsEnvironment::CreatePulleyConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003ce80 t CPhysicsEnvironment::CreateShadowController(IPhysicsObject*, bool, bool)
0003c840 t CPhysicsEnvironment::DestroyConstraintGroup(IPhysicsConstraintGroup*)
0003cc00 t CPhysicsEnvironment::DestroyFluidController(IPhysicsFluidController*)
0003cbc0 t CPhysicsEnvironment::EnableConstraintNotify(bool)
0003d6a0 t CPhysicsEnvironment::RemovePlayerController(IPhysicsPlayerController*)
0003ca70 t CPhysicsEnvironment::SetPerformanceSettings(physics_performanceparams_t const*)
0003d0c0 t CPhysicsEnvironment::CreateRagdollConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003cfb0 t CPhysicsEnvironment::CreateSlidingConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003ce70 t CPhysicsEnvironment::CreateVehicleController(IPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
0003cc90 t CPhysicsEnvironment::DestroyMotionController(IPhysicsMotionController*)
0003d720 t CPhysicsEnvironment::DestroyPlayerController(IPhysicsPlayerController*)
0003c8f0 t CPhysicsEnvironment::DestroyShadowController(IPhysicsShadowController*)
0003cbf0 t CPhysicsEnvironment::GetPredictionCommandNum()
0003d100 t CPhysicsEnvironment::SerializeObjectToBuffer(IPhysicsObject*, unsigned char*, unsigned int)
0003fc10 t CPhysicsEnvironment::SetPredictionCommandNum(int)
0003c910 t CPhysicsEnvironment::DestroyVehicleController(IPhysicsVehicleController*)
0003d490 t CPhysicsEnvironment::GetCollisionEventHandler()
0003d4b0 t CPhysicsEnvironment::NotifyConstraintDisabled(IPhysicsConstraint*)
0003c890 t CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent*)
0003c8d0 t CPhysicsEnvironment::SetConstraintEventHandler(IPhysicsConstraintEvent*)
0003cf90 t CPhysicsEnvironment::CreateBallsocketConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
0003d9f0 t CPhysicsEnvironment::RestorePredictedSimulation()
0003f4b0 t CPhysicsEnvironment::UnserializeObjectFromBuffer(void*, unsigned char*, unsigned int, bool)
0003cff0 t CPhysicsEnvironment::CreateLimitedHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
0003f640 t CPhysicsEnvironment::DestroyCollideOnDeadObjectFlush(CPhysCollide*)
0003dbd0 t CPhysicsEnvironment::DoneReferencingPreviousCommands(int)
0006b0a0 t CPhysicsEnvironment::Save(physsaveparams_t const&)
0006b350 t CPhysicsEnvironment::Restore(physrestoreparams_t const&)
0003e9d0 t CPhysicsEnvironment::Simulate(float)
0003c860 t CPhysicsEnvironment::TraceBox(CGameTrace*, Vector const&, Vector const&, Vector const&, Vector const&)
0003c9d0 t CPhysicsEnvironment::TraceRay(Ray_t const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003cb10 t CPhysicsEnvironment::ReadStats(physics_stats_t*)
0003dd30 t CPhysicsEnvironment::CPhysicsEnvironment()
0003dd30 t CPhysicsEnvironment::CPhysicsEnvironment()
0003e810 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003e220 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003e220 t CPhysicsEnvironment::~CPhysicsEnvironment()
00079360 t CUtlNoEscConversion::FindConversion(char const*, int*)
00082c80 t hk_Fixed_Constraint::init_constraint(void const*)
00082940 t hk_Fixed_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00082dc0 t hk_Fixed_Constraint::apply_effector_PSI(hk_PSI_Info&)
00082e50 t hk_Fixed_Constraint::get_constraint_dof()
00082c90 t hk_Fixed_Constraint::write_to_blueprint(hk_Fixed_BP*)
00082e40 t hk_Fixed_Constraint::get_constraint_type()
00082930 t hk_Fixed_Constraint::get_vmq_storage_size()
00082c10 t hk_Fixed_Constraint::init_fixed_constraint(hk_Fixed_BP const*)
00082ec0 t hk_Fixed_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00082d00 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082d60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082d00 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082d60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00082e80 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00082e60 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00082e60 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
000841d0 t hk_Hinge_BP_Builder::set_axis_ws(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&)
000841a0 t hk_Hinge_BP_Builder::set_position_os(int, hk_Vector3 const&)
00084650 t hk_Hinge_BP_Builder::set_axis_perp_os(int, hk_Vector3 const&)
000846f0 t hk_Hinge_BP_Builder::set_angular_motor(float, float)
00084720 t hk_Hinge_BP_Builder::set_angular_limits(float, float)
00084790 t hk_Hinge_BP_Builder::set_joint_friction(float)
000847c0 t hk_Hinge_BP_Builder::set_tau(float)
00086c90 t hk_Hinge_Constraint::set_limits(float, float)
00086d10 t hk_Hinge_Constraint::set_friction(float)
000869a0 t hk_Hinge_Constraint::init_constraint(void const*)
000847e0 t hk_Hinge_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00086bf0 t hk_Hinge_Constraint::apply_effector_PSI(hk_PSI_Info&)
00086da0 t hk_Hinge_Constraint::get_constraint_dof()
000869b0 t hk_Hinge_Constraint::write_to_blueprint(hk_Hinge_BP*)
00086d90 t hk_Hinge_Constraint::get_constraint_type()
000847d0 t hk_Hinge_Constraint::get_vmq_storage_size()
00086100 t hk_Hinge_Constraint::init_hinge_constraint(hk_Hinge_BP const*)
00084ad0 t hk_Hinge_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00086d50 t hk_Hinge_Constraint::set_motor(float, float)
00086a70 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00086b30 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00086a70 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00086b30 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00086dd0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00086db0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00086db0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
000407d0 t IPhysicsEnvironment::~IPhysicsEnvironment()
0003fd70 t IPhysicsEnvironment::~IPhysicsEnvironment()
0003fd70 t IPhysicsEnvironment::~IPhysicsEnvironment()
00145140 t IVP_3D_Solver_PK_KK::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000e91bc t IVP_Actuator_Spring::get_constant()
000e82f6 t IVP_Actuator_Spring::set_constant(float)
000e91ca t IVP_Actuator_Spring::get_damp_factor()
000e91f4 t IVP_Actuator_Spring::get_only_stretch()
000e91d8 t IVP_Actuator_Spring::get_rel_pos_damp()
000e8292 t IVP_Actuator_Spring::set_rel_pos_damp(float)
000e8328 t IVP_Actuator_Spring::set_break_max_len(float)
000e9202 t IVP_Actuator_Spring::get_controller_name()
000e7ffe t IVP_Actuator_Spring::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e7d60 t IVP_Actuator_Spring::fire_event_spring_broken()
000e91e6 t IVP_Actuator_Spring::get_spring_length_zero_force()
000e8368 t IVP_Actuator_Spring::set_len(float)
000e82c4 t IVP_Actuator_Spring::set_damp(float)
000e9040 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000e8462 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000e870e t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000e8792 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000e880e t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000e7c3e t IVP_Actuator_Torque::get_torque()
000e406c t IVP_Actuator_Torque::set_torque(float)
000e7c28 t IVP_Actuator_Torque::get_controller_name()
000e40ba t IVP_Actuator_Torque::set_max_rotation_speed(float)
000e3b54 t IVP_Actuator_Torque::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e611c t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000e6240 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000e5930 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000e599a t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000e59fc t IVP_Actuator_Torque::~IVP_Actuator_Torque()
00126006 t IVP_Anomaly_Manager::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
00126418 t IVP_Anomaly_Manager::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00125e26 t IVP_Anomaly_Manager::get_push_speed_penetration(IVP_Real_Object*, IVP_Real_Object*)
00125da6 t IVP_Anomaly_Manager::environment_will_be_deleted(IVP_Environment*)
001263b2 t IVP_Anomaly_Manager::max_angular_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00125dd4 t IVP_Anomaly_Manager::max_collision_checks_exceeded(int)
00125e64 t IVP_Anomaly_Manager::solve_inter_penetration_simple(IVP_Real_Object*, IVP_Real_Object*, float)
00125dca t IVP_Anomaly_Manager::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00125dc0 t IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00125d4c t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
00125d2a t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
00126470 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00125d8a t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00125d6e t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
000ef7f4 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
000ef7b6 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
0014f180 t IVP_Buoyancy_Solver::compute_forces(IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_Real_Object*)
0014e400 t IVP_Buoyancy_Solver::compute_values_for_one_ball(IVP_Real_Object const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0014ef90 t IVP_Buoyancy_Solver::compute_values_for_one_ledge(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0014eff0 t IVP_Buoyancy_Solver::compute_values_for_one_polygon(IVP_Real_Object*, IVP_U_Float_Hesse const*)
0014e670 t IVP_Buoyancy_Solver::compute_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_Compact_Ledge const*)
0014b9d0 t IVP_Buoyancy_Solver::compute_disection_points_with_ball(IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, float const&, IVP_U_Float_Point*, IVP_U_Float_Point*)
0014b870 t IVP_Buoyancy_Solver::compute_buoyancy_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0014bc40 t IVP_Buoyancy_Solver::compute_dampening_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0014f2e0 t IVP_Buoyancy_Solver::compute_rotation_and_translation_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Point const**, IVP_Compact_Ledge const*, float const*, int const&, int const&, int const&)
0014b7a0 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
0014b7a0 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
0011cbfc t IVP_Cluster_Manager::add_object(IVP_Real_Object*)
0011ef68 t IVP_Cluster_Manager::remove_object(IVP_Real_Object*)
0011ca9e t IVP_Cluster_Manager::get_root_cluster()
0011df14 t IVP_Cluster_Manager::add_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
0011d98e t IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
0011e038 t IVP_Cluster_Manager::remove_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
0011d768 t IVP_Cluster_Manager::check_for_unused_objects(IVP_Universe_Manager*)
0011e252 t IVP_Cluster_Manager::fire_event_object_frozen(IVP_Event_Object*)
0011f212 t IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object*, IVP_Event_Collision*)
0011dd8a t IVP_Cluster_Manager::fire_event_object_created(IVP_Event_Object*)
0011e3dc t IVP_Cluster_Manager::fire_event_object_deleted(IVP_Event_Object*)
0011e564 t IVP_Cluster_Manager::fire_event_object_revived(IVP_Event_Object*)
0011edd0 t IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object*, IVP_Event_Collision*)
0011ebb6 t IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
0011e6ee t IVP_Cluster_Manager::fire_event_friction_created(IVP_Real_Object*, IVP_Event_Friction*)
0011ea1e t IVP_Cluster_Manager::fire_event_friction_deleted(IVP_Real_Object*, IVP_Event_Friction*)
0011e886 t IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object*)
0011caa8 t IVP_Cluster_Manager::get_next_real_object_in_cluster_tree(IVP_Object*)
0011d582 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
0011d4bc t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
0011cbac t IVP_Cluster_Manager::~IVP_Cluster_Manager()
0011cb5c t IVP_Cluster_Manager::~IVP_Cluster_Manager()
00128900 t IVP_Compact_Surface::byte_swap_all(IVP_BOOL, int)
001289ae t IVP_Compact_Surface::byte_swap()
001259d4 t IVP_Event_Manager_D::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001058e0 t IVP_Friction_Solver::complex_failed(IVP_Friction_System*)
00105e00 t IVP_Friction_Solver::calc_solver_PSI(IVP_Friction_System*, int*)
00106caa t IVP_Friction_Solver::do_penalty_step(float*, float*, float, float)
00101046 t IVP_Friction_Solver::ease_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*, float)
00105750 t IVP_Friction_Solver::factor_result_vec()
00104376 t IVP_Friction_Solver::ease_friction_pair(IVP_Friction_Core_Pair*, IVP_U_Memory*)
00106b3c t IVP_Friction_Solver::do_inactives_pushes(IVP_Friction_System*)
00106408 t IVP_Friction_Solver::do_resulting_pushes(IVP_Friction_System*)
00106316 t IVP_Friction_Solver::setup_coords_mindists(IVP_Friction_System*)
000ffe80 t IVP_Friction_Solver::ease_test_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*)
00105782 t IVP_Friction_Solver::normize_constraint_equ()
001058da t IVP_Friction_Solver::debug_distance_after_push(int)
0010734c t IVP_Friction_Solver::solve_linear_equation_and_push(IVP_Friction_System*, int*, int, IVP_U_Memory*)
0010676e t IVP_Friction_Solver::test_gauss_solution_suggestion(float*, int*, int, IVP_U_Memory*)
0010349c t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
0010335e t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
00100a96 t IVP_Friction_System::reset_time(IVP_Time)
00100c00 t IVP_Friction_System::add_fr_pair(IVP_Friction_Core_Pair*)
00100b34 t IVP_Friction_System::del_fr_pair(IVP_Friction_Core_Pair*)
001001d8 t IVP_Friction_System::print_all_dists()
001000a0 t IVP_Friction_System::union_find_fr_sys()
0011d156 t IVP_Friction_System::add_core_to_system(IVP_Core*)
0011cc3a t IVP_Friction_System::add_dist_to_system(IVP_Contact_Point*)
0010049e t IVP_Friction_System::debug_fs_out_ascii()
00107b56 t IVP_Friction_System::do_friction_system(IVP_Event_Sim const*)
00100500 t IVP_Friction_System::find_pair_of_cores(IVP_Core*, IVP_Core*)
001047a2 t IVP_Friction_System::apply_real_friction(IVP_Event_Sim const*)
0011fc1e t IVP_Friction_System::get_controller_name()
00105aaa t IVP_Friction_System::get_max_energy_gain()
00105b88 t IVP_Friction_System::undo_complex_pushes()
001041ea t IVP_Friction_System::calc_friction_forces(IVP_Event_Sim const*)
0011028c t IVP_Friction_System::debug_clean_tmp_info()
00104716 t IVP_Friction_System::ease_friction_forces()
0010056c t IVP_Friction_System::get_controlled_cores(IVP_U_Vector<IVP_Core>*)
00105954 t IVP_Friction_System::ivp_debug_fs_pointers()
00104c64 t IVP_Friction_System::split_friction_system(IVP_Core*)
00105be2 t IVP_Friction_System::confirm_complex_pushes()
001004a4 t IVP_Friction_System::core_is_found_in_pairs(IVP_Core*)
00105a2a t IVP_Friction_System::core_is_terminal_in_fs(IVP_Core*)
0010001e t IVP_Friction_System::get_pair_info_for_objs(IVP_Core*, IVP_Core*)
00105916 t IVP_Friction_System::exchange_friction_dists(IVP_Contact_Point*, IVP_Contact_Point*)
001025ee t IVP_Friction_System::fusion_friction_systems(IVP_Friction_System*)
0011fc34 t IVP_Friction_System::get_controller_priority()
0011cfa2 t IVP_Friction_System::remove_core_from_system(IVP_Core*)
0011cc0e t IVP_Friction_System::remove_dist_from_system(IVP_Contact_Point*)
001028f2 t IVP_Friction_System::delete_friction_distance(IVP_Contact_Point*)
00104842 t IVP_Friction_System::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0010590c t IVP_Friction_System::test_hole_fr_system_data()
00106892 t IVP_Friction_System::do_pushes_distance_keepers(IVP_Event_Sim const*)
00105c3c t IVP_Friction_System::kinetic_energy_of_hole_frs()
0011d1fe t IVP_Friction_System::dist_added_update_pair_info(IVP_Contact_Point*)
0010595a t IVP_Friction_System::bubble_sort_dists_importance()
001001de t IVP_Friction_System::clear_integrated_anti_energy()
0011d36a t IVP_Friction_System::fs_recalc_all_contact_points()
00105d2a t IVP_Friction_System::reorder_mindists_for_complex()
0011d2ac t IVP_Friction_System::dist_removed_update_pair_info(IVP_Contact_Point*)
0010007c t IVP_Friction_System::debug_check_system_consistency()
0010057a t IVP_Friction_System::get_associated_controlled_cores()
001058ac t IVP_Friction_System::get_num_supposed_active_frdists()
00100572 t IVP_Friction_System::get_minimum_simulation_frequency()
00106678 t IVP_Friction_System::static_fr_oversized_matrix_panic()
00100586 t IVP_Friction_System::core_is_going_to_be_deleted_event(IVP_Core*)
00103962 t IVP_Friction_System::remove_energy_gained_by_real_friction()
0011d648 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
0011d6d8 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
0011dc98 t IVP_Friction_System::~IVP_Friction_System()
0011dbae t IVP_Friction_System::~IVP_Friction_System()
0011dac4 t IVP_Friction_System::~IVP_Friction_System()
00109006 t IVP_Incr_L_U_Matrix::normize_row(int)
00109198 t IVP_Incr_L_U_Matrix::add_neg_col_L(int, int, float)
0010aff4 t IVP_Incr_L_U_Matrix::add_neg_row_L(int, int, float)
0010bae0 t IVP_Incr_L_U_Matrix::debug_print_a()
0010c944 t IVP_Incr_L_U_Matrix::decrement_l_u(int)
0010c2e0 t IVP_Incr_L_U_Matrix::increment_l_u()
00108f2e t IVP_Incr_L_U_Matrix::normize_row_L(int)
0010a58c t IVP_Incr_L_U_Matrix::solve_lin_equ()
0010aefa t IVP_Incr_L_U_Matrix::subtract_row_L(int, int, float)
00109402 t IVP_Incr_L_U_Matrix::debug_print_l_u()
00109294 t IVP_Incr_L_U_Matrix::mult_vec_with_L()
0010b736 t IVP_Incr_L_U_Matrix::pivot_search_l_u(int)
00109318 t IVP_Incr_L_U_Matrix::solve_vec_with_U()
0010a750 t IVP_Incr_L_U_Matrix::exchange_rows_l_u(int, int)
001091dc t IVP_Incr_L_U_Matrix::exchange_columns_L(int, int)
00109238 t IVP_Incr_L_U_Matrix::exchange_columns_U(int, int)
0010acee t IVP_Incr_L_U_Matrix::add_neg_row_to_row_l_u(int, int, float)
0010ab48 t IVP_Incr_L_U_Matrix::add_neg_row_upwards_l_u(int, int, float)
0010d82c t IVP_Incr_L_U_Matrix::l_u_decomposition_with_pivoting()
0011fc6a t IVP_Listener_Object::~IVP_Listener_Object()
0011fb6e t IVP_Listener_Object::~IVP_Listener_Object()
0011fb52 t IVP_Listener_Object::~IVP_Listener_Object()
00127ff8 t IVP_Material_Simple::get_damping()
00128004 t IVP_Material_Simple::get_adhesion()
00127fec t IVP_Material_Simple::get_elasticity()
00127fe0 t IVP_Material_Simple::get_friction_factor()
0012820a t IVP_Material_Simple::get_second_friction_factor()
00128010 t IVP_Material_Simple::get_name()
00127f72 t IVP_Material_Simple::IVP_Material_Simple(float, float)
00127f08 t IVP_Material_Simple::IVP_Material_Simple()
00127f3c t IVP_Material_Simple::IVP_Material_Simple(float, float)
00127ed4 t IVP_Material_Simple::IVP_Material_Simple()
0012809e t IVP_Material_Simple::~IVP_Material_Simple()
00127fc4 t IVP_Material_Simple::~IVP_Material_Simple()
00127fa8 t IVP_Material_Simple::~IVP_Material_Simple()
00141b00 t IVP_Mindist_Manager::print_mindists()
00141cc0 t IVP_Mindist_Manager::recheck_ov_element(IVP_Real_Object*)
00142b10 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float)
001429f0 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float, float)
001429b0 t IVP_Mindist_Manager::remove_hull_mindist(IVP_Mindist*)
00141b60 t IVP_Mindist_Manager::insert_exact_mindist(IVP_Mindist*)
001434e0 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*)
00144a80 t IVP_Mindist_Manager::recalc_exact_mindist(IVP_Mindist*)
001427b0 t IVP_Mindist_Manager::remove_exact_mindist(IVP_Mindist*)
00143e40 t IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object*, IVP_Real_Object*, float, IVP_U_FVector<IVP_Collision>*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Collision_Delegator*)
00141c40 t IVP_Mindist_Manager::insert_invalid_mindist(IVP_Mindist*)
00142920 t IVP_Mindist_Manager::remove_invalid_mindist(IVP_Mindist*)
00143480 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*)
00143390 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float)
00143320 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float, float)
00144b90 t IVP_Mindist_Manager::recalc_all_exact_mindists()
00144bd0 t IVP_Mindist_Manager::recalc_all_exact_wheel_mindist()
001431e0 t IVP_Mindist_Manager::insert_and_recalc_exact_mindist(IVP_Mindist*)
001431a0 t IVP_Mindist_Manager::recalc_all_exact_mindists_events()
001436c0 t IVP_Mindist_Manager::insert_and_recalc_phantom_mindist(IVP_Mindist*)
00142540 t IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object*)
00144940 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
00144940 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
001449d0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
001449d0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
00140770 t IVP_OV_Tree_Manager::expand_tree(IVP_OV_Node const*)
00141020 t IVP_OV_Tree_Manager::cleanup_node(IVP_OV_Node*)
00140520 t IVP_OV_Tree_Manager::connect_boxes(IVP_OV_Node*, IVP_OV_Node*)
0013ff90 t IVP_OV_Tree_Manager::calc_optimal_box(IVP_OV_Element const*, float, float)
00140d70 t IVP_OV_Tree_Manager::insert_ov_element(IVP_OV_Element*, float, float, IVP_U_Vector<IVP_OV_Element>*)
00141090 t IVP_OV_Tree_Manager::remove_ov_element(IVP_OV_Element*)
00141220 t IVP_OV_Tree_Manager::get_luf_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
00141280 t IVP_OV_Tree_Manager::get_center_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
00140b00 t IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*, IVP_OV_Node const*)
001409d0 t IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*)
001eab60 b IVP_OV_Tree_Manager::powerlist
0013fdb0 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0013fdb0 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0013fe90 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
0013fe90 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
001203cc t IVP_Simulation_Unit::reset_time(IVP_Time)
00120b9a t IVP_Simulation_Unit::clean_sim_unit()
00121b2a t IVP_Simulation_Unit::split_sim_unit(IVP_Core*)
00120472 t IVP_Simulation_Unit::add_sim_unit_core(IVP_Core*)
0011ffb0 t IVP_Simulation_Unit::rem_sim_unit_core(IVP_Core*)
0012005c t IVP_Simulation_Unit::sim_unit_core_exists(IVP_Core*)
00123302 t IVP_Simulation_Unit::sim_unit_remove_core(IVP_Core*)
0011ff00 t IVP_Simulation_Unit::get_pos_of_controller(IVP_Controller*)
0012155a t IVP_Simulation_Unit::add_controller_of_core(IVP_Core*, IVP_Controller*)
0012235c t IVP_Simulation_Unit::do_sim_unit_union_find()
00123e6c t IVP_Simulation_Unit::get_unit_movement_type()
00122128 t IVP_Simulation_Unit::perform_test_and_split()
00123e78 t IVP_Simulation_Unit::set_unit_movement_type(IVP_Movement_Type)
001209c8 t IVP_Simulation_Unit::add_controller_unit_sim(IVP_Controller*)
00120d26 t IVP_Simulation_Unit::rem_sim_unit_controller(IVP_Controller*)
00121834 t IVP_Simulation_Unit::sim_unit_calc_redundants()
00120870 t IVP_Simulation_Unit::sim_unit_union_find_test()
00121cf0 t IVP_Simulation_Unit::fusion_simulation_unities(IVP_Simulation_Unit*)
00120e64 t IVP_Simulation_Unit::remove_controller_of_core(IVP_Core*, IVP_Controller*)
001200aa t IVP_Simulation_Unit::sim_unit_sort_controllers()
0012295c t IVP_Simulation_Unit::simulate_single_sim_unit_psi(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001204ba t IVP_Simulation_Unit::sim_unit_calc_movement_state(IVP_Environment*)
00120a44 t IVP_Simulation_Unit::throw_cores_into_my_sim_unit(IVP_Simulation_Unit*)
00123eb8 t IVP_Simulation_Unit::sim_unit_ensure_in_simulation()
001201a8 t IVP_Simulation_Unit::sim_unit_exchange_controllers(int, int)
00120632 t IVP_Simulation_Unit::sim_unit_ensure_cores_movement()
0012078e t IVP_Simulation_Unit::sim_unit_revive_for_simulation(IVP_Environment*)
0011feb0 t IVP_Simulation_Unit::controller_is_known_to_sim_unit(IVP_Controller*)
00120b08 t IVP_Simulation_Unit::add_controlled_core_for_controller(IVP_Controller*, IVP_Core*)
00123e86 t IVP_Simulation_Unit::prefetch0_init_moving_core_for_psi(IVP_Core*)
001205d8 t IVP_Simulation_Unit::sim_unit_clear_movement_check_values()
0011ff76 t IVP_Simulation_Unit::IVP_Simulation_Unit()
0011ff3c t IVP_Simulation_Unit::IVP_Simulation_Unit()
0012314a t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00123c72 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
0009b026 t IVP_SurMan_PS_Plane::get_area_size()
0009ae4a t IVP_SurMan_PS_Plane::get_len_of_all_edges()
000e7b46 t IVP_Template_Anchor::get_object()
000e7b50 t IVP_Template_Anchor::get_anchor_point_ws()
000e47dc t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, float, float, float)
000e514e t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, IVP_U_Float_Point const*)
000e50c0 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, float, float, float)
000e48ae t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, IVP_U_Float_Point const*)
000e2f68 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, float, float, float)
000e2f40 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, IVP_U_Point const*)
00128780 t IVP_Template_Object::set_name(char const*)
00128700 t IVP_Template_Object::IVP_Template_Object()
0012870e t IVP_Template_Object::IVP_Template_Object()
0012871c t IVP_Template_Object::~IVP_Template_Object()
0012874e t IVP_Template_Object::~IVP_Template_Object()
000e869a t IVP_Template_Spring::IVP_Template_Spring()
000e86d4 t IVP_Template_Spring::IVP_Template_Spring()
000e427c t IVP_Template_Torque::IVP_Template_Torque()
000e42aa t IVP_Template_Torque::IVP_Template_Torque()
0012a886 t IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
00129560 t IVP_U_Active_Square::print()
0012c35e t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, float, float, float)
0012c434 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, float, float, float)
0012dae4 t IVP_U_Active_Square::~IVP_U_Active_Square()
0012dc12 t IVP_U_Active_Square::~IVP_U_Active_Square()
0012f860 t IVP_U_Active_Square::~IVP_U_Active_Square()
0012919a t IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
0012ac5a t IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
001292d8 t IVP_U_Active_Switch::print()
0012cb7e t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012cd5a t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012e716 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0012ea80 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0012edd2 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00034340 t physcollideheader_t::GetBaseMap()
001de458 d physcollideheader_t::m_DataMap
00031c60 t CAirboatFrictionData::GetContactPoint(Vector&)
00031c80 t CAirboatFrictionData::GetContactSpeed(Vector&)
00031c40 t CAirboatFrictionData::GetSurfaceNormal(Vector&)
00065760 t CPhysCollideAABBTree::Init(CPhysCollide const*)
0002e400 t CPhysicsCollisionSet::ShouldCollide(int, int)
0002e370 t CPhysicsCollisionSet::EnableCollisions(int, int)
0002e3b0 t CPhysicsCollisionSet::DisableCollisions(int, int)
00040c00 t CPhysicsFrictionData::GetContactPoint(Vector&)
0003feb0 t CPhysicsFrictionData::GetContactSpeed(Vector&)
00040b50 t CPhysicsFrictionData::GetSurfaceNormal(Vector&)
00048430 t CPhysicsSurfaceProps::GetIVPManager()
000467a0 t CPhysicsSurfaceProps::GetIVPMaterial(int)
000467b0 t CPhysicsSurfaceProps::GetSurfaceData(int)
000473a0 t CPhysicsSurfaceProps::ParseSurfaceData(char const*, char const*)
00046e30 t CPhysicsSurfaceProps::AddFileToDatabase(char const*)
00046750 t CPhysicsSurfaceProps::GetInternalSurface(int)
00046af0 t CPhysicsSurfaceProps::CopyPhysicsProperties(CSurface*, int)
00046520 t CPhysicsSurfaceProps::SetWorldMaterialIndexTable(int*, int)
00046ef0 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
00046ef0 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
00046e10 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00046bd0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00046bd0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00065ff0 t CTraceSolverAABBTree::DoSweep()
0005e830 t CTraceSolverAABBTree::CTraceSolverAABBTree(CGameTrace*, Ray_t const&, CTraceIVP*, CTraceRay&, CTraceAABB&, CPhysCollideAABBTree const*, Vector const&)
0005e830 t CTraceSolverAABBTree::CTraceSolverAABBTree(CGameTrace*, Ray_t const&, CTraceIVP*, CTraceRay&, CTraceAABB&, CPhysCollideAABBTree const*, Vector const&)
000932f0 t hk_Dense_Matrix_Util::invert_2x2(hk_Dense_Matrix const&, hk_Dense_Matrix&, float)
00092e70 t hk_Dense_Matrix_Util::invert_4x4(hk_Fixed_Dense_Matrix<4>&, float)
00092b40 t hk_Dense_Matrix_Util::invert_5x5(hk_Fixed_Dense_Matrix<5>&, float)
00092800 t hk_Dense_Matrix_Util::invert_6x6(hk_Fixed_Dense_Matrix<6>&, float)
00093110 t hk_Dense_Matrix_Util::invert_3x3_symmetric(hk_Dense_Matrix&, float)
00092770 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, float const*, float*)
000926b0 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, hk_Dense_Vector const&, hk_Dense_Vector&)
00093680 t hk_Dense_Matrix_Util::print(hk_Dense_Matrix const&)
00093390 t hk_Dense_Matrix_Util::solve(hk_Dense_Matrix&, hk_Dense_Vector&, float)
0008a320 t hk_Pulley_Constraint::set_length(float)
0008a330 t hk_Pulley_Constraint::set_gearing(float)
0008a1d0 t hk_Pulley_Constraint::init_constraint(void const*)
00089f40 t hk_Pulley_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008a370 t hk_Pulley_Constraint::apply_effector_PSI(hk_PSI_Info&)
0008a3d0 t hk_Pulley_Constraint::get_constraint_dof()
0008a1e0 t hk_Pulley_Constraint::write_to_blueprint(hk_Pulley_BP*)
0008a3c0 t hk_Pulley_Constraint::get_constraint_type()
00089f30 t hk_Pulley_Constraint::get_vmq_storage_size()
0008a340 t hk_Pulley_Constraint::set_worldspace_point(int, hk_Vector3 const&)
0008a150 t hk_Pulley_Constraint::init_pulley_constraint(hk_Pulley_BP const*)
0008a440 t hk_Pulley_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008a260 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a2c0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a260 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a2c0 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a400 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0008a3e0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0008a3e0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
000484a0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
000483b0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
000483b0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
001454e0 t IVP_3D_Solver_PF_NPF::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00145290 t IVP_3D_Solver_S_VALS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000e4108 t IVP_Actuator_Rot_Mot::set_max_torque(float)
000e7c12 t IVP_Actuator_Rot_Mot::get_controller_name()
000e41a4 t IVP_Actuator_Rot_Mot::set_max_rotation_speed(float)
000e3c58 t IVP_Actuator_Rot_Mot::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e7c04 t IVP_Actuator_Rot_Mot::get_power()
000e4156 t IVP_Actuator_Rot_Mot::set_power(float)
000e65a0 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000e6684 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000e5a5e t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000e5ac8 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000e5b2a t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000da5de t IVP_Collision_Filter::~IVP_Collision_Filter()
000da1c0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000da1a4 t IVP_Collision_Filter::~IVP_Collision_Filter()
000db81e t IVP_Compact_Triangle::get_next_tri()
000db734 t IVP_Compact_Triangle::set_tri_index(int)
000db7f4 t IVP_Compact_Triangle::get_first_edge()
000db78a t IVP_Compact_Triangle::set_is_virtual(unsigned int)
000db750 t IVP_Compact_Triangle::set_pierce_index(int)
000db770 t IVP_Compact_Triangle::set_material_index(int)
000db2b2 t IVP_Compact_Triangle::byte_swap()
000db13e t IVP_Compact_Triangle::IVP_Compact_Triangle()
000db162 t IVP_Compact_Triangle::IVP_Compact_Triangle()
00153170 t IVP_Constraint_Local::get_objectA()
00153160 t IVP_Constraint_Local::get_objectR()
00152a60 t IVP_Constraint_Local::fix_rotation_axis(IVP_COORDINATE_INDEX)
00153180 t IVP_Constraint_Local::constraint_changed()
00152a10 t IVP_Constraint_Local::free_rotation_axis(IVP_COORDINATE_INDEX)
001529a0 t IVP_Constraint_Local::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
001527a0 t IVP_Constraint_Local::fix_translation_axis(IVP_COORDINATE_INDEX)
00152750 t IVP_Constraint_Local::free_translation_axis(IVP_COORDINATE_INDEX)
001527f0 t IVP_Constraint_Local::sort_rotation_mapping()
001526e0 t IVP_Constraint_Local::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
00150230 t IVP_Constraint_Local::change_fixing_point_Ros(IVP_U_Point const*)
0014fd80 t IVP_Constraint_Local::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
001503e0 t IVP_Constraint_Local::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001525a0 t IVP_Constraint_Local::sort_translation_mapping()
0014fb10 t IVP_Constraint_Local::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0014ffb0 t IVP_Constraint_Local::change_translation_axes_Ros(IVP_U_Matrix3 const*)
0014fbc0 t IVP_Constraint_Local::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
00150140 t IVP_Constraint_Local::change_target_fixing_point_Ros(IVP_U_Point const*)
0014fa50 t IVP_Constraint_Local::change_Aos_to_relaxe_constraint()
0014f990 t IVP_Constraint_Local::change_Ros_to_relaxe_constraint()
0014fc70 t IVP_Constraint_Local::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
0014f970 t IVP_Constraint_Local::core_is_going_to_be_deleted_event(IVP_Core*)
0014ff20 t IVP_Constraint_Local::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
00152ab0 t IVP_Constraint_Local::init(IVP_Template_Constraint const&)
001530d0 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
00152520 t IVP_Constraint_Local::IVP_Constraint_Local()
001530d0 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
00152520 t IVP_Constraint_Local::IVP_Constraint_Local()
001503c0 t IVP_Constraint_Local::~IVP_Constraint_Local()
00150350 t IVP_Constraint_Local::~IVP_Constraint_Local()
00150350 t IVP_Constraint_Local::~IVP_Constraint_Local()
001531d0 t IVP_Controller_Golem::reset_time(IVP_Time)
001540b0 t IVP_Controller_Golem::set_prime_position(IVP_U_Point const*, IVP_U_Float_Point const*, IVP_Time const&)
00154120 t IVP_Controller_Golem::set_prime_orientation(IVP_U_Quat const*, IVP_Time const&, IVP_U_Quat const*, float)
00153620 t IVP_Controller_Golem::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00154080 t IVP_Controller_Golem::beam_object_to_target_position(IVP_Event_Sim*)
00153fb0 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00153fb0 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
001535d0 t IVP_Controller_Golem::~IVP_Controller_Golem()
001535b0 t IVP_Controller_Golem::~IVP_Controller_Golem()
001535b0 t IVP_Controller_Golem::~IVP_Controller_Golem()
00118b9c t IVP_Controller_VHash::controller_to_index(IVP_Controller*)
0011901e t IVP_Controller_VHash::~IVP_Controller_VHash()
00119054 t IVP_Controller_VHash::~IVP_Controller_VHash()
00119080 t IVP_Controller_VHash::~IVP_Controller_VHash()
000fb5a8 t IVP_Core_Fast_Static::get_inv_masses()
00117d86 t IVP_Friction_Manager::generate_contact_point(IVP_Mindist*, IVP_BOOL*)
00117292 t IVP_Friction_Manager::get_associated_contact_point(IVP_Mindist*)
00117252 t IVP_Friction_Manager::delete_all_contact_points_of_object(IVP_Real_Object*)
000c1c60 t IVP_Intrusion_Status::p()
000c1bf0 t IVP_Intrusion_Status::print(char const*)
000c1c80 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000c1c80 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000c1ca0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000c1ca0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000f71a2 t IVP_Listener_Phantom::IVP_Listener_Phantom()
000f7186 t IVP_Listener_Phantom::IVP_Listener_Phantom()
00127e7c t IVP_Material_Manager::get_damping(IVP_Contact_Situation*)
00127ea8 t IVP_Material_Manager::get_adhesion(IVP_Contact_Situation*)
00127e50 t IVP_Material_Manager::get_elasticity(IVP_Contact_Situation*)
00127e24 t IVP_Material_Manager::get_friction_factor(IVP_Contact_Situation*)
001280ca t IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
0012824e t IVP_Material_Manager::environment_will_be_deleted(IVP_Environment*)
00127dca t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
00127da8 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
00128268 t IVP_Material_Manager::~IVP_Material_Manager()
00128232 t IVP_Material_Manager::~IVP_Material_Manager()
00128216 t IVP_Material_Manager::~IVP_Material_Manager()
00141880 t IVP_Mindist_Settings::set_collision_tolerance(float, float)
00141960 t IVP_Mindist_Settings::set_event_queue_min_delta_time_base(float)
00141980 t IVP_Mindist_Settings::IVP_Mindist_Settings()
00141980 t IVP_Mindist_Settings::IVP_Mindist_Settings()
00100214 t IVP_Mutual_Energizer::calc_energy_potential(float, float, float, float, float)
00102d94 t IVP_Mutual_Energizer::calc_energy_potential()
00103122 t IVP_Mutual_Energizer::init_mutual_energizer(IVP_Core*, IVP_Core*)
001035d4 t IVP_Mutual_Energizer::destroy_percent_energy(float)
00100a2a t IVP_Mutual_Energizer::calc_impulse_to_reduce_energy_level(float, float, float, float)
000e2ab0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000e29e0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000e29c4 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000e0e20 t IVP_Ray_Solver_Group::check_ray_group_against_cube(IVP_U_Float_Point const*, float)
000e1e8e t IVP_Ray_Solver_Group::check_ray_group_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000e1998 t IVP_Ray_Solver_Group::check_ray_group_against_object(IVP_Real_Object*)
000e2176 t IVP_Ray_Solver_Group::check_ray_group_against_all_objects_in_sim(IVP_Environment const*)
000e0f52 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
000e106a t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
0011c57e t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
0011c4d6 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
0011c626 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
0011c6ca t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
0011c766 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
000f571e t IVP_Template_Phantom::IVP_Template_Phantom()
000f5746 t IVP_Template_Phantom::IVP_Template_Phantom()
0009dc36 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009d976 t IVP_Template_Polygon::IVP_Template_Polygon()
0009db36 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009d944 t IVP_Template_Polygon::IVP_Template_Polygon()
0009dd36 t IVP_Template_Polygon::~IVP_Template_Polygon()
0009dde2 t IVP_Template_Polygon::~IVP_Template_Polygon()
000e42d8 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
000e4306 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
0009da04 t IVP_Template_Surface::init_surface(int)
0009dab8 t IVP_Template_Surface::close_surface()
0009d9a8 t IVP_Template_Surface::get_surface_index()
0009da48 t IVP_Template_Surface::calc_surface_normal_template(int, int, int)
0009db02 t IVP_Template_Surface::IVP_Template_Surface()
0009db1c t IVP_Template_Surface::IVP_Template_Surface()
0009ded8 t IVP_Template_Surface::~IVP_Template_Surface()
0009de8e t IVP_Template_Surface::~IVP_Template_Surface()
001323f0 t IVP_U_BigVector_Base::increment_mem()
0011cd26 t IVP_Universe_Manager::event_object_deleted(IVP_Real_Object*)
0011cd20 t IVP_Universe_Manager::object_no_longer_needed(IVP_Real_Object*)
0011cd2c t IVP_Universe_Manager::provide_universe_settings()
0011cd1a t IVP_Universe_Manager::ensure_objects_in_environment(IVP_Real_Object*, IVP_U_Float_Point*, float)
0009e8fe t IVV_Cluster_Min_Hash::remove_min()
0009e6ec t IVV_Cluster_Min_Hash::change_value(void*, float)
0009df30 t IVV_Cluster_Min_Hash::min_added_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009df8c t IVV_Cluster_Min_Hash::min_removed_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009e264 t IVV_Cluster_Min_Hash::add(void*, float)
0009e494 t IVV_Cluster_Min_Hash::remove(void*)
0009e08a t IVV_Cluster_Min_Hash::is_elem(void*)
0009e178 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009e1ee t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009e570 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0009e60c t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0006da60 t SplitScreenConVarRef::Init(char const*, bool)
0006dbf0 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0006dbc0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0006dbb0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
0006dbf0 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0006dbc0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0006dbb0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
00057bc0 t vehicle_axleparams_t::GetBaseMap()
001e08e8 d vehicle_axleparams_t::m_DataMap
000578e0 t vehicle_bodyparams_t::GetBaseMap()
001e0930 d vehicle_bodyparams_t::m_DataMap
0003fe10 t CPhysicsCollisionData::GetContactPoint(Vector&)
0003fe60 t CPhysicsCollisionData::GetContactSpeed(Vector&)
0003fde0 t CPhysicsCollisionData::GetSurfaceNormal(Vector&)
0016a910 t CStackMemoryDispenser::RecurseDelete(void*)
000762c0 t CUtlCStringConversion::FindConversion(char const*, int*)
000764f0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000764f0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000405f0 t CVPhysicsDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
00040610 t CVPhysicsDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
00040620 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
00040630 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
00040660 t CVPhysicsDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
00040650 t CVPhysicsDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
00040600 t CVPhysicsDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
000405e0 t CVPhysicsDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
00040640 t CVPhysicsDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
00067180 t CVPhysicsPackedParser::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
00067240 t CVPhysicsPackedParser::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
000666e0 t CVPhysicsPackedParser::ParseCustom(void*, IVPhysicsKeyHandler*)
00066d00 t CVPhysicsPackedParser::ParseFields(unsigned char*, parsefield_t*, int, IVPhysicsKeyHandler*)
00066510 t CVPhysicsPackedParser::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00066b70 t CVPhysicsPackedParser::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
00066610 t CVPhysicsPackedParser::GetCurrentBlockName()
00067030 t CVPhysicsPackedParser::ParseCollisionRules(ragdollcollisionrules_t*, IVPhysicsKeyHandler*)
00067090 t CVPhysicsPackedParser::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00066fc0 t CVPhysicsPackedParser::ParseRagdollAnimatedFriction(ragdollanimatedfriction_t*, IVPhysicsKeyHandler*)
000664f0 t CVPhysicsPackedParser::Finished()
00066670 t CVPhysicsPackedParser::NextBlock()
000666d0 t CVPhysicsPackedParser::SkipBlock()
00066c90 t CVPhysicsPackedParser::CVPhysicsPackedParser(char const*)
00066c90 t CVPhysicsPackedParser::CVPhysicsPackedParser(char const*)
0006a8b0 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
0006a8a0 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
0006a8a0 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
0008ba50 t hk_Ragdoll_Constraint::init_constraint(void const*)
0008cf00 t hk_Ragdoll_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008bef0 t hk_Ragdoll_Constraint::update_friction(float)
0008be40 t hk_Ragdoll_Constraint::update_transforms(hk_Transform const&, hk_Transform const&)
0008c140 t hk_Ragdoll_Constraint::apply_angular_part(hk_PSI_Info&, hk_Ragdoll_Constraint_Work&)
0008d310 t hk_Ragdoll_Constraint::apply_effector_PSI(hk_PSI_Info&)
0008e050 t hk_Ragdoll_Constraint::get_constraint_dof()
0008ba80 t hk_Ragdoll_Constraint::write_to_blueprint(hk_Ragdoll_Constraint_BP*)
0008e040 t hk_Ragdoll_Constraint::get_constraint_type()
0008b6e0 t hk_Ragdoll_Constraint::get_vmq_storage_size()
0008b6f0 t hk_Ragdoll_Constraint::init_ragdoll_constraint(hk_Ragdoll_Constraint_BP const*, hk_Local_Constraint_System*)
0008e5d0 t hk_Ragdoll_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008bf50 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008c050 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008bf50 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008c050 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008e080 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008e060 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008e060 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
001456f0 t IVP_3D_Solver_KK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00145330 t IVP_3D_Solver_PF_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00145550 t IVP_3D_Solver_PK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001299ea t IVP_Active_Value_Hash::object_to_index(IVP_U_Active_Value*)
00131fc0 t IVP_Active_Value_Hash::add_active_value(IVP_U_Active_Value*)
0013203a t IVP_Active_Value_Hash::find_active_value(IVP_U_Active_Value*)
001320b0 t IVP_Active_Value_Hash::remove_active_value(IVP_U_Active_Value*)
00131f58 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
00131f8c t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
00129d8e t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
00129e10 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
00129d14 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
000e3e7e t IVP_Anchor_Check_Dist::init_anchor_check_dist(IVP_Real_Object*, IVP_U_Point*, IVP_Actuator_Check_Dist*)
000e5462 t IVP_Anchor_Check_Dist::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
000e4536 t IVP_Anchor_Check_Dist::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
000e7c4c t IVP_Anchor_Check_Dist::get_type()
000e7c72 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000e7c56 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000e350e t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000e30dc t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000e30c0 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000459c0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_added(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00045980 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_removed(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00045820 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::pset_is_going_to_be_deleted(IVP_U_Set_Active<IVP_Core>*)
00045b70 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000458d0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000458d0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
001279f2 t IVP_Cache_Ledge_Point::get_object_cache()
00127a10 t IVP_Cache_Ledge_Point::remove_reference()
001279e6 t IVP_Cache_Ledge_Point::get_compact_ledge()
00127ae0 t IVP_Cache_Ledge_Point::init_cache_ledge_point(IVP_Real_Object*, IVP_Compact_Ledge const*)
001279fe t IVP_Cache_Ledge_Point::get_core()
00127be0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
00127a26 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
00127b60 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
00127a20 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
000bbd40 t IVP_Compact_Recursive::add_compact_ledge(IVP_Compact_Ledge const*)
000bbdf0 t IVP_Compact_Recursive::build_convex_hull()
000bbdd0 t IVP_Compact_Recursive::add_compact_surface(IVP_Compact_Surface const*)
000bc010 t IVP_Compact_Recursive::set_rekursive_convex_hull()
000bbd80 t IVP_Compact_Recursive::add_compact_ledge_treenode(IVP_Compact_Ledgetree_Node const*)
000bc420 t IVP_Compact_Recursive::compile()
000bbcd0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000bbcd0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000bbd00 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000bbd00 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000ffea2 t IVP_Contact_Point_API::get_vert_force(IVP_Contact_Point*)
000ffe86 t IVP_Contact_Point_API::get_eliminated_energy(IVP_Contact_Point*)
00100ce4 t IVP_Contact_Point_API::get_surface_normal_ws(IVP_Contact_Point*, IVP_U_Float_Point*)
000ffe92 t IVP_Contact_Point_API::reset_eliminated_energy(IVP_Contact_Point*)
00153d50 t IVP_Controller_Motion::set_max_torque(IVP_U_Float_Point const*)
00154270 t IVP_Controller_Motion::set_damp_factor(float)
00154260 t IVP_Controller_Motion::set_force_factor(float)
00154280 t IVP_Controller_Motion::set_torque_factor(float)
00153da0 t IVP_Controller_Motion::set_target_position_ws(IVP_U_Point const*)
001541d0 t IVP_Controller_Motion::get_controller_priority()
00154290 t IVP_Controller_Motion::set_angular_damp_factor(float)
001531f0 t IVP_Controller_Motion::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00153d80 t IVP_Controller_Motion::set_max_translation_force(IVP_U_Float_Point const*)
00153ee0 t IVP_Controller_Motion::set_target_q_world_f_core(IVP_U_Quat const*)
00153e20 t IVP_Controller_Motion::set_target_object_position_ws(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*)
001531b0 t IVP_Controller_Motion::core_is_going_to_be_deleted_event(IVP_Core*)
00153c90 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00153c90 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00153600 t IVP_Controller_Motion::~IVP_Controller_Motion()
00153570 t IVP_Controller_Motion::~IVP_Controller_Motion()
00153570 t IVP_Controller_Motion::~IVP_Controller_Motion()
000fcc5a t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000fcc70 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000fc37c t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000fc3b0 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
0010fe9c t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
0010ff02 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
0010fe40 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
0010fe6e t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
00144da0 t IVP_Mindist_Recursive::is_recursive()
0014a3f0 t IVP_Mindist_Recursive::delete_all_children()
0014a3e0 t IVP_Mindist_Recursive::mindist_rescue_push()
0014a6d0 t IVP_Mindist_Recursive::recheck_recursive_childs(float)
0014adf0 t IVP_Mindist_Recursive::get_spawned_mindist_count()
0014a800 t IVP_Mindist_Recursive::exact_mindist_went_invalid(IVP_Mindist_Manager*)
0014ac00 t IVP_Mindist_Recursive::invalid_mindist_went_exact()
0014adc0 t IVP_Mindist_Recursive::change_spawned_mindist_count(int)
0014ac50 t IVP_Mindist_Recursive::rec_hull_limit_exceeded_event()
0014a640 t IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
0014a960 t IVP_Mindist_Recursive::do_impact()
0014a4a0 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
0014a4a0 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
0014a610 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0014a520 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0014a520 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00120c6a t IVP_Sim_Units_Manager::reset_time(IVP_Time)
00120248 t IVP_Sim_Units_Manager::add_unit_to_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
001202a2 t IVP_Sim_Units_Manager::rem_unit_from_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
00123078 t IVP_Sim_Units_Manager::simulate_sim_units_psi(IVP_Environment*, IVP_U_Vector<IVP_Core>*)
00120268 t IVP_Sim_Units_Manager::add_sim_unit_to_manager(IVP_Simulation_Unit*)
001202c6 t IVP_Sim_Units_Manager::rem_sim_unit_from_manager(IVP_Simulation_Unit*)
0012020c t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
001201d0 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
0011c8e4 t IVP_Statistic_Manager::clear_statistic()
0011ca06 t IVP_Statistic_Manager::output_statistic()
0011c9da t IVP_Statistic_Manager::IVP_Statistic_Manager()
0011c9f0 t IVP_Statistic_Manager::IVP_Statistic_Manager()
000ef706 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000ef68a t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
0015a3ba t IVP_Vector_of_Cores_2::~IVP_Vector_of_Cores_2()
000fb594 t IVP_Vector_of_Objects::reset()
000fb57a t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000fb560 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000579b0 t vehicle_wheelparams_t::GetBaseMap()
001e0918 d vehicle_wheelparams_t::m_DataMap
0007c920 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
0007c920 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
0007db60 t CCountedStringPoolBase<unsigned int>::RestoreFromBuffer(CUtlBuffer&)
0007d0a0 t CCountedStringPoolBase<unsigned short>::RestoreFromBuffer(CUtlBuffer&)
00034410 t compactsurfaceheader_t::GetBaseMap()
001de440 d compactsurfaceheader_t::m_DataMap
00166c00 t CPolyhedron_AllocByNew::Release()
00166c20 t CPolyhedron_AllocByNew::Allocate(unsigned short, unsigned short, unsigned short, unsigned short)
0016a8d0 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
0016a7e0 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
0016a7e0 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
0016a7f0 t CPolyhedron_TempMemory::Release()
0016a8b0 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
0016a800 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
0016a800 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
000407b0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
0003fdd0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
0003fdd0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000e7bc2 t IVP_Actuator_Two_Point::get_actuator_anchor(int)
000e3ee0 t IVP_Actuator_Two_Point::ensure_actuator_in_simulation()
000e4d60 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000e4e98 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000e7026 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000e5780 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000e5858 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
00126812 t IVP_BetterDebugmanager::output_function(IVP_DEBUG_CLASS, char const*)
0012652c t IVP_BetterDebugmanager::is_debug_enabled(IVP_DEBUG_CLASS)
001264f8 t IVP_BetterDebugmanager::enable_debug_output(IVP_DEBUG_CLASS)
00126512 t IVP_BetterDebugmanager::disable_debug_output(IVP_DEBUG_CLASS)
00126840 t IVP_BetterDebugmanager::dprint(IVP_DEBUG_CLASS, char const*, ...)
00126618 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
00126554 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
001267e6 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
001266f8 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
001266dc t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
000db6a4 t IVP_Compact_Poly_Point::set_client_data(void*)
000db686 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
000db668 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
001217c2 t IVP_Controller_Manager::add_controller_to_core(IVP_Controller_Independent*, IVP_Core*)
00120846 t IVP_Controller_Manager::ensure_core_in_simulation(IVP_Core*)
001212c4 t IVP_Controller_Manager::remove_controller_from_core(IVP_Controller_Independent*, IVP_Core*)
00122236 t IVP_Controller_Manager::ensure_controller_in_simulation(IVP_Controller_Dependent*)
001236be t IVP_Controller_Manager::announce_controller_to_environment(IVP_Controller_Dependent*)
00122528 t IVP_Controller_Manager::remove_controller_from_environment(IVP_Controller_Dependent*, IVP_BOOL)
000f5668 t IVP_Controller_Phantom::add_sleeping_object(IVP_Real_Object*)
000f71f4 t IVP_Controller_Phantom::event_object_frozen(IVP_Event_Object*)
000f62c2 t IVP_Controller_Phantom::mindist_left_volume(IVP_Mindist*)
000f56d6 t IVP_Controller_Phantom::add_listener_phantom(IVP_Listener_Phantom*)
000f71ee t IVP_Controller_Phantom::event_object_created(IVP_Event_Object*)
000f542c t IVP_Controller_Phantom::event_object_deleted(IVP_Event_Object*)
000f576e t IVP_Controller_Phantom::event_object_revived(IVP_Event_Object*)
000f54a4 t IVP_Controller_Phantom::fire_event_core_left(IVP_Core*)
000f71d6 t IVP_Controller_Phantom::get_intruding_mindists()
000f5864 t IVP_Controller_Phantom::mindist_entered_volume(IVP_Mindist*)
000f55fa t IVP_Controller_Phantom::remove_sleeping_object(IVP_Real_Object*)
000f5446 t IVP_Controller_Phantom::fire_event_core_entered(IVP_Core*)
000f5380 t IVP_Controller_Phantom::remove_listener_phantom(IVP_Listener_Phantom*)
000f554c t IVP_Controller_Phantom::wake_all_sleeping_objects()
000f5c22 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000f5f72 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000f6650 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000f6a12 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000f6dcc t IVP_Controller_Phantom::~IVP_Controller_Phantom()
00100498 t IVP_Friction_Core_Pair::debug_printf_pair()
000fff66 t IVP_Friction_Core_Pair::number_of_pair_dists()
001002e6 t IVP_Friction_Core_Pair::set_friction_vectors(IVP_U_Float_Point*)
00100c5c t IVP_Friction_Core_Pair::add_fr_dist_obj_pairs(IVP_Contact_Point*)
000fff72 t IVP_Friction_Core_Pair::del_fr_dist_obj_pairs(IVP_Contact_Point*)
001037d2 t IVP_Friction_Core_Pair::destroy_mutual_energy(float)
0010037c t IVP_Friction_Core_Pair::get_average_friction_vector(IVP_U_Float_Point*)
00104acc t IVP_Friction_Core_Pair::debug_read_vector_after_ease()
001049a2 t IVP_Friction_Core_Pair::debug_store_vector_before_ease()
00102ccc t IVP_Friction_Core_Pair::check_all_fr_mindists_to_be_valid(IVP_Friction_System*)
001038fa t IVP_Friction_Core_Pair::remove_energy_gained_by_real_friction()
001002aa t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
0010026e t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
00102866 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
001028ac t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
0011ca80 t IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision*)
0011ca86 t IVP_Listener_Collision::event_post_collision(IVP_Event_Collision*)
0011fb8a t IVP_Listener_Collision::get_enabled_callbacks()
0011ca92 t IVP_Listener_Collision::event_friction_created(IVP_Event_Friction*)
0011ca98 t IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction*)
0011fb96 t IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair*)
0011fb9c t IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
0011ca8c t IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object*)
0011fbc4 t IVP_Listener_Collision::IVP_Listener_Collision(int)
0011fba2 t IVP_Listener_Collision::IVP_Listener_Collision(int)
0011fc3e t IVP_Listener_Collision::~IVP_Listener_Collision()
0011fc02 t IVP_Listener_Collision::~IVP_Listener_Collision()
0011fbe6 t IVP_Listener_Collision::~IVP_Listener_Collision()
001284e8 t IVP_PerformanceCounter::IVP_PerformanceCounter()
001284cc t IVP_PerformanceCounter::IVP_PerformanceCounter()
0012853c t IVP_PerformanceCounter::~IVP_PerformanceCounter()
00128520 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
00128504 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
000c1550 t IVP_Rot_Inertia_Solver::find_center_given_xyz(IVP_U_BigVector<IVP_Compact_Ledge>*, int, int, int, IVP_U_Matrix const*, float*, float*, float*)
000c1700 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
000c1680 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia_fast(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
000e3f90 t IVP_Template_Two_Point::IVP_Template_Two_Point()
000e3fac t IVP_Template_Two_Point::IVP_Template_Two_Point()
00057d60 t vehicle_engineparams_t::GetBaseMap()
001e08b8 d vehicle_engineparams_t::m_DataMap
0003ff60 t CEmptyCollisionListener::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
0003ff30 t CEmptyCollisionListener::PreCollision(vcollisionevent_t*)
0003ff90 t CEmptyCollisionListener::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
0003ff40 t CEmptyCollisionListener::PostCollision(vcollisionevent_t*)
0003ff80 t CEmptyCollisionListener::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
0003ffa0 t CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
0003ffb0 t CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
0003ffc0 t CEmptyCollisionListener::PostSimulationFrame()
0003ff70 t CEmptyCollisionListener::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
0003ff50 t CEmptyCollisionListener::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
0005b3d0 t CPhysCollideVirtualMesh::BuildLedges()
0005c1d0 t CPhysCollideVirtualMesh::SetMassCenter(Vector const&)
0005b9e0 t CPhysCollideVirtualMesh::BuildBoundingLedge()
0005b890 t CPhysCollideVirtualMesh::CreateMeshBoundingHull(virtualmeshlist_t const&)
0005c760 t CPhysCollideVirtualMesh::GetAllLedgesWithinRadius(IVP_U_Point const*, float, IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_Compact_Ledge const*)
0005b5e0 t CPhysCollideVirtualMesh::CreateBoundingSurfaceFromRange(virtualmeshlist_t const&, int, int)
0005b4f0 t CPhysCollideVirtualMesh::AddRef()
0005b2e0 t CPhysCollideVirtualMesh::Release()
0005af30 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
0005aee0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
0005aee0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00036570 t CPhysicsConstraintGroup::GetErrorParams(constraint_groupparams_t*)
00036310 t CPhysicsConstraintGroup::IsInErrorState()
00036350 t CPhysicsConstraintGroup::SetErrorParams(constraint_groupparams_t const&)
00036330 t CPhysicsConstraintGroup::ClearErrorState()
00036530 t CPhysicsConstraintGroup::SolvePenetration(IPhysicsObject*, IPhysicsObject*)
00036480 t CPhysicsConstraintGroup::Activate()
00036e90 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00036e90 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
000363e0 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00036380 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00036380 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00045260 t CPhysicsFluidController::SetGameData(void*)
000454a0 t CPhysicsFluidController::GetIVPObject()
00045450 t CPhysicsFluidController::WakeAllSleepingObjects()
00045470 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00045470 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00045430 t CPhysicsFluidController::~CPhysicsFluidController()
00045400 t CPhysicsFluidController::~CPhysicsFluidController()
00045400 t CPhysicsFluidController::~CPhysicsFluidController()
0004dc50 t CPredictedPhysicsObject::AddVelocity(Vector const*, Vector const*)
0004b7b0 t CPredictedPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
0004d920 t CPredictedPhysicsObject::SetVelocity(Vector const*, Vector const*)
0004ec00 t CPredictedPhysicsObject::PreSimulation(bool)
0004ecf0 t CPredictedPhysicsObject::PostSimulation(float, bool)
0004ec30 t CPredictedPhysicsObject::PreAnyController(float, bool)
0004f2a0 t CPredictedPhysicsObject::ResetErrorDeltas()
0004ecc0 t CPredictedPhysicsObject::PostAnyController(float, bool)
0004e910 t CPredictedPhysicsObject::PullDeltasForward(vphysics_save_cphysicsobject_t*, vphysics_save_cphysicsobject_t const*, float)
0004b950 t CPredictedPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
0004ac70 t CPredictedPhysicsObject::SetErrorDelta_Position(Vector const&)
0004ace0 t CPredictedPhysicsObject::SetErrorDelta_Velocity(Vector const&)
0004dad0 t CPredictedPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
0004f590 t CPredictedPhysicsObject::OnPredictionCommandChanged(int, bool)
0004f4c0 t CPredictedPhysicsObject::DoneReferencingPreviousCommands(int)
0004e870 t CPredictedPhysicsObject::CPredictedPhysicsObject()
0004e870 t CPredictedPhysicsObject::CPredictedPhysicsObject()
00050d50 t CPredictedPhysicsObject::~CPredictedPhysicsObject()
00050cc0 t CPredictedPhysicsObject::~CPredictedPhysicsObject()
00050cc0 t CPredictedPhysicsObject::~CPredictedPhysicsObject()
0002b810 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
0002b7f0 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
0002b7f0 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
00063090 t CTraceSolverSweptObject::SweepLedgeTree(IVP_Compact_Ledgetree_Node const*)
00063c20 t CTraceSolverSweptObject::DoSweep()
0005e6c0 t CTraceSolverSweptObject::InitOSRay()
0005e600 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, float, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
0005e600 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, float, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
0007a8e0 t CUtlFilenameSymbolTable::SpewStrings()
0007a5d0 t CUtlFilenameSymbolTable::FindFileName(char const*)
0007a9f0 t CUtlFilenameSymbolTable::SaveToBuffer(CUtlBuffer&)
0007bbd0 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
0007c360 t CUtlFilenameSymbolTable::RestoreFromBuffer(CUtlBuffer&)
0007a800 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
0007c1c0 t CUtlFilenameSymbolTable::RemoveAll()
0002dc80 t CUtlVectorFixedGrowable<int, 64u>::~CUtlVectorFixedGrowable()
0002dc80 t CUtlVectorFixedGrowable<int, 64u>::~CUtlVectorFixedGrowable()
0006b110 t CVPhysPtrSaveRestoreOps::PreRestore()
0006b1c0 t CVPhysPtrSaveRestoreOps::PostRestore()
0006afe0 t CVPhysPtrSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
0006b120 t CVPhysPtrSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
0006b100 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
0006b100 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
00081930 t hk_Breakable_Constraint::init_constraint(void const*)
00081bb0 t hk_Breakable_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00081b70 t hk_Breakable_Constraint::FireEventIfBroken()
00082180 t hk_Breakable_Constraint::apply_effector_PSI(hk_PSI_Info&)
000821b0 t hk_Breakable_Constraint::get_constraint_dof()
00081b40 t hk_Breakable_Constraint::write_to_blueprint(hk_Breakable_Constraint_BP*)
00082190 t hk_Breakable_Constraint::get_constraint_type()
00081960 t hk_Breakable_Constraint::get_vmq_storage_size()
00081b10 t hk_Breakable_Constraint::init_breakable_constraint(hk_Breakable_Constraint_BP const*)
00082240 t hk_Breakable_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00081a10 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00081a90 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
00081a10 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00081a90 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
000819d0 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00081980 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00081980 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00088350 t hk_Prismatic_Constraint::set_limits(float, float)
000883c0 t hk_Prismatic_Constraint::set_friction(float)
000880d0 t hk_Prismatic_Constraint::init_constraint(void const*)
00086e20 t hk_Prismatic_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
000882d0 t hk_Prismatic_Constraint::apply_effector_PSI(hk_PSI_Info&)
00088430 t hk_Prismatic_Constraint::get_constraint_dof()
00087bf0 t hk_Prismatic_Constraint::reset_linear_limit()
00088100 t hk_Prismatic_Constraint::write_to_blueprint(hk_Prismatic_BP*)
00088420 t hk_Prismatic_Constraint::get_constraint_type()
00086e10 t hk_Prismatic_Constraint::get_vmq_storage_size()
00087f20 t hk_Prismatic_Constraint::init_prismatic_constraint(hk_Prismatic_BP const*, hk_Local_Constraint_System*)
000884a0 t hk_Prismatic_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
000883f0 t hk_Prismatic_Constraint::set_motor(float, float)
00088180 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088230 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088180 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088230 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088460 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00088440 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00088440 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00080d10 t hk_Rigid_Body_Binary_EF::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
00092380 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
00092380 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
0003bd10 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003bbe0 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003bbe0 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
000458b0 t IPhysicsFluidController::~IPhysicsFluidController()
00045800 t IPhysicsFluidController::~IPhysicsFluidController()
00045800 t IPhysicsFluidController::~IPhysicsFluidController()
00050b40 t IPredictedPhysicsObject::~IPredictedPhysicsObject()
00050960 t IPredictedPhysicsObject::~IPredictedPhysicsObject()
00050960 t IPredictedPhysicsObject::~IPredictedPhysicsObject()
000e3014 t IVP_Actuator_Check_Dist::fire_check_dist_event(IVP_BOOL)
000e5208 t IVP_Actuator_Check_Dist::hull_limit_exceeded_event()
000e3070 t IVP_Actuator_Check_Dist::fire_check_dist_is_going_to_be_deleted_event()
000e544a t IVP_Actuator_Check_Dist::set_range(float)
000e5478 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000e55fc t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000e4444 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000e456a t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000e7bd8 t IVP_Actuator_Four_Point::get_actuator_anchor(int)
000e4a18 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000e4b6e t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000e6c8a t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000e6d98 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000e6e9e t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000e34ca t IVP_Actuator_Stabilizer::set_stabi_constant(float)
000e7c8e t IVP_Actuator_Stabilizer::get_controller_name()
000e31c4 t IVP_Actuator_Stabilizer::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e4cc4 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000e4d12 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000e6fa4 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000e6fda t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000e7000 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000e820c t IVP_Actuator_Suspension::set_max_body_force(float)
000e9218 t IVP_Actuator_Suspension::get_controller_name()
000e7e00 t IVP_Actuator_Suspension::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000e824c t IVP_Actuator_Suspension::set_spring_damp_compression(float)
000e85de t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000e863c t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000e8b72 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000e8bf6 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000e8c72 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
00141570 t IVP_Collision_Delegator::get_spawned_mindist_count()
00141560 t IVP_Collision_Delegator::change_spawned_mindist_count(int)
00141600 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
00141550 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
00141550 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
000ee5a4 t IVP_Controller_Buoyancy::apply_dampening(IVP_Real_Object*, float, float, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000ef85c t IVP_Controller_Buoyancy::get_controller_name()
000edff6 t IVP_Controller_Buoyancy::use_buoyancy_solver(IVP_Buoyancy_Input const*, IVP_Template_Buoyancy const*, IVP_Buoyancy_Output*, IVP_U_Float_Point const*, int)
000ede82 t IVP_Controller_Buoyancy::apply_buoyancy_impulse(IVP_Real_Object*, IVP_Template_Buoyancy*, float, float, IVP_U_Float_Point*)
000ef852 t IVP_Controller_Buoyancy::get_controller_priority()
000ee910 t IVP_Controller_Buoyancy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ee100 t IVP_Controller_Buoyancy::calculate_future_extrapolation(IVP_Controller_Buoyancy::Attacher_Interpolator::Last_IO const*, IVP_MI_Vector const*, IVP_MI_Vector const*, float, IVP_Time, IVP_MI_Vector*, IVP_MI_Vector*)
000ef84a t IVP_Controller_Buoyancy::get_minimum_simulation_frequency()
000ef832 t IVP_Controller_Buoyancy::core_is_going_to_be_deleted_event(IVP_Core*)
000ee1fa t IVP_Controller_Buoyancy::provide_new_input_solution_combination(IVP_Controller_Buoyancy::Attacher_Interpolator*, IVP_Template_Buoyancy*, IVP_MI_Vector const*, IVP_MI_Vector const*, float, IVP_Time)
000edc82 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000edd82 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000edb0c t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000edb8e t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000edc08 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000fdf86 t IVP_Environment_Manager::create_environment(IVP_Application_Environment*, char const*, unsigned int)
000fb96e t IVP_Environment_Manager::get_environment_manager()
001e83b8 b IVP_Environment_Manager::static_environment_manager
000fb94c t IVP_Environment_Manager::IVP_Environment_Manager()
000fb92a t IVP_Environment_Manager::IVP_Environment_Manager()
000fc3e4 t IVP_Environment_Manager::~IVP_Environment_Manager()
000fc42a t IVP_Environment_Manager::~IVP_Environment_Manager()
0010567c t IVP_Friction_Sys_Energy::get_controller_name()
00105672 t IVP_Friction_Sys_Energy::get_controller_priority()
00103a16 t IVP_Friction_Sys_Energy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0010058c t IVP_Friction_Sys_Energy::core_is_going_to_be_deleted_event(IVP_Core*)
001056f0 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
00105692 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
001056b6 t IVP_Friction_Sys_Static::get_controller_name()
001056ae t IVP_Friction_Sys_Static::get_controller_priority()
0010543c t IVP_Friction_Sys_Static::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00102c5a t IVP_Friction_Sys_Static::do_simulation_single_friction(IVP_Event_Sim*)
001056e8 t IVP_Friction_Sys_Static::get_minimum_simulation_frequency()
00102b96 t IVP_Friction_Sys_Static::core_is_going_to_be_deleted_event(IVP_Core*)
0010571c t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
001056cc t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
00045890 t IVP_Listener_Set_Active<IVP_Core>::~IVP_Listener_Set_Active()
00045810 t IVP_Listener_Set_Active<IVP_Core>::~IVP_Listener_Set_Active()
00045810 t IVP_Listener_Set_Active<IVP_Core>::~IVP_Listener_Set_Active()
000e1750 t IVP_Ray_Solver_Min_Hash::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, float, IVP_U_Point*)
000e2a34 t IVP_Ray_Solver_Min_Hash::get_result_min_hash()
000e2d88 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000e2e60 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000e2b34 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000e2b84 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000e2bcc t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
001544b0 t IVP_SurfaceManager_Ball::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00154510 t IVP_SurfaceManager_Ball::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00154440 t IVP_SurfaceManager_Ball::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
001543e0 t IVP_SurfaceManager_Ball::get_type()
00154590 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
001543f0 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
001543f0 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
000eb98e t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000eba6e t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000e3fc8 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000e3fde t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000f3de0 t IVP_Template_Constraint::sort_coordinates(IVP_Template_Constraint const&)
000f3c20 t IVP_Template_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
000f5274 t IVP_Template_Constraint::set_constraint_ws(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000f3c36 t IVP_Template_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
000f4f9c t IVP_Template_Constraint::set_constraint_Ros(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000f3c4c t IVP_Template_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
000f3ae0 t IVP_Template_Constraint::set_attached_object(IVP_Real_Object*)
000f3b44 t IVP_Template_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
000f3af2 t IVP_Template_Constraint::set_fixing_point_Ros(IVP_U_Point const*)
000f3ad2 t IVP_Template_Constraint::set_reference_object(IVP_Real_Object*)
000f3b5a t IVP_Template_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
000f3bec t IVP_Template_Constraint::set_rotation_axes_Ros(IVP_U_Matrix3 const*)
000f3b70 t IVP_Template_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
000f3ca8 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000f3c76 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000f3b16 t IVP_Template_Constraint::set_translation_axes_Ros(IVP_U_Matrix3 const*)
000f3d20 t IVP_Template_Constraint::set_constraint_is_relaxed()
000f3bcc t IVP_Template_Constraint::set_max_translation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000f3b9a t IVP_Template_Constraint::set_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000f3cec t IVP_Template_Constraint::set_attached_fixing_point_Aos(IVP_U_Point const*)
000f3ac0 t IVP_Template_Constraint::set_stiffness_for_limited_axis(float)
000f3cc8 t IVP_Template_Constraint::set_attached_translation_axes_Aos(IVP_U_Matrix3 const*)
000f3b34 t IVP_Template_Constraint::set_translation_axes_as_object_space()
000f3c0e t IVP_Template_Constraint::set_rotation_axes_as_translation_axes()
000f4cc0 t IVP_Template_Constraint::IVP_Template_Constraint()
000f4e2e t IVP_Template_Constraint::IVP_Template_Constraint()
000e3f3c t IVP_Template_Four_Point::IVP_Template_Four_Point()
000e3f66 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000e3ff4 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000e4030 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000e8afe t IVP_Template_Suspension::IVP_Template_Suspension()
000e8b38 t IVP_Template_Suspension::IVP_Template_Suspension()
00129ef2 t IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0012934e t IVP_U_Active_Test_Range::print()
0012c7d2 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012c9a8 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0012dd3a t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0012e088 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0012e3c8 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
000ff950 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ff936 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ff91c t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
000ff902 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
00128652 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
00128636 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
00045a30 t CLiquidSurfaceDescriptor::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
00048a40 t CPhysicsMotionController::GetObjects(IPhysicsObject**)
000494b0 t CPhysicsMotionController::RemoveCore(IVP_Core*)
00048a80 t CPhysicsMotionController::IsPredicted()
00048ad0 t CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
00048cc0 t CPhysicsMotionController::WakeObjects()
00049ad0 t CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
00049550 t CPhysicsMotionController::ClearObjects()
00048a20 t CPhysicsMotionController::CountObjects()
00049520 t CPhysicsMotionController::DetachObject(IPhysicsObject*)
00048b20 t CPhysicsMotionController::SetEventHandler(IMotionEvent*)
00049b90 t CPhysicsMotionController::WriteToTemplate(vphysics_save_motioncontroller_t&)
00049320 t CPhysicsMotionController::InitFromTemplate(vphysics_save_motioncontroller_t const&)
00048a00 t CPhysicsMotionController::get_controller_name()
00048aa0 t CPhysicsMotionController::Prediction_Resimulate(float)
00048a90 t CPhysicsMotionController::SetCallOrderRegistrar(CPredictableControllerSimulationOrderTracker*)
00048ab0 t CPhysicsMotionController::get_controller_priority()
00048d00 t CPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00049590 t CPhysicsMotionController::core_is_going_to_be_deleted_event(IVP_Core*)
000492d0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
000492d0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
00049850 t CPhysicsMotionController::~CPhysicsMotionController()
00049720 t CPhysicsMotionController::~CPhysicsMotionController()
00049720 t CPhysicsMotionController::~CPhysicsMotionController()
00046340 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
00046330 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
00046330 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
00049f10 t IPhysicsMotionController::~IPhysicsMotionController()
00049f00 t IPhysicsMotionController::~IPhysicsMotionController()
00049f00 t IPhysicsMotionController::~IPhysicsMotionController()
000560f0 t IPhysicsPlayerController::~IPhysicsPlayerController()
00056080 t IPhysicsPlayerController::~IPhysicsPlayerController()
00056080 t IPhysicsPlayerController::~IPhysicsPlayerController()
00056110 t IPhysicsShadowController::~IPhysicsShadowController()
00056070 t IPhysicsShadowController::~IPhysicsShadowController()
00056070 t IPhysicsShadowController::~IPhysicsShadowController()
001279cc t IVP_Cache_Object_Manager::cache_object_at(int)
00127662 t IVP_Cache_Object_Manager::get_cache_object(IVP_Real_Object*)
00127258 t IVP_Cache_Object_Manager::invalid_cache_object(IVP_Real_Object*)
0012782c t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00127868 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00127718 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
001277a2 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
00155210 t IVP_Calc_Next_PSI_Solver::set_transformation(IVP_Core*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
001547d0 t IVP_Calc_Next_PSI_Solver::calc_next_PSI_matrix(IVP_Core*, IVP_Event_Sim*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00154650 t IVP_Calc_Next_PSI_Solver::calc_psi_rotation_axis(IVP_Core*, IVP_U_Quat const*)
00155710 t IVP_Calc_Next_PSI_Solver::commit_one_hull_manager(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001557e0 t IVP_Calc_Next_PSI_Solver::commit_all_hull_managers(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00155610 t IVP_Calc_Next_PSI_Solver::commit_all_calc_next_PSI_matrix(IVP_Environment*, IVP_U_Vector<IVP_Core>*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00154610 t IVP_Calc_Next_PSI_Solver::get_longest_time_step_dependent_on_rot(IVP_Core*)
000de3b2 t IVP_Compact_Ledge_Solver::calc_qlen_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000dc9d0 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Surface const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000dc726 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Ledgetree_Node const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000dbaa0 t IVP_Compact_Ledge_Solver::calc_bounding_box(IVP_Compact_Ledge const*, IVP_U_Point*, IVP_U_Point*)
000dc1ce t IVP_Compact_Ledge_Solver::calc_hesse_object(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Hesse*)
000dc390 t IVP_Compact_Ledge_Solver::calc_pos_other_space(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000ddab6 t IVP_Compact_Ledge_Solver::calc_qlen_PF_F_space(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, IVP_U_Point const*)
000de170 t IVP_Compact_Ledge_Solver::calc_qlen_PK_K_space(IVP_U_Point const*, IVP_Compact_Ledge const*, IVP_Compact_Edge const*)
000dc110 t IVP_Compact_Ledge_Solver::calc_qlen_PP_P_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000dc192 t IVP_Compact_Ledge_Solver::give_world_coords_AT(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000dd2a6 t IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)
001490a0 t IVP_Compact_Ledge_Solver::minimize_on_other_side(IVP_Compact_Edge const*, IVP_U_Point const*)
000dbd6c t IVP_Compact_Ledge_Solver::transform_pos_other_space(IVP_U_Float_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000dbcd0 t IVP_Compact_Ledge_Solver::transform_vec_other_space(IVP_U_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000dcac6 t IVP_Compact_Ledge_Solver::calc_geom_center_and_radius(IVP_Compact_Ledge const*, IVP_U_Point*, float*)
000dc446 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Ledge const*, IVP_U_Point const*, float*, float*)
000dc9e6 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Surface const*, IVP_U_Point const*, float*, float*)
000dbe1c t IVP_Compact_Ledge_Solver::calc_unscaled_s_val_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_S_Result*)
000dbede t IVP_Compact_Ledge_Solver::calc_unscaled_qr_vals_F_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_QR_Result*)
000dc030 t IVP_Compact_Ledge_Solver::quad_dist_edge_to_point_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000dc244 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Point*)
000dc2ea t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Float_Point*)
00031cb0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00031ca0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00031ca0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
001474d0 t IVP_Mindist_Event_Solver::next_event_BB(IVP_Mindist_Event_Solver*)
001487d0 t IVP_Mindist_Event_Solver::next_event_B_POLY(IVP_Mindist_Event_Solver*)
001472b0 t IVP_Mindist_Event_Solver::calc_next_event_BB(IVP_Cache_Object*, IVP_Cache_Object*)
00145e60 t IVP_Mindist_Event_Solver::calc_next_event_BF(IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00148210 t IVP_Mindist_Event_Solver::calc_next_event_BK(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00146de0 t IVP_Mindist_Event_Solver::calc_next_event_BP(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00146070 t IVP_Mindist_Event_Solver::calc_next_event_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001458e0 t IVP_Mindist_Event_Solver::calc_next_event_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001475e0 t IVP_Mindist_Event_Solver::calc_next_event_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001467c0 t IVP_Mindist_Event_Solver::calc_next_event_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001eae60 b IVP_Mindist_Event_Solver::mim_function_table
001450a0 t IVP_Mindist_Event_Solver::next_event_illegal(IVP_Mindist_Event_Solver*)
00148a00 t IVP_Mindist_Event_Solver::init_mim_function_table()
00147f00 t IVP_Mindist_Event_Solver::next_event_default_poly_poly(IVP_Mindist_Event_Solver*)
000bf100 t IVP_Object_Polygon_Tetra::p_link_edge(IVP_Tri_Edge*, IVP_Tri_Edge*)
000bf0a0 t IVP_Object_Polygon_Tetra::hide_triangle(IVP_Triangle*)
000beb90 t IVP_Object_Polygon_Tetra::rate_tri_edge(IVP_Tri_Edge*)
000beab0 t IVP_Object_Polygon_Tetra::free_triangles()
000bf390 t IVP_Object_Polygon_Tetra::make_triangles()
000c0360 t IVP_Object_Polygon_Tetra::pop_concav_edge(IVP_Tri_Edge*)
000bee40 t IVP_Object_Polygon_Tetra::calc_concavities()
000c0d10 t IVP_Object_Polygon_Tetra::insert_pierce_info()
000bebe0 t IVP_Object_Polygon_Tetra::add_edge_to_min_list(IVP_Tri_Edge*, P_HASH_CLASS, float)
000bfb60 t IVP_Object_Polygon_Tetra::calc_extrusion_point(IVP_Tri_Edge const*, IVP_U_Point*)
000bf9d0 t IVP_Object_Polygon_Tetra::link_triangle_couple(IVP_Triangle*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*)
000bfda0 t IVP_Object_Polygon_Tetra::pop_problematic_edge(IVP_Tri_Edge*)
000be520 t IVP_Object_Polygon_Tetra::final_convexify_check()
000c0310 t IVP_Object_Polygon_Tetra::link_existing_pop_edge(IVP_Tri_Edge*)
000bf240 t IVP_Object_Polygon_Tetra::get_an_edge_with_points(IVP_Poly_Point*, IVP_Poly_Point*)
000bf850 t IVP_Object_Polygon_Tetra::generate_double_triangle(IVP_Poly_Point*, IVP_Poly_Point*, IVP_Poly_Point*)
000beca0 t IVP_Object_Polygon_Tetra::move_edge_to_normal_hash(IVP_Tri_Edge*)
000bed40 t IVP_Object_Polygon_Tetra::move_edge_to_epsilon_hash(IVP_Tri_Edge*)
000befd0 t IVP_Object_Polygon_Tetra::move_edge_to_problem_hash(IVP_Tri_Edge*)
000bec30 t IVP_Object_Polygon_Tetra::remove_edge_from_min_list(IVP_Tri_Edge*)
000bede0 t IVP_Object_Polygon_Tetra::check_concavity_and_manage(IVP_Tri_Edge*, P_CONVEXIFY_STATE)
000c0280 t IVP_Object_Polygon_Tetra::record_intruding_convex_edges(IVP_Intrusion_Status*)
000be670 t IVP_Object_Polygon_Tetra::check_konsistency_of_triangles()
000bf980 t IVP_Object_Polygon_Tetra::make_double_triangle_permanent(IVP_Triangle*)
000bf280 t IVP_Object_Polygon_Tetra::add_edge_into_point_to_edge_hash(IVP_Tri_Edge*)
000bef30 t IVP_Object_Polygon_Tetra::move_edge_to_convex_intrude_hash(IVP_Tri_Edge*)
000c07c0 t IVP_Object_Polygon_Tetra::convexify()
000be3c0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000be3c0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000beb40 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
000beb40 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
00124f3e t IVP_Solver_Core_Reaction::init_rot_ws(IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
001249ec t IVP_Solver_Core_Reaction::init_trans_ws(IVP_U_Point const*, IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
00124998 t IVP_Solver_Core_Reaction::invert_3x3_matrix()
00124490 t IVP_Solver_Core_Reaction::exert_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001242de t IVP_Solver_Core_Reaction::exert_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00123fc8 t IVP_Solver_Core_Reaction::exert_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001248a2 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00124772 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001245c8 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
0012528a t IVP_Solver_Core_Reaction::init_reaction_solver_rotation_ws(IVP_Core*, IVP_Core*, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
00124e50 t IVP_Solver_Core_Reaction::init_reaction_solver_translation_ws(IVP_Core*, IVP_Core*, IVP_U_Point&, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
001287f0 t IVP_Template_Real_Object::IVP_Template_Real_Object()
00128838 t IVP_Template_Real_Object::IVP_Template_Real_Object()
00128880 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
001287be t IVP_Template_Real_Object::~IVP_Template_Real_Object()
00131e48 t IVP_U_Active_Int_Delayed::~IVP_U_Active_Int_Delayed()
00131d6c t IVP_U_Active_Int_Delayed::~IVP_U_Active_Int_Delayed()
00131d50 t IVP_U_Active_Int_Delayed::~IVP_U_Active_Int_Delayed()
0012868a t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
0012866e t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
00145060 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
00145060 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
00057c90 t vehicle_steeringparams_t::GetBaseMap()
001e08d0 d vehicle_steeringparams_t::m_DataMap
000821d0 t BreakableConstraintHelper::~BreakableConstraintHelper()
000821d0 t BreakableConstraintHelper::~BreakableConstraintHelper()
00040350 t CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
000403e0 t CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&)
000402d0 t CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00040ca0 t CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision*)
000402b0 t CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
0003ffd0 t CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision*)
00040070 t CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction*)
000401b0 t CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction*)
00040290 t CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
0003f200 t CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair*)
0003f140 t CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00040060 t CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object*)
000403d0 t CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0003d430 t CPhysicsListenerCollision::CPhysicsListenerCollision()
0003d430 t CPhysicsListenerCollision::CPhysicsListenerCollision()
00042050 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00042140 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00042140 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00080790 t hk_Ball_Socket_Constraint::init_constraint(void const*)
000807e0 t hk_Ball_Socket_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00080c40 t hk_Ball_Socket_Constraint::apply_effector_PSI(hk_PSI_Info&)
00080ca0 t hk_Ball_Socket_Constraint::get_constraint_dof()
00080c00 t hk_Ball_Socket_Constraint::write_to_blueprint(hk_Ball_Socket_BP*)
00080c90 t hk_Ball_Socket_Constraint::get_constraint_type()
000807d0 t hk_Ball_Socket_Constraint::get_vmq_storage_size()
00080d90 t hk_Ball_Socket_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00080bc0 t hk_Ball_Socket_Constraint::init_ball_socket_constraint(hk_Ball_Socket_BP const*)
00080ac0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00080b40 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00080ac0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00080b40 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00080cd0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
00080cb0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
00080cb0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0005ad00 t IPhysicsVehicleController::~IPhysicsVehicleController()
0005ac20 t IPhysicsVehicleController::~IPhysicsVehicleController()
0005ac20 t IPhysicsVehicleController::~IPhysicsVehicleController()
00145660 t IVP_3D_Solver_KK_PARALLEL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000e4666 t IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
000e5f60 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000e603e t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000e6ace t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000e6b6e t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000e6bfc t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000ed17c t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000ed242 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000ebb68 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000ebb50 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000ed9fe t IVP_Constraint_Solver_Car::get_controller_name()
000ed308 t IVP_Constraint_Solver_Car::init_constraint_system(IVP_Environment*, IVP_Real_Object*, IVP_U_Vector<IVP_Real_Object>&, IVP_U_Vector<IVP_U_Float_Point>&)
000eda2a t IVP_Constraint_Solver_Car::get_controller_priority()
000eca02 t IVP_Constraint_Solver_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ed9f2 t IVP_Constraint_Solver_Car::get_associated_controlled_cores()
000eda14 t IVP_Constraint_Solver_Car::get_minimum_simulation_frequency()
000ebb80 t IVP_Constraint_Solver_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000ec74e t IVP_Constraint_Solver_Car::do_simulation_controller_rotation(IVP_Event_Sim*, IVP_Core*, IVP_U_Matrix const*)
000ed020 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000ed0ce t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000ed5e8 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000ed746 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000ed89c t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000da6cc t IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter*)
000da34e t IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter*)
000da4d4 t IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment*)
000da3fa t IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000da4a0 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000da46c t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000dac2a t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000da666 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000dabc4 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
0011ceb0 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
0011cef6 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
0012a9d4 t IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
0012948a t IVP_U_Active_Add_Multiple::print()
0012b742 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, float)
0012b8ce t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, float)
00130390 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00130610 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00130878 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00131e74 t IVP_U_Active_Int_Listener::~IVP_U_Active_Int_Listener()
00131d34 t IVP_U_Active_Int_Listener::~IVP_U_Active_Int_Listener()
00131d18 t IVP_U_Active_Int_Listener::~IVP_U_Active_Int_Listener()
00129e90 t IVP_U_Active_Terminal_Int::update_int()
00129288 t IVP_U_Active_Terminal_Int::print()
00129140 t IVP_U_Active_Terminal_Int::set_int(int, IVP_BOOL)
00129c2c t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
00129ca0 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
0013214a t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001321e6 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0013ab7e t IVP_U_Min_Hash_Enumerator::get_next_element()
0013abc8 t IVP_U_Min_Hash_Enumerator::get_next_element_lt(float)
0013ab62 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
0013ab46 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
0013b3e4 t IVP_U_Min_List_Enumerator::get_next_element()
0013b434 t IVP_U_Min_List_Enumerator::get_next_element_lt(float)
0013b40c t IVP_U_Min_List_Enumerator::get_next_element_header()
0013b3d0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0013b3bc t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0009e386 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
0009e6a8 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
000577c0 t vehicle_operatingparams_t::GetBaseMap()
001e0948 d vehicle_operatingparams_t::m_DataMap
00034510 t CPhysCollideCompactSurface::SetLedgeIndex(IVP_Compact_Ledgetree_Node const*, IVP_Compact_Ledge*, int)
00031dd0 t CPhysCollideCompactSurface::SetMassCenter(Vector const&)
00034e00 t CPhysCollideCompactSurface::InitCollideMap()
00031e40 t CPhysCollideCompactSurface::SetOrthographicAreas(Vector const&)
00033c00 t CPhysCollideCompactSurface::ComputeOrthographicAreas(float)
00035140 t CPhysCollideCompactSurface::Init(char const*, unsigned int, int, bool)
00034f00 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
000351e0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00035250 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00034f00 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
000351e0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00035250 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
000340e0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034080 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034080 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
000405a0 t CPhysicsListenerConstraint::event_constraint_broken(IVP_Constraint*)
00040a90 t CPhysicsListenerConstraint::event_constraint_broken(hk_Breakable_Constraint*)
00051390 t CPredictedPlayerController::IsPredicted()
00051310 t CPredictedPlayerController::GetLastImpulse(Vector*)
00051ce0 t CPredictedPlayerController::GetShadowPosition(Vector*, QAngle*)
00051910 t CPredictedPlayerController::GetShadowVelocity(Vector*)
00052a40 t CPredictedPlayerController::TryTeleportObject()
00052b20 t CPredictedPlayerController::Prediction_Resimulate(float)
000512c0 t CPredictedPlayerController::SetCallOrderRegistrar(CPredictableControllerSimulationOrderTracker*)
00055230 t CPredictedPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000553a0 t CPredictedPlayerController::OnPredictionCommandChanged(int, bool)
00054900 t CPredictedPlayerController::DoneReferencingPreviousCommands(int)
000512f0 t CPredictedPlayerController::Jump()
00051c30 t CPredictedPlayerController::StepUp(float)
000531a0 t CPredictedPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00051a90 t CPredictedPlayerController::MaxSpeed(Vector const&)
00053160 t CPredictedPlayerController::SetGround(CPhysicsObject*)
000525d0 t CPredictedPlayerController::SetObject(IPhysicsObject*)
00055e70 t CPredictedPlayerController::CPredictedPlayerController(CPhysicsObject*)
00055e70 t CPredictedPlayerController::CPredictedPlayerController(CPhysicsObject*)
00056230 t CPredictedPlayerController::~CPredictedPlayerController()
00056370 t CPredictedPlayerController::~CPredictedPlayerController()
00056370 t CPredictedPlayerController::~CPredictedPlayerController()
0002c9a0 t CVPhysicsVirtualMeshWriter::LedgeCanBePacked(IVP_Compact_Ledge const*, virtualmeshlist_t const&)
0002c700 t CVPhysicsVirtualMeshWriter::DestroyPackedHull(virtualmeshhull_t*)
0002c720 t CVPhysicsVirtualMeshWriter::UnpackLedgeListFromHull(unsigned char*, virtualmeshhull_t*, IVP_Compact_Poly_Point*)
0002d500 t CVPhysicsVirtualMeshWriter::ConvertPolyhedronToLedge(CPolyhedron const*)
0002c5f0 t CVPhysicsVirtualMeshWriter::InitTwoSidedTriangleLege(triangleledge_t*, IVP_Compact_Poly_Point const*, int, int, int, int)
0002d340 t CVPhysicsVirtualMeshWriter::CreatePackedHullFromLedges(virtualmeshlist_t const&, IVP_Compact_Ledge const**, int)
0002c300 t CVPhysicsVirtualMeshWriter::UnpackCompactLedgeFromHull(IVP_Compact_Ledge*, int, IVP_Compact_Poly_Point const*, virtualmeshhull_t const*, int, bool)
0007f890 t hk_Local_Constraint_System::deactivate()
0007fc10 t hk_Local_Constraint_System::get_epsilon()
0007f8d0 t hk_Local_Constraint_System::add_constraint(hk_Constraint*, int)
0007fe10 t hk_Local_Constraint_System::sort_constraints()
0007fb50 t hk_Local_Constraint_System::solve_penetration(IVP_Real_Object*, IVP_Real_Object*)
00080030 t hk_Local_Constraint_System::apply_effector_PSI(hk_PSI_Info&)
0007f720 t hk_Local_Constraint_System::write_to_blueprint(hk_Local_Constraint_System_BP*)
0007fa20 t hk_Local_Constraint_System::deactivate_silently()
0007f760 t hk_Local_Constraint_System::recalc_storage_size()
0007fc40 t hk_Local_Constraint_System::report_square_error(float __vector(4))
0007fc20 t hk_Local_Constraint_System::report_square_error(float)
0007fc40 t hk_Local_Constraint_System::report_square_error(float __vector)
0007f5b0 t hk_Local_Constraint_System::entity_deletion_event(hk_Rigid_Body*)
0007fa50 t hk_Local_Constraint_System::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
00080670 t hk_Local_Constraint_System::get_effector_priority()
0007f7c0 t hk_Local_Constraint_System::constraint_deletion_event(hk_Constraint*)
0007fad0 t hk_Local_Constraint_System::get_constraints_in_system(hk_Array<hk_Constraint*>&)
0007f540 t hk_Local_Constraint_System::core_is_going_to_be_deleted_event(IVP_Core*)
0007f850 t hk_Local_Constraint_System::activate()
0007f680 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007f680 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007fdd0 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007fc50 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007fc50 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
00090d40 t hk_Stiff_Spring_Constraint::set_length(float)
00090910 t hk_Stiff_Spring_Constraint::init_constraint(void const*)
00090970 t hk_Stiff_Spring_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00090d50 t hk_Stiff_Spring_Constraint::apply_effector_PSI(hk_PSI_Info&)
00090db0 t hk_Stiff_Spring_Constraint::get_constraint_dof()
00090bd0 t hk_Stiff_Spring_Constraint::write_to_blueprint(hk_Stiff_Spring_BP*)
00090da0 t hk_Stiff_Spring_Constraint::get_constraint_type()
00090960 t hk_Stiff_Spring_Constraint::get_vmq_storage_size()
00090e20 t hk_Stiff_Spring_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00090b80 t hk_Stiff_Spring_Constraint::init_stiff_spring_constraint(hk_Stiff_Spring_BP const*)
00090c20 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00090cb0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00090c20 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00090cb0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00090de0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
00090dc0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
00090dc0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
000e83b2 t IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000e888a t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000e89c4 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000e8cf8 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000e8e1c t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000e8f2e t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000e4764 t IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000e6364 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000e6482 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000e7594 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000e787c t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000e7954 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000ea0f6 t IVP_Car_System_Real_Wheels::do_steering(float, bool)
000e9304 t IVP_Car_System_Real_Wheels::get_skid_info(IVP_Wheel_Skid_Info*)
000e9274 t IVP_Car_System_Real_Wheels::get_body_speed(IVP_COORDINATE_INDEX)
000e971e t IVP_Car_System_Real_Wheels::set_powerslide(float, float)
000e9370 t IVP_Car_System_Real_Wheels::update_booster(float)
000eb974 t IVP_Car_System_Real_Wheels::update_throttle(float)
000e9a40 t IVP_Car_System_Real_Wheels::activate_booster(float, float, float)
000e9242 t IVP_Car_System_Real_Wheels::get_wheel_torque(IVP_POS_WHEEL)
000e9ce4 t IVP_Car_System_Real_Wheels::do_steering_wheel(IVP_POS_WHEEL, float)
000e93d6 t IVP_Car_System_Real_Wheels::get_booster_delay()
000e9ddc t IVP_Car_System_Real_Wheels::change_wheel_torque(IVP_POS_WHEEL, float)
000e9e42 t IVP_Car_System_Real_Wheels::change_spring_length(IVP_POS_WHEEL, float)
000e94a4 t IVP_Car_System_Real_Wheels::event_object_deleted(IVP_Event_Object*)
000e977e t IVP_Car_System_Real_Wheels::change_body_downforce(float)
000e9ede t IVP_Car_System_Real_Wheels::change_max_body_force(IVP_POS_WHEEL, float)
000e957e t IVP_Car_System_Real_Wheels::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000e952e t IVP_Car_System_Real_Wheels::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000e9cb2 t IVP_Car_System_Real_Wheels::change_spring_constant(IVP_POS_WHEEL, float)
000eb980 t IVP_Car_System_Real_Wheels::get_booster_time_to_go()
000eb97a t IVP_Car_System_Real_Wheels::update_wheel_positions()
000e9230 t IVP_Car_System_Real_Wheels::change_fast_turn_factor(float)
000e9f10 t IVP_Car_System_Real_Wheels::change_spring_dampening(IVP_POS_WHEEL, float)
000e92ce t IVP_Car_System_Real_Wheels::get_orig_axles_distance()
000e97ae t IVP_Car_System_Real_Wheels::set_booster_acceleration(float)
000e9e74 t IVP_Car_System_Real_Wheels::change_spring_pre_tension(IVP_POS_WHEEL, float)
000e9d8a t IVP_Car_System_Real_Wheels::update_body_countertorque()
000e9e0e t IVP_Car_System_Real_Wheels::change_stabilizer_constant(IVP_POS_AXIS, float)
000e92ee t IVP_Car_System_Real_Wheels::get_wheel_angular_velocity(IVP_POS_WHEEL)
000e948c t IVP_Car_System_Real_Wheels::environment_will_be_deleted(IVP_Environment*)
000e9258 t IVP_Car_System_Real_Wheels::change_wheel_speed_dampening(IVP_POS_WHEEL, float)
000e92ae t IVP_Car_System_Real_Wheels::get_orig_front_wheel_distance()
000e9eac t IVP_Car_System_Real_Wheels::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000e9ae8 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000ea2c2 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000eae18 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000e965a t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000e9438 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000e93e4 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000db186 t IVP_Compact_Ledgetree_Node::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000dafe2 t IVP_Compact_Ledgetree_Node::byte_swap()
001e84cc b IVP_Controller_Independent::empty_list
00031b60 t IVP_Controller_Independent::get_associated_controlled_cores()
00031cd0 t IVP_Controller_Independent::~IVP_Controller_Independent()
00031b70 t IVP_Controller_Independent::~IVP_Controller_Independent()
00031b70 t IVP_Controller_Independent::~IVP_Controller_Independent()
000f0cc4 t IVP_Controller_Raycast_Car::do_steering(float, bool)
000f014e t IVP_Controller_Raycast_Car::get_skid_info(IVP_Wheel_Skid_Info*)
000f00da t IVP_Controller_Raycast_Car::get_body_speed(IVP_COORDINATE_INDEX)
000f2460 t IVP_Controller_Raycast_Car::set_powerslide(float, float)
000f2466 t IVP_Controller_Raycast_Car::update_booster(float)
000f2454 t IVP_Controller_Raycast_Car::update_throttle(float)
000f006a t IVP_Controller_Raycast_Car::activate_booster(float, float, float)
000effee t IVP_Controller_Raycast_Car::get_wheel_torque(IVP_POS_WHEEL)
000f0d8c t IVP_Controller_Raycast_Car::do_steering_wheel(IVP_POS_WHEEL, float)
000f00b4 t IVP_Controller_Raycast_Car::get_booster_delay()
000f1236 t IVP_Controller_Raycast_Car::CalcSteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000f0e02 t IVP_Controller_Raycast_Car::DoSimulationShocks(IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, IVP_Event_Sim*, IVP_Core*)
000f15a8 t IVP_Controller_Raycast_Car::DoSimulationWheels(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, float*, IVP_Core*)
000f019e t IVP_Controller_Raycast_Car::InitRaycastCarAxes(IVP_Template_Car_System const*)
000f0b54 t IVP_Controller_Raycast_Car::InitRaycastCarBody(IVP_Template_Car_System const*)
000f14ca t IVP_Controller_Raycast_Car::SetupWheelRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*)
000f0f70 t IVP_Controller_Raycast_Car::ApplySteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000f0d46 t IVP_Controller_Raycast_Car::change_wheel_torque(IVP_POS_WHEEL, float)
000efeb0 t IVP_Controller_Raycast_Car::DoSimulationBooster(IVP_Event_Sim*, IVP_Core*)
000effd6 t IVP_Controller_Raycast_Car::change_spring_length(IVP_POS_WHEEL, float)
000f146a t IVP_Controller_Raycast_Car::DoSimulationSteering(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*)
000f0a0a t IVP_Controller_Raycast_Car::InitRaycastCarWheels(IVP_Template_Car_System const*)
000f0036 t IVP_Controller_Raycast_Car::change_body_downforce(float)
000f244e t IVP_Controller_Raycast_Car::change_max_body_force(IVP_POS_WHEEL, float)
000f05dc t IVP_Controller_Raycast_Car::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000f01fa t IVP_Controller_Raycast_Car::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000eff6a t IVP_Controller_Raycast_Car::change_spring_constant(IVP_POS_WHEEL, float)
000f246c t IVP_Controller_Raycast_Car::get_booster_time_to_go()
000f0030 t IVP_Controller_Raycast_Car::change_fast_turn_factor(float)
000eff82 t IVP_Controller_Raycast_Car::change_spring_dampening(IVP_POS_WHEEL, float)
000efdf0 t IVP_Controller_Raycast_Car::DoSimulationStabilizers(IVP_Raycast_Car_Wheel_Temp*)
000f004e t IVP_Controller_Raycast_Car::get_controller_priority()
000f0132 t IVP_Controller_Raycast_Car::get_orig_axles_distance()
000f1dd8 t IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f0058 t IVP_Controller_Raycast_Car::set_booster_acceleration(float)
000effb2 t IVP_Controller_Raycast_Car::change_spring_pre_tension(IVP_POS_WHEEL, float)
000f0bfe t IVP_Controller_Raycast_Car::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000f245a t IVP_Controller_Raycast_Car::update_body_countertorque()
000f001a t IVP_Controller_Raycast_Car::change_stabilizer_constant(IVP_POS_AXIS, float)
000f00c2 t IVP_Controller_Raycast_Car::get_wheel_angular_velocity(IVP_POS_WHEEL)
000f0116 t IVP_Controller_Raycast_Car::get_orig_front_wheel_distance()
000f2442 t IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000f2422 t IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000eff9a t IVP_Controller_Raycast_Car::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000f2408 t IVP_Controller_Raycast_Car::get_axis(IVP_POS_AXIS)
000f0002 t IVP_Controller_Raycast_Car::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000f23f4 t IVP_Controller_Raycast_Car::get_wheel(IVP_POS_WHEEL)
000f1a3e t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000f1c08 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000f18dc t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000f1994 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000f182c t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0012592a t IVP_Event_Manager_Standard::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
000fff5a t IVP_Friction_Info_For_Core::dist_number()
000ffdf6 t IVP_Friction_Info_For_Core::set_all_dists_of_obj_neutral()
000ffeae t IVP_Friction_Info_For_Core::friction_info_delete_friction_dist(IVP_Contact_Point*)
00100ca0 t IVP_Friction_Info_For_Core::friction_info_insert_friction_dist(IVP_Contact_Point*)
0010b434 t IVP_Great_Matrix_Many_Zero::lu_inverse(IVP_Great_Matrix_Many_Zero*, int*)
001081d4 t IVP_Great_Matrix_Many_Zero::copy_matrix(float*, float*)
00108148 t IVP_Great_Matrix_Many_Zero::copy_matrix(IVP_Great_Matrix_Many_Zero*)
0010842a t IVP_Great_Matrix_Many_Zero::test_result(float*, float*)
00108688 t IVP_Great_Matrix_Many_Zero::mult_aligned()
0010a6ca t IVP_Great_Matrix_Many_Zero::exchange_rows(int, int)
00108104 t IVP_Great_Matrix_Many_Zero::debug_fill_zero()
0010aa44 t IVP_Great_Matrix_Many_Zero::add_multiple_line(int, int, float)
001085e8 t IVP_Great_Matrix_Many_Zero::copy_to_sub_matrix(float*, IVP_Great_Matrix_Many_Zero*, int*)
001081c0 t IVP_Great_Matrix_Many_Zero::align_matrix_values()
0010a936 t IVP_Great_Matrix_Many_Zero::find_pivot_in_column(int)
00108392 t IVP_Great_Matrix_Many_Zero::matrix_multiplication(float*, float*)
001080f8 t IVP_Great_Matrix_Many_Zero::matrix_test_unequation()
00108486 t IVP_Great_Matrix_Many_Zero::fill_from_bigger_matrix(IVP_Great_Matrix_Many_Zero*, int*, int)
001080fe t IVP_Great_Matrix_Many_Zero::matrix_out_before_gauss()
0010823a t IVP_Great_Matrix_Many_Zero::solve_lower_null_matrix()
00108090 t IVP_Great_Matrix_Many_Zero::matrix_check_unequation_line(int)
0010b97a t IVP_Great_Matrix_Many_Zero::solve_great_matrix_many_zero()
0010b0de t IVP_Great_Matrix_Many_Zero::transform_to_lower_null_triangle()
001086f2 t IVP_Great_Matrix_Many_Zero::mult()
0010b6d6 t IVP_Great_Matrix_Many_Zero::invert(IVP_Great_Matrix_Many_Zero*)
001089e0 t IVP_Great_Matrix_Many_Zero::lu_crout(int*, float*)
00108d0c t IVP_Great_Matrix_Many_Zero::lu_solve(int*)
00108654 t IVP_Great_Matrix_Many_Zero::set_value(float, int, int)
001096e8 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
0010845c t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
00109750 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
00108432 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000c1bd0 t IVP_Intrusion_Intersection::p()
000c1b10 t IVP_Intrusion_Intersection::print(char const*)
00128ade t IVP_SurfaceManager_Polygon::add_reference_to_ledge(IVP_Compact_Ledge const*)
00128c80 t IVP_SurfaceManager_Polygon::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00128ae4 t IVP_SurfaceManager_Polygon::remove_reference_to_ledge(IVP_Compact_Ledge const*)
00128ee6 t IVP_SurfaceManager_Polygon::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00128cae t IVP_SurfaceManager_Polygon::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00128ad6 t IVP_SurfaceManager_Polygon::get_type()
00128fea t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
00128b06 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
00128fc8 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
00128aea t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
00128bc4 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
00128b6c t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
00128b98 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
00131e1c t IVP_U_Active_Float_Delayed::~IVP_U_Active_Float_Delayed()
00131da4 t IVP_U_Active_Float_Delayed::~IVP_U_Active_Float_Delayed()
00131d88 t IVP_U_Active_Float_Delayed::~IVP_U_Active_Float_Delayed()
001296b2 t IVP_U_Active_Value_Manager::delay_active_int(IVP_U_Active_Int_Delayed*)
0012b04e t IVP_U_Active_Value_Manager::create_active_int(char const*, int)
0012d4e8 t IVP_U_Active_Value_Manager::insert_active_int(IVP_U_Active_Int*)
0012a6e2 t IVP_U_Active_Value_Manager::remove_active_int(IVP_U_Active_Int*)
00129750 t IVP_U_Active_Value_Manager::delay_active_float(IVP_U_Active_Float_Delayed*)
0012af22 t IVP_U_Active_Value_Manager::install_active_int(char const*, int)
0012d88c t IVP_U_Active_Value_Manager::create_active_float(char const*, float)
0012d626 t IVP_U_Active_Value_Manager::insert_active_float(IVP_U_Active_Float*)
0012a776 t IVP_U_Active_Value_Manager::remove_active_float(IVP_U_Active_Float*)
0012d760 t IVP_U_Active_Value_Manager::install_active_float(char const*, float)
0012b17e t IVP_U_Active_Value_Manager::get_active_int_by_name(char const*)
0012b2a2 t IVP_U_Active_Value_Manager::get_active_float_by_name(char const*)
00129010 t IVP_U_Active_Value_Manager::refresh_psi_active_values(IVP_Environment*)
0012b3ca t IVP_U_Active_Value_Manager::init_active_values_generic()
00131cc6 t IVP_U_Active_Value_Manager::environment_will_be_deleted(IVP_Environment*)
001298aa t IVP_U_Active_Value_Manager::update_delayed_active_values()
0012b500 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0012b622 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0012a51a t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0012a43a t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0012a602 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
00057af0 t vehicle_suspensionparams_t::GetBaseMap()
001e0900 d vehicle_suspensionparams_t::m_DataMap
000e46ca t IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
000e7106 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000e7348 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000e7680 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000e7a36 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000e777e t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
0011c99a t IVP_Application_Environment::IVP_Application_Environment()
0011c9ba t IVP_Application_Environment::IVP_Application_Environment()
00126a66 t IVP_BetterStatisticsmanager::remove_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
00126e04 t IVP_BetterStatisticsmanager::install_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
00126a24 t IVP_BetterStatisticsmanager::set_simulation_time(float)
00126b62 t IVP_BetterStatisticsmanager::remove_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
00126dbc t IVP_BetterStatisticsmanager::install_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
00126986 t IVP_BetterStatisticsmanager::print()
00126c5e t IVP_BetterStatisticsmanager::enable()
00126c6c t IVP_BetterStatisticsmanager::disable()
00126c7a t IVP_BetterStatisticsmanager::get_state()
00126cc6 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
00126c84 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
0012710a t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
001271b0 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
000bb700 t IVP_Compact_Ledge_Generator::prepare_compact_ledge(IVP_U_Vector<IVP_Triangle>*)
000bba80 t IVP_Compact_Ledge_Generator::generate_compact_ledge(unsigned char*)
000bb670 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000bb670 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000bbb50 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
000bbb50 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
00152500 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
00152500 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
00152510 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
00152510 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
00112b16 t IVP_Impact_Solver_Long_Term::do_impact_long_term(IVP_Core**, float, IVP_Contact_Point*)
00110520 t IVP_Impact_Solver_Long_Term::get_best_merge_core(IVP_Core*, IVP_Core*, IVP_Core*)
00115820 t IVP_Impact_Solver_Long_Term::do_impact_of_two_objects(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*)
001101b4 t IVP_Impact_Solver_Long_Term::find_second_critical_impact_core(IVP_Core*, IVP_Core*)
00148ae0 t IVP_Mindist_Minimize_Solver::minimize_BB(IVP_Mindist_Minimize_Solver*)
00148eb0 t IVP_Mindist_Minimize_Solver::minimize_FB(IVP_Mindist_Minimize_Solver*)
00148f00 t IVP_Mindist_Minimize_Solver::minimize_KB(IVP_Mindist_Minimize_Solver*)
00148f50 t IVP_Mindist_Minimize_Solver::minimize_PB(IVP_Mindist_Minimize_Solver*)
00159568 t IVP_Mindist_Minimize_Solver::p_minimize_BF(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00159d5c t IVP_Mindist_Minimize_Solver::p_minimize_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00159162 t IVP_Mindist_Minimize_Solver::p_minimize_BP(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
001495a0 t IVP_Mindist_Minimize_Solver::p_minimize_FF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00157612 t IVP_Mindist_Minimize_Solver::p_minimize_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0015661c t IVP_Mindist_Minimize_Solver::p_minimize_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00157518 t IVP_Mindist_Minimize_Solver::p_minimize_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00156f88 t IVP_Mindist_Minimize_Solver::p_minimize_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00148fa0 t IVP_Mindist_Minimize_Solver::init_loop_hash()
00149190 t IVP_Mindist_Minimize_Solver::pierce_mindist()
00148fb0 t IVP_Mindist_Minimize_Solver::check_loop_hash(IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*)
00148cd0 t IVP_Mindist_Minimize_Solver::minimize_B_POLY(IVP_Mindist_Minimize_Solver*)
00148ab0 t IVP_Mindist_Minimize_Solver::minimize_illegal(IVP_Mindist_Minimize_Solver*)
001eaec0 b IVP_Mindist_Minimize_Solver::mms_function_table
0015986e t IVP_Mindist_Minimize_Solver::p_minimize_Leave_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
0015808e t IVP_Mindist_Minimize_Solver::p_minimize_Leave_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_KK_Input const&, IVP_Unscaled_KK_Result const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00157ade t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PF(IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0015678a t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00149480 t IVP_Mindist_Minimize_Solver::init_mms_function_table()
0014a030 t IVP_Mindist_Minimize_Solver::minimize_default_poly_poly(IVP_Mindist_Minimize_Solver*)
0014a310 t IVP_Mindist_Minimize_Solver::minimize_swapped_poly_poly(IVP_Mindist_Minimize_Solver*)
0011c3d6 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
0011c456 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
0011c802 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
0011c876 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00131ea0 t IVP_U_Active_Float_Listener::~IVP_U_Active_Float_Listener()
00131cfc t IVP_U_Active_Float_Listener::~IVP_U_Active_Float_Listener()
00131ce0 t IVP_U_Active_Float_Listener::~IVP_U_Active_Float_Listener()
00035eb0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00035eb0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00048480 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
00048440 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
00048440 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0011ce24 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
0011ce6a t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
001415e0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
001415b0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
001415b0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
0010e1c6 t IVP_Linear_Constraint_Solver::full_setup()
0010a442 t IVP_Linear_Constraint_Solver::alloc_memory(IVP_U_Memory*)
0010bef6 t IVP_Linear_Constraint_Solver::debug_dep_var(int)
00109f0e t IVP_Linear_Constraint_Solver::debug_out_lcs()
0010f61e t IVP_Linear_Constraint_Solver::startup_setup(int)
0010d38e t IVP_Linear_Constraint_Solver::get_fdirection()
001094d4 t IVP_Linear_Constraint_Solver::start_debug_lcs()
0010e11c t IVP_Linear_Constraint_Solver::setup_l_u_solver()
0010891a t IVP_Linear_Constraint_Solver::update_step_vars(float)
0010fb3a t IVP_Linear_Constraint_Solver::init_and_solve_lc(float*, float*, float*, int, int, IVP_U_Memory*)
00108886 t IVP_Linear_Constraint_Solver::increase_step_count(int*)
0010d26c t IVP_Linear_Constraint_Solver::decrement_sub_solver(int)
0010c872 t IVP_Linear_Constraint_Solver::increment_sub_solver()
0010992a t IVP_Linear_Constraint_Solver::move_variable_to_end(int)
00109e1c t IVP_Linear_Constraint_Solver::debug_test_all_values()
00109cf2 t IVP_Linear_Constraint_Solver::get_values_when_setup()
001088cc t IVP_Linear_Constraint_Solver::exchange_activ_inactiv(int)
00108892 t IVP_Linear_Constraint_Solver::exchange_lcs_variables(int, int)
00109aec t IVP_Linear_Constraint_Solver::full_setup_test_ranges()
001097b8 t IVP_Linear_Constraint_Solver::lcs_bubble_sort_x_vals()
0010a2f6 t IVP_Linear_Constraint_Solver::numerical_stability_ok()
00108764 t IVP_Linear_Constraint_Solver::mult_active_x_for_accel()
00108806 t IVP_Linear_Constraint_Solver::mult_x_with_full_A_minus_b()
001099a0 t IVP_Linear_Constraint_Solver::do_a_little_random_permutation()
0010d2ae t IVP_Linear_Constraint_Solver::move_not_necessary_actives_to_inactives()
0010eb80 t IVP_Linear_Constraint_Solver::solve_lc()
0009aeb0 t IVP_SurfaceBuilder_Pointsoup::error_output(IVP_Template_Polygon*)
001e6904 b IVP_SurfaceBuilder_Pointsoup::single_tri_ledge
0009b130 t IVP_SurfaceBuilder_Pointsoup::planes_to_template(IVP_U_Vector<IVP_U_Point>*, IVP_U_Vector<IVP_SurMan_PS_Plane>*)
0009abb2 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_lineslist(IVP_Template_Line*, int, int, int, char*)
0009ab60 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_pointlist(IVP_Template_Point*, int, IVP_U_Point*)
0009ac58 t IVP_SurfaceBuilder_Pointsoup::convert_triangle_to_compace_ledge(IVP_U_Point*, IVP_U_Point*, IVP_U_Point*)
0009c700 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge(IVP_U_Vector<IVP_U_Point>*)
0009c740 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_surface(IVP_U_Vector<IVP_U_Point>*)
0009beec t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge_internal(IVP_U_Vector<IVP_U_Point>*)
0009b84a t IVP_SurfaceBuilder_Pointsoup::try_to_build_convex_ledge_from_qhull_result(IVP_U_Vector<IVP_U_Point>*, IVP_BOOL*, char*, char*)
0009ae16 t IVP_SurfaceBuilder_Pointsoup::cleanup()
001290ec t IVP_U_Active_Terminal_Double::set_double(float, IVP_BOOL)
0012a812 t IVP_U_Active_Terminal_Double::update_float()
001292b0 t IVP_U_Active_Terminal_Double::print()
0012aeae t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, float)
0012ae3a t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, float)
0013227a t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
00132316 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001e46a0 b vehicleparams_t_DataDescInit::g_DataMapHolder
000c1af0 t IVP_Intrusion_Included_Points::p()
000c1ab0 t IVP_Intrusion_Included_Points::print(char const*)
001282f0 t IVP_PerformanceCounter_Simple::stop_pcount()
001282ea t IVP_PerformanceCounter_Simple::start_pcount()
00128294 t IVP_PerformanceCounter_Simple::environment_is_going_to_be_deleted(IVP_Environment*)
001283c8 t IVP_PerformanceCounter_Simple::reset_and_print_performance_counters(IVP_Time)
001282e4 t IVP_PerformanceCounter_Simple::pcount(IVP_PERFORMANCE_ELEMENT)
00128340 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0012836e t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0012839c t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
001282c8 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
001282ac t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
00096a52 t IVP_SurfaceBuilder_Ledge_Soup::insert_ledge(IVP_Compact_Ledge*)
000981a0 t IVP_SurfaceBuilder_Ledge_Soup::build_ledgetree(IVV_Sphere*)
0009762e t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_spheres()
0009648a t IVP_SurfaceBuilder_Ledge_Soup::build_minimal_sphere(IVV_Sphere*, IVV_Sphere*)
00095b20 t IVP_SurfaceBuilder_Ledge_Soup::calculate_boundingbox(IVP_U_Vector<IVV_Sphere>*, IVP_U_Float_Point*, IVP_U_Float_Point*)
0009612a t IVP_SurfaceBuilder_Ledge_Soup::insert_compact_ledges()
00097974 t IVP_SurfaceBuilder_Ledge_Soup::build_root_convex_hull()
00096254 t IVP_SurfaceBuilder_Ledge_Soup::allocate_compact_surface()
00098ada t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_bottomup(float)
000989f6 t IVP_SurfaceBuilder_Ledge_Soup::create_compact_ledgetree()
00096738 t IVP_SurfaceBuilder_Ledge_Soup::combine_spheres_in_vector(IVV_Cluster_Min_Hash*)
00096992 t IVP_SurfaceBuilder_Ledge_Soup::generate_interval_minhash(float)
00096ad8 t IVP_SurfaceBuilder_Ledge_Soup::convert_ledges_to_templates(IVP_U_BigVector<IVP_Compact_Ledge>&, IVP_U_Vector<IVP_Template_Polygon>*)
000972b0 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_boxes_and_spheres()
00095d84 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_array_debug_output()
0009703a t IVP_SurfaceBuilder_Ledge_Soup::add_ledge_tree_to_convex_hull(IVP_Compact_Recursive&, IVV_Sphere*)
00095cbc t IVP_SurfaceBuilder_Ledge_Soup::insert_radius_in_compact_surface(IVP_BOOL)
0009a75c t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut(float)
00095e62 t IVP_SurfaceBuilder_Ledge_Soup::recompile_point_indizes_of_compact_ledge(IVP_Compact_Ledge*, char*)
0009974e t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut_recursively(IVP_U_Vector<IVV_Sphere>*)
000966a2 t IVP_SurfaceBuilder_Ledge_Soup::remove_all_further_spherecombinations_from_hash(IVV_Cluster_Min_Hash*, int)
000995a2 t IVP_SurfaceBuilder_Ledge_Soup::replace_childspheres_in_spherelist_with_motherspheres()
00099682 t IVP_SurfaceBuilder_Ledge_Soup::cleanup()
0009a836 t IVP_SurfaceBuilder_Ledge_Soup::compile(IVP_Template_Surbuild_LedgeSoup*)
0009790c t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097940 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
000992b2 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00099428 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00153f70 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00153f70 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
0011cb38 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
0011cb14 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
000ef87e t IVP_Attacher_To_Cores_Buoyancy::get_buoyancy_surface(IVP_Real_Object*)
000ef872 t IVP_Attacher_To_Cores_Buoyancy::get_parameters_per_core(IVP_Core*)
000ef3ba t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000ef106 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000efbee t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000efcf0 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
0011c2d4 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
0011c2c8 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
0011c2e6 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
0011c2e0 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00155c20 t IVP_Object_Callback_Table_Hash::find_table(IVP_Real_Object*)
00155b90 t IVP_Object_Callback_Table_Hash::remove_table(IVP_Real_Object*)
00155b00 t IVP_Object_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00155b40 t IVP_Object_Callback_Table_Hash::add_table(IVP_Object_Callback_Table*)
00155cb0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00155cb0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00155ae0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00155a60 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00155a60 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
0005b5c0 t IVP_SurfaceManager_VirtualMesh::add_reference_to_ledge(IVP_Compact_Ledge const*)
0005ae70 t IVP_SurfaceManager_VirtualMesh::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
0005b300 t IVP_SurfaceManager_VirtualMesh::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0005bc00 t IVP_SurfaceManager_VirtualMesh::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
0005bde0 t IVP_SurfaceManager_VirtualMesh::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
0005c160 t IVP_SurfaceManager_VirtualMesh::get_type()
0005baf0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
0005baf0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
0005aeb0 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
0005ae90 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
0005ae90 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00153bf0 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
00153bf0 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
0004e0a0 t vphysics_save_cphysicsobject_t::GetBaseMap()
001df820 d vphysics_save_cphysicsobject_t::m_DataMap
000568d0 t vphysics_save_cphysicsspring_t::GetBaseMap()
001e05c0 d vphysics_save_cphysicsspring_t::m_DataMap
001450d0 t IVP_3D_Solver_VEC_PARALLEL_AREA::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00123e34 t IVP_Standard_Gravity_Controller::get_controller_name()
001202fe t IVP_Standard_Gravity_Controller::set_standard_gravity(IVP_U_Point*)
0012031c t IVP_Standard_Gravity_Controller::set_alternate_gravity(IVP_U_Point*)
00123e2a t IVP_Standard_Gravity_Controller::get_controller_priority()
0012068c t IVP_Standard_Gravity_Controller::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00123e66 t IVP_Standard_Gravity_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00123e8c t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00123e4a t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
000371d0 t vphysics_save_constraintfixed_t::GetBaseMap()
001de710 d vphysics_save_constraintfixed_t::m_DataMap
000372a0 t vphysics_save_constrainthinge_t::GetBaseMap()
001de6f8 d vphysics_save_constrainthinge_t::m_DataMap
0006b030 t CVPhysPtrUtlVectorSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
0006b200 t CVPhysPtrUtlVectorSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00090140 t hk_Ragdoll_Constraint_BP_Builder::set_ragdoll_constraint(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Interval<float> const&, hk_Interval<float> const&, hk_Interval<float> const&, bool)
0008ed30 t hk_Ragdoll_Constraint_BP_Builder::initialize_from_limited_ball_socket_bp(hk_Limited_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000954cc t IVP_SurfaceBuilder_Halfspacesoup::insert_point_into_list(IVP_U_Point*, IVP_U_Vector<IVP_U_Point>*, float)
000955c2 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_points(IVP_Halfspacesoup*, float, IVP_U_Vector<IVP_U_Point>*)
000959c4 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_ledge(IVP_Halfspacesoup*, float)
00095a84 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_surface(IVP_Halfspacesoup*, float)
001e3c7c b physcollideheader_t_DataDescInit::g_DataMapHolder
00037510 t vphysics_save_constraintlength_t::GetBaseMap()
001de6b0 d vphysics_save_constraintlength_t::m_DataMap
00037440 t vphysics_save_constraintpulley_t::GetBaseMap()
001de6c8 d vphysics_save_constraintpulley_t::m_DataMap
00049200 t vphysics_save_motioncontroller_t::GetBaseMap()
001df740 d vphysics_save_motioncontroller_t::m_DataMap
00049f30 t vphysics_save_motioncontroller_t::~vphysics_save_motioncontroller_t()
00049f30 t vphysics_save_motioncontroller_t::~vphysics_save_motioncontroller_t()
00048b30 t CPredictedPhysicsMotionController::IsPredicted()
00048b50 t CPredictedPhysicsMotionController::Prediction_Resimulate(float)
00048b40 t CPredictedPhysicsMotionController::SetCallOrderRegistrar(CPredictableControllerSimulationOrderTracker*)
00049dc0 t CPredictedPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00049d40 t CPredictedPhysicsMotionController::OnPredictionCommandChanged(int, bool)
000495e0 t CPredictedPhysicsMotionController::DoneReferencingPreviousCommands(int)
00049870 t CPredictedPhysicsMotionController::CPredictedPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
00049870 t CPredictedPhysicsMotionController::CPredictedPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
00049aa0 t CPredictedPhysicsMotionController::~CPredictedPhysicsMotionController()
00049990 t CPredictedPhysicsMotionController::~CPredictedPhysicsMotionController()
00049990 t CPredictedPhysicsMotionController::~CPredictedPhysicsMotionController()
00141750 t IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00141730 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
001416b0 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
001416b0 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
000ebbac t IVP_Constraint_Solver_Car_Builder::disable_constraint(int)
000ebc3a t IVP_Constraint_Solver_Car_Builder::calc_pushing_behavior(int, int)
000ec47e t IVP_Constraint_Solver_Car_Builder::calc_constraint_matrix()
000ec64a t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000ec6cc t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000f2640 t IVP_Multidimensional_Interpolator::sort_vectors(int)
000f373a t IVP_Multidimensional_Interpolator::get_nr_occupied()
000f372e t IVP_Multidimensional_Interpolator::get_nr_of_vectors()
000f3370 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_stochastic(IVP_MI_Vector const*, IVP_MI_Vector const*)
000f2760 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_conventional(IVP_MI_Vector const*, IVP_MI_Vector const*)
000f2a40 t IVP_Multidimensional_Interpolator::linfit(int, int, IVP_MI_Vector**, float*, float*)
000f2e28 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000f30cc t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000f392e t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
000f39f0 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
0009d222 t IVP_SurfaceBuilder_Polygon_Convex::convert_template_to_ledge(IVP_Template_Polygon*)
0009c958 t IVP_SurfaceBuilder_Polygon_Convex::fill_list_with_all_triangles(IVP_U_Vector<IVP_Triangle>*)
0009d8ea t IVP_SurfaceBuilder_Polygon_Convex::get_and_remove_compact_ledge()
0009cf40 t IVP_SurfaceBuilder_Polygon_Convex::init_surface_manager_polygon()
0009d848 t IVP_SurfaceBuilder_Polygon_Convex::convert_templateledgepolygonsoup_to_ledge(IVP_Template_Ledge_Polygon_Soup*)
0009d0f2 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0009d2c4 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0009d18a t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0009c9bc t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0009c84c t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
0009c8d2 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
00128cf4 t IVP_SurfaceManager_Polygon_Solver::traverse_cluster(IVP_Compact_Ledgetree_Node const*, IVP_U_Point const*, float, IVP_U_BigVector<IVP_Compact_Ledge>*)
001e46ac b vehicle_axleparams_t_DataDescInit::g_DataMapHolder
001e46b8 b vehicle_bodyparams_t_DataDescInit::g_DataMapHolder
000376b0 t vphysics_save_constraintragdoll_t::GetBaseMap()
001de680 d vphysics_save_constraintragdoll_t::m_DataMap
00037370 t vphysics_save_constraintsliding_t::GetBaseMap()
001de6e0 d vphysics_save_constraintsliding_t::m_DataMap
00054400 t vphysics_save_cshadowcontroller_t::GetBaseMap()
001e0000 d vphysics_save_cshadowcontroller_t::m_DataMap
0003c290 t CPhysics_Car_System_Raycast_Wheels::do_raycasts(IVP_Event_Sim*, int, IVP_Ray_Solver_Template*, IVP_Ray_Hit*, float*)
0003c600 t CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003c520 t CPhysics_Car_System_Raycast_Wheels::InitCarSystemWheels(IVP_Template_Car_System const*)
0003bfe0 t CPhysics_Car_System_Raycast_Wheels::update_wheel_positions()
0003c5d0 t CPhysics_Car_System_Raycast_Wheels::GetWheel(int)
0003c570 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003c570 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003c270 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003c240 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003c240 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000c14b0 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledge(IVP_Compact_Ledge const*)
000c1500 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
000c1310 t IVP_Compact_Ledge_Find_Mass_Center::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*)
000c0f10 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
000c0f10 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
001e46b4 b vehicle_wheelparams_t_DataDescInit::g_DataMapHolder
00036f60 t vphysics_save_cphysicsconstraint_t::GetBaseMap()
001de758 d vphysics_save_cphysicsconstraint_t::m_DataMap
000576f0 t vphysics_save_cvehiclecontroller_t::GetBaseMap()
001e0960 d vphysics_save_cvehiclecontroller_t::m_DataMap
001e3c78 b compactsurfaceheader_t_DataDescInit::g_DataMapHolder
00040770 t IPredictable_Controller_Independant::~IPredictable_Controller_Independant()
00040700 t IPredictable_Controller_Independant::~IPredictable_Controller_Independant()
00040700 t IPredictable_Controller_Independant::~IPredictable_Controller_Independant()
000da270 t IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object*, IVP_Real_Object*, IVP_CFEP_Objectpair*)
000da28e t IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment*)
000dad4e t IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000dae58 t IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000dac98 t IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000dab54 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000daae4 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000da60a t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000da2fa t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000da2a6 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
001e46a4 b vehicle_engineparams_t_DataDescInit::g_DataMapHolder
00037100 t vphysics_save_constraintaxislimit_t::GetBaseMap()
001de728 d vphysics_save_constraintaxislimit_t::m_DataMap
00037030 t vphysics_save_constraintbreakable_t::GetBaseMap()
001de740 d vphysics_save_constraintbreakable_t::m_DataMap
00054330 t vphysics_save_shadowcontrolparams_t::GetBaseMap()
001e0018 d vphysics_save_shadowcontrolparams_t::m_DataMap
00145820 t IVP_3D_Solver_DISTANCE_OF_TWO_POINTS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00141490 t IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object*, IVP_Real_Object*)
00141430 t IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision*)
00141410 t IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment*)
001413c0 t IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object*)
00141540 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
00141540 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
00141520 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
00141510 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
00141510 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
000c0f30 t IVP_Compact_Ledge_Mass_Center_Solver::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, int, int, int)
000c0ef0 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
000c0ef0 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
00127c60 t IVP_Liquid_Surface_Descriptor_Simple::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
00127d02 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
00127ca6 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
000375e0 t vphysics_save_constraintballsocket_t::GetBaseMap()
001de698 d vphysics_save_constraintballsocket_t::m_DataMap
001e46a8 b vehicle_steeringparams_t_DataDescInit::g_DataMapHolder
001e46bc b vehicle_operatingparams_t_DataDescInit::g_DataMapHolder
00126972 t IVP_BetterStatisticsmanager_Data_Entity::set_position(int, int)
001268a0 t IVP_BetterStatisticsmanager_Data_Entity::set_int_value(int)
001270a4 t IVP_BetterStatisticsmanager_Data_Entity::set_array_size(int)
001268ae t IVP_BetterStatisticsmanager_Data_Entity::set_double_value(float)
001268bc t IVP_BetterStatisticsmanager_Data_Entity::set_int_array_latest_value(int)
00126904 t IVP_BetterStatisticsmanager_Data_Entity::set_double_array_latest_value(float)
0012694c t IVP_BetterStatisticsmanager_Data_Entity::enable()
0012695a t IVP_BetterStatisticsmanager_Data_Entity::disable()
00126e4c t IVP_BetterStatisticsmanager_Data_Entity::set_text(char const*)
00126968 t IVP_BetterStatisticsmanager_Data_Entity::get_state()
00126e96 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00126f9e t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00126d54 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
00126d88 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
001e46b0 b vehicle_suspensionparams_t_DataDescInit::g_DataMapHolder
00036dc0 t vphysics_save_cphysicsconstraintgroup_t::GetBaseMap()
001de770 d vphysics_save_cphysicsconstraintgroup_t::m_DataMap
000406a0 t CPredictable_Controller_Independant_Stub::IsPredicted()
000406c0 t CPredictable_Controller_Independant_Stub::Prediction_Resimulate(float)
000406b0 t CPredictable_Controller_Independant_Stub::SetCallOrderRegistrar(CPredictableControllerSimulationOrderTracker*)
000406f0 t CPredictable_Controller_Independant_Stub::get_controller_priority()
000406e0 t CPredictable_Controller_Independant_Stub::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000406d0 t CPredictable_Controller_Independant_Stub::get_associated_controlled_cores()
00040750 t CPredictable_Controller_Independant_Stub::~CPredictable_Controller_Independant_Stub()
00040710 t CPredictable_Controller_Independant_Stub::~CPredictable_Controller_Independant_Stub()
00040710 t CPredictable_Controller_Independant_Stub::~CPredictable_Controller_Independant_Stub()
001e4530 b vphysics_save_cphysicsobject_t_DataDescInit::g_DataMapHolder
001e4640 b vphysics_save_cphysicsspring_t_DataDescInit::g_DataMapHolder
0003d8e0 t CPredictableControllerSimulationOrderTracker::IsDeleting(IPredictable_Controller_Independant*)
0003fba0 t CPredictableControllerSimulationOrderTracker::RegisterSimulation(IPredictable_Controller_Independant*)
00041850 t CPredictableControllerSimulationOrderTracker::~CPredictableControllerSimulationOrderTracker()
00041850 t CPredictableControllerSimulationOrderTracker::~CPredictableControllerSimulationOrderTracker()
000f23da t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000f23c0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000f247a t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
001e3d60 b vphysics_save_constraintfixed_t_DataDescInit::g_DataMapHolder
001e3d5c b vphysics_save_constrainthinge_t_DataDescInit::g_DataMapHolder
001e3d50 b vphysics_save_constraintlength_t_DataDescInit::g_DataMapHolder
001e3d54 b vphysics_save_constraintpulley_t_DataDescInit::g_DataMapHolder
001e44d0 b vphysics_save_motioncontroller_t_DataDescInit::g_DataMapHolder
001e3d48 b vphysics_save_constraintragdoll_t_DataDescInit::g_DataMapHolder
001e3d58 b vphysics_save_constraintsliding_t_DataDescInit::g_DataMapHolder
001e45a8 b vphysics_save_cshadowcontroller_t_DataDescInit::g_DataMapHolder
001e3d6c b vphysics_save_cphysicsconstraint_t_DataDescInit::g_DataMapHolder
001e46c0 b vphysics_save_cvehiclecontroller_t_DataDescInit::g_DataMapHolder
00031af0 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00031af0 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00031d10 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00031d10 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
001e3d64 b vphysics_save_constraintaxislimit_t_DataDescInit::g_DataMapHolder
001e3d68 b vphysics_save_constraintbreakable_t_DataDescInit::g_DataMapHolder
001e45ac b vphysics_save_shadowcontrolparams_t_DataDescInit::g_DataMapHolder
001e3d4c b vphysics_save_constraintballsocket_t_DataDescInit::g_DataMapHolder
0003d930 t CPredictableControllerSimulationOrderTracker_Manager::MarkCommandEnd()
0003fbd0 t CPredictableControllerSimulationOrderTracker_Manager::MarkCommandStart(int)
0003d950 t CPredictableControllerSimulationOrderTracker_Manager::ResimulateCommand(int, float)
0003dad0 t CPredictableControllerSimulationOrderTracker_Manager::DoneReferencingPreviousCommands(int)
00041900 t CPredictableControllerSimulationOrderTracker_Manager::~CPredictableControllerSimulationOrderTracker_Manager()
00041900 t CPredictableControllerSimulationOrderTracker_Manager::~CPredictableControllerSimulationOrderTracker_Manager()
001e3d70 b vphysics_save_cphysicsconstraintgroup_t_DataDescInit::g_DataMapHolder
001701e0 t CWrap::~CWrap() [clone .constprop.2]
0006cba0 t ConVar::ClampValue(float&)
0006d900 t ConVar::SetDefault(char const*)
0006d6c0 t ConVar::InternalSetValue(char const*)
0006ca60 t ConVar::ChangeStringValue(char const*, float)
0006cbe0 t ConVar::InternalSetIntValue(int)
0006d560 t ConVar::RemoveChangeCallback(void (*)(IConVar*, char const*, float))
0006e8b0 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float), bool)
0006c7c0 t ConVar::InternalSetColorValue(Color)
0006c900 t ConVar::InternalSetFloatValue(float)
0006d5e0 t ConVar::InternalSetColorFromString(char const*)
0006c7a0 t ConVar::Init()
0006e360 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006d850 t ConVar::Revert()
0006c700 t ConVar::AddFlags(int)
0006c8a0 t ConVar::SetValue(Color)
0006c840 t ConVar::SetValue(float)
0006c870 t ConVar::SetValue(int)
0006c810 t ConVar::SetValue(char const*)
0006e7e0 t ConVar::ConVar(char const*, char const*, int)
0006e710 t ConVar::ConVar(char const*, char const*, int, char const*)
0006e640 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006e4a0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006e570 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006e7e0 t ConVar::ConVar(char const*, char const*, int)
0006e710 t ConVar::ConVar(char const*, char const*, int, char const*)
0006e640 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006e4a0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006e570 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006e200 t ConVar::~ConVar()
0006e160 t ConVar::~ConVar()
0006e160 t ConVar::~ConVar()
0006b4a0 t CDefOps<void*>::LessFunc(void* const&, void* const&)
0005c4f0 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
0005c4f0 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
00065de0 t CTSPool<CVisitHash>::~CTSPool()
00065de0 t CTSPool<CVisitHash>::~CTSPool()
0006b5d0 t CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::~CUtlMap()
0006b5d0 t CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::~CUtlMap()
001e2bb0 d hk_Math::hk_random_seed
00093740 t hk_Math::rand01()
00093730 t hk_Math::srand01(unsigned int)
0016c740 t VMatrix::SetupMatrixOrgAngles(Vector const&, QAngle const&)
0016c290 t VMatrix::Scale(Vector const&)
0016b830 t VMatrix::operator=(VMatrix const&)
0006d0a0 t CCommand::DefaultBreakSet()
0006d080 t CCommand::Reset()
0006d0b0 t CCommand::Tokenize(char const*, characterset_t*)
0006cf40 t CCommand::CCommand(int, char const**)
0006cef0 t CCommand::CCommand()
0006cf40 t CCommand::CCommand(int, char const**)
0006cef0 t CCommand::CCommand()
00075f50 t CFmtStrN<256, false>::InitQuietTruncation()
0014a340 t CFmtStrN<256, false>::sprintf(char const*, ...)
00075f60 t CFmtStrN<256, false>::CFmtStrN(char const*, ...)
00075f60 t CFmtStrN<256, false>::CFmtStrN(char const*, ...)
00048400 t CSurface::get_damping()
000483f0 t CSurface::get_adhesion()
000483d0 t CSurface::get_elasticity()
000483c0 t CSurface::get_friction_factor()
000483e0 t CSurface::get_second_friction_factor()
00046690 t CSurface::get_name()
000484e0 t CSurface::~CSurface()
000484c0 t CSurface::~CSurface()
000484c0 t CSurface::~CSurface()
00080740 t hk_Array<hk_Constraint*>::~hk_Array()
00080740 t hk_Array<hk_Constraint*>::~hk_Array()
00154600 t IVP_Ball::set_radius(float)
001542f0 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
001542f0 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
001542c0 t IVP_Ball::~IVP_Ball()
001542a0 t IVP_Ball::~IVP_Ball()
001542a0 t IVP_Ball::~IVP_Ball()
000f8f9c t IVP_Core::reset_time(IVP_Time)
000f7aa6 t IVP_Core::set_radius(float, float)
000f91b6 t IVP_Core::damp_object(float, IVP_U_Float_Point const*, float)
000f900c t IVP_Core::push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000fb688 t IVP_Core::clip_velocity(IVP_U_Float_Point*, IVP_U_Float_Point*)
000f9a4e t IVP_Core::async_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000fb60a t IVP_Core::get_environment()
000fb622 t IVP_Core::get_position_PSI()
000f7c34 t IVP_Core::get_rot_speed_cs(IVP_U_Float_Point const*)
000fb2d8 t IVP_Core::global_damp_core(float)
000f7cfe t IVP_Core::rot_push_core_cs(IVP_U_Float_Point const*)
000f8418 t IVP_Core::add_friction_info(IVP_Friction_Info_For_Core*)
000f84aa t IVP_Core::get_friction_info(IVP_Friction_System*)
000f97ee t IVP_Core::async_push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000f7a46 t IVP_Core::get_energy_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000f8710 t IVP_Core::get_rot_inertia_cs(IVP_U_Float_Point const*)
00121e78 t IVP_Core::add_core_controller(IVP_Controller*)
000f7ee6 t IVP_Core::calc_movement_state(IVP_Time)
000fb5fc t IVP_Core::fast_piling_allowed()
0012102e t IVP_Core::rem_core_controller(IVP_Controller*)
000f8578 t IVP_Core::apply_velocity_limit()
000fb7de t IVP_Core::calc_next_PSI_matrix(IVP_U_Vector<IVP_Core>*, IVP_Event_Sim*)
000f8c3e t IVP_Core::core_add_link_to_obj(IVP_Real_Object*)
000f851a t IVP_Core::core_plausible_check()
000f990e t IVP_Core::delete_friction_info(IVP_Friction_Info_For_Core*)
000f87be t IVP_Core::get_surface_speed_ws(IVP_U_Point const*, IVP_U_Float_Point*)
001007b0 t IVP_Core::grow_friction_system()
000f8ee0 t IVP_Core::set_rotation_inertia(IVP_U_Float_Point const*)
000f83d6 t IVP_Core::unlink_friction_info(IVP_Friction_Info_For_Core*)
00100082 t IVP_Core::union_find_get_father()
000f7aba t IVP_Core::abort_all_async_pushes()
0011f93c t IVP_Core::freeze_simulation_core()
000fb616 t IVP_Core::get_m_world_f_core_PSI()
0011f5b6 t IVP_Core::revive_simulation_core()
000f8864 t IVP_Core::set_matrizes_and_speed(IVP_Core_Merged*, IVP_U_Matrix*)
000fa5b8 t IVP_Core::stop_physical_movement()
000f9562 t IVP_Core::synchronize_with_rot_z()
000f7e8c t IVP_Core::undo_synchronize_rot_z()
000f7d40 t IVP_Core::commit_all_async_pushes()
0011d44e t IVP_Core::debug_out_movement_vars()
000fb5e4 t IVP_Core::set_fast_piling_allowed(IVP_BOOL)
0011cc08 t IVP_Core::debug_vec_movement_state()
0011f3aa t IVP_Core::fire_event_object_frozen()
000f8f06 t IVP_Core::init_core_for_simulation()
000f7e6e t IVP_Core::reset_freeze_check_values()
000f7cae t IVP_Core::rot_push_core_multiple_cs(IVP_U_Float_Point const*, float)
000f8a9a t IVP_Core::rot_push_core_multiple_ws(IVP_U_Float_Point const*, float)
000f84f4 t IVP_Core::rot_speed_plausible_check(IVP_U_Float_Point const*)
000f8c86 t IVP_Core::transform_PSI_matrizes_core(IVP_U_Matrix const*)
000f7ae8 t IVP_Core::center_push_core_multiple_ws(IVP_U_Float_Point const*, float)
000f9b1a t IVP_Core::revive_adjacent_to_unmoveable()
000f7c02 t IVP_Core::test_rot_push_core_multiple_cs(IVP_U_Float_Point const*, float, IVP_U_Float_Point*)
000f7c5e t IVP_Core::async_rot_push_core_multiple_cs(IVP_U_Float_Point const*, float)
000f8b16 t IVP_Core::async_rot_push_core_multiple_ws(IVP_U_Float_Point const*, float)
000f7dde t IVP_Core::calc_next_PSI_matrix_zero_speed(IVP_Event_Sim*)
000f8386 t IVP_Core::ensure_core_to_be_in_simulation()
000f8244 t IVP_Core::moveable_core_has_friction_info()
000fa976 t IVP_Core::values_changed_recalc_redundants()
000f8238 t IVP_Core::create_collision_merged_core_with(IVP_Core*)
000fb874 t IVP_Core::ensure_core_in_simulation_delayed()
000f7b34 t IVP_Core::async_center_push_core_multiple_ws(IVP_U_Float_Point const*, float)
000f832c t IVP_Core::ensure_all_core_objs_in_simulation()
000f8250 t IVP_Core::unmovable_core_debug_friction_hash()
000faf98 t IVP_Core::get_diff_surface_speed_of_two_cores(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000f8756 t IVP_Core::update_exact_mindist_events_of_core()
000f82d2 t IVP_Core::ensure_all_core_objs_in_simulation_now()
000fa7ac t IVP_Core::unlink_obj_from_core_and_maybe_destroy(IVP_Real_Object*)
000f9720 t IVP_Core::stop_movement_without_collision_recheck()
000fb154 t IVP_Core::get_diff_surface_speed_of_two_cores_on_test(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000f8b92 t IVP_Core::init(IVP_Real_Object*, bool)
000f8eaa t IVP_Core::set_mass(float)
000f8d22 t IVP_Core::calc_calc()
000f9982 t IVP_Core::push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000f9f30 t IVP_Core::IVP_Core(IVP_Real_Object*)
000f93c4 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000f9d22 t IVP_Core::IVP_Core(IVP_Real_Object*)
000f9fce t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000fa16c t IVP_Core::~IVP_Core()
000fa2ac t IVP_Core::~IVP_Core()
00133102 t IVP_Hash::add(char const*, void*)
001332a0 t IVP_Hash::remove(char const*)
0013321c t IVP_Hash::IVP_Hash(int, int, void*)
0013325e t IVP_Hash::IVP_Hash(int, int, void*)
00132f90 t IVP_Hash::~IVP_Hash()
00132ffe t IVP_Hash::~IVP_Hash()
0013caa6 t P_String::string_cmp(char const*, char const*, IVP_BOOL)
0013c8fa t P_String::find_string(char const*, char const*, int)
0013c720 t P_String::uppercase(char*)
000bd8e0 t P_Sur_2D::calc_line_representation()
000bdcf0 t P_Sur_2D::calc_triangle_representation()
000bd750 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000bd750 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000bd7f0 t P_Sur_2D::~P_Sur_2D()
000bd7f0 t P_Sur_2D::~P_Sur_2D()
0006bf70 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
0006bef0 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
0006d920 t ConVarRef::Init(char const*, bool)
0006da20 t ConVarRef::ConVarRef(IConVar*)
0006d9f0 t ConVarRef::ConVarRef(char const*)
0006d9e0 t ConVarRef::ConVarRef(char const*, bool)
0006da20 t ConVarRef::ConVarRef(IConVar*)
0006d9f0 t ConVarRef::ConVarRef(char const*)
0006d9e0 t ConVarRef::ConVarRef(char const*, bool)
0005df60 t CTraceIVP::BuildLeafmapCache(leafmap_t const*)
0005dc60 t CTraceIVP::BuildLeafmapCacheRLE(leafmap_t const*)
0005e0f0 t CTraceIVP::BuildSingleTriangleCache(IVP_Compact_Ledge const*)
0005dac0 t CTraceIVP::CTraceIVP(CPhysCollide const*)
0005d8e0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005dac0 t CTraceIVP::CTraceIVP(CPhysCollide const*)
0005d8e0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005e2f0 t CTraceRay::Init(Vector const&, Vector const&)
0005e4c0 t CTraceRay::Reset(float)
0005e430 t CTraceRay::CTraceRay(Ray_t const&)
0005e460 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005e3e0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
0005e430 t CTraceRay::CTraceRay(Ray_t const&)
0005e460 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005e3e0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
001654e0 t Frustum_t::CreateOrthoFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float)
00165460 t Frustum_t::CreateOrthoFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, float, float)
001653c0 t Frustum_t::CreatePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float)
00165330 t Frustum_t::CreatePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float)
001652c0 t Frustum_t::CreatePerspectiveFrustumFLU(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float)
00164550 t Frustum_t::SetPlane(int, Vector const&, float)
001645d0 t Frustum_t::SetPlanes(VPlane const*)
001644f0 t Frustum_t::Frustum_t()
001644f0 t Frustum_t::Frustum_t()
00172f54 t __gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)
00172f54 t __gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)
00172fb4 t __gnu_cxx::__scoped_lock::~__scoped_lock()
00172fb4 t __gnu_cxx::__scoped_lock::~__scoped_lock()
00172cfe t __gnu_cxx::recursive_init_error::~recursive_init_error()
00172cd0 t __gnu_cxx::recursive_init_error::~recursive_init_error()
00172cd0 t __gnu_cxx::recursive_init_error::~recursive_init_error()
00172f1a t __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00172e84 t __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00172e84 t __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00172ee0 t __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00172eb2 t __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00172eb2 t __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00173310 t __gnu_cxx::__verbose_terminate_handler()
000925a0 t hk_Memory::deallocate(void*, int, hk_MEMORY_CLASS)
00092620 t hk_Memory::aligned_free(void*)
00092650 t hk_Memory::get_instance()
000925c0 t hk_Memory::aligned_malloc(unsigned int, unsigned int)
00092580 t hk_Memory::allocate(int, hk_MEMORY_CLASS)
00092570 t hk_Memory::hk_Memory()
00092570 t hk_Memory::hk_Memory()
00092560 t hk_Memory::~hk_Memory()
00092560 t hk_Memory::~hk_Memory()
000f731e t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000f7354 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000f72bc t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000f72f2 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000f7380 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000f73b6 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
0013df8a t IVP_VHash::deactivate()
0013e04e t IVP_VHash::remove_elem(void const*, unsigned int)
0013d66c t IVP_VHash::untouch_all()
0013d722 t IVP_VHash::touch_element(void const*, unsigned int)
0013f74e t IVP_VHash::garbage_collection(int)
0013d69a t IVP_VHash::check()
0013ee82 t IVP_VHash::rehash(int)
0013de3e t IVP_VHash::activate(int)
0013f65c t IVP_VHash::add_elem(void const*, int)
0013de82 t IVP_VHash::IVP_VHash(int)
0013d636 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
0013dece t IVP_VHash::IVP_VHash(int)
0013d600 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
0013e1fe t IVP_VHash::~IVP_VHash()
0013dfca t IVP_VHash::~IVP_VHash()
0013e00c t IVP_VHash::~IVP_VHash()
000604e0 t simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)
00061260 t simplex_t::ClipRayToTriangle(Vector const&, float)
0005e8e0 t simplex_t::SolveVoronoiRegion2(simplexvert_t const&, Vector*)
0005ead0 t simplex_t::SolveVoronoiRegion3(simplexvert_t const&, Vector*)
0005f020 t simplex_t::SolveVoronoiRegion4(simplexvert_t const&, Vector*)
00060e00 t simplex_t::ClipRayToTetrahedron(Vector const&)
000606c0 t simplex_t::ClipRayToTetrahedronBase(Vector const&)
0002b8b0 t operator new[](unsigned int)
0002b8d0 t operator new[](unsigned int, int, char const*, int)
0006c690 t ConCommand::IsCommand() const
0005cab0 t CTraceAABB::SupportMap(Vector const&, Vector*) const
0005c9f0 t CTraceAABB::GetVertByIndex(int) const
00065c70 t CTraceAABB::Radius() const
00065c90 t CTraceCone::SupportMap(Vector const&, Vector*) const
00065c20 t CTraceCone::GetVertByIndex(int) const
00065c40 t CTraceCone::Radius() const
0007c6e0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Find(CUtlSymbolTable::CStringPoolIndex const&) const
00040fc0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00041090 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Find(CPhysicsListenerCollision::corepair_t const&) const
0006b4c0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t, unsigned short>, unsigned short> >::Find(CUtlMap<void*, void*, unsigned short, bool (*)(void* const&, void* const&)>::Node_t const&) const
00079dd0 t CUtlString::GetExtension() const
0007a130 t CUtlString::StripFilename() const
00079e90 t CUtlString::StripExtension() const
00079e30 t CUtlString::GetBaseFilename() const
00079580 t CUtlString::Get() const
00079560 t CUtlString::Length() const
000795a0 t CUtlString::operator char const*() const
00079620 t CUtlString::operator==(char const*) const
00079610 t CUtlString::operator==(CUtlString const&) const
0007ba30 t CUtlSymbol::StringNoLock() const
0007ba80 t CUtlSymbol::String() const
0007bb50 t CUtlSymbol::operator==(char const*) const
00093890 t hk_Matrix3::is_identity_rotation() const
0011c284 t IVP_Object::get_environment() const
0011c278 t IVP_Object::get_name() const
0011c26c t IVP_Object::get_type() const
0013b5f6 t IVP_U_Quat::set_matrix(IVP_U_Matrix3*) const
0013b530 t IVP_U_Quat::set_matrix(float (*) [4]) const
00138ea4 t IVP_U_Quat::inline_estimate_q_diff_to(IVP_U_Float_Quat const*) const
001387a6 t IVP_U_Quat::acos_quat(IVP_U_Quat const*) const
0015ebb0 t Quaternion::GetForward() const
0015ecd0 t Quaternion::GetUp() const
0015ec50 t Quaternion::GetLeft() const
00166cd0 t CPolyhedron::Center() const
00145000 t IVP_Mindist::get_synapse(int) const
00145010 t IVP_Mindist::get_sorted_synapse(int) const
00144e70 t IVP_Synapse::get_status() const
00144e90 t IVP_Synapse::get_synapse_mindist() const
00144e80 t IVP_Synapse::get_edge() const
00141ae0 t IVP_Synapse::get_ledge() const
00133b8e t IVP_U_Hesse::proj_on_plane(IVP_U_Point const*, IVP_U_Point*) const
001324da t IVP_U_Hesse::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*) const
00138528 t IVP_U_Hesse::get_dist(IVP_U_Float_Point const*) const
00132a26 t IVP_U_Plain::calc_intersect_with(IVP_U_Hesse const*, IVP_U_Straight*) const
001336e0 t IVP_U_Point::is_parallel(IVP_U_Point const*, float) const
0006ea00 t CEmptyConVar::GetName() const
0006ea20 t CEmptyConVar::IsFlagSet(int) const
00035d80 t CPhysCollide::GetAABBTree() const
00035d70 t CPhysCollide::GetCollideMap() const
00035d40 t CPhysCollide::GetSphereRadius() const
00035d10 t CPhysCollide::GetCompactSurface() const
00035d20 t CPhysCollide::GetOrthographicAreas() const
001644c0 t fourplanes_t::Get2Planes(VPlane*) const
00164470 t fourplanes_t::Get4Planes(VPlane*) const
00164320 t fourplanes_t::GetPlane(int, Vector*, float*) const
00094930 t hk_Transform::get_4x4_column_major(float*) const
001382e4 t IVP_U_Matrix::get_position() const
00139642 t IVP_U_Matrix::inline_mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
0013867c t IVP_U_Matrix::inline_vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00139924 t IVP_U_Matrix::inline_mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
0013856c t IVP_U_Matrix::inline_vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00138e3c t IVP_U_Matrix::get_4x4_column_major(float*) const
00135df0 t IVP_U_Matrix::mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00135036 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00136724 t IVP_U_Matrix::mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
0013509a t IVP_U_Matrix::vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001357ce t IVP_U_Matrix::mi2mult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00041140 t CUtlMultiList<void*, unsigned short>::IsValidList(unsigned short) const
000da1dc t IVP_CFEP_Hash::compare(void*, void*) const
00141620 t IVP_Collision::get_fvector_index(int) const
000f38d4 t IVP_MI_Vector::print() const
000f2d26 t IVP_MI_Vector::length() const
00139388 t IVP_U_Matrix3::inline_mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001385cc t IVP_U_Matrix3::inline_vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001394e6 t IVP_U_Matrix3::inline_mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00138624 t IVP_U_Matrix3::inline_vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00133f82 t IVP_U_Matrix3::get_determinante() const
00135946 t IVP_U_Matrix3::mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00135336 t IVP_U_Matrix3::vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00138cd8 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00138cfc t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
00138c90 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00138cb4 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
00136374 t IVP_U_Matrix3::mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00134fde t IVP_U_Matrix3::vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001382aa t IVP_U_Matrix3::get_elem(int, int) const
0013519a t IVP_U_Matrix3::mi2mult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
0006c650 t ConCommandBase::GetHelpText() const
0006c660 t ConCommandBase::IsRegistered() const
0006c550 t ConCommandBase::GetDLLIdentifier() const
0006c5f0 t ConCommandBase::GetName() const
0006ce60 t ConCommandBase::GetNext() const
0006c640 t ConCommandBase::GetFlags() const
0006c540 t ConCommandBase::IsCommand() const
0006c600 t ConCommandBase::IsFlagSet(int) const
0004aaa0 t CPhysicsObject::GetCollide() const
0004a9c0 t CPhysicsObject::GetDamping(float*, float*) const
0004a920 t CPhysicsObject::GetInertia() const
0004a900 t CPhysicsObject::GetInvMass() const
0004a720 t CPhysicsObject::IsMoveable() const
000509a0 t CPhysicsObject::GetContents() const
0004a8d0 t CPhysicsObject::GetGameData() const
0004bba0 t CPhysicsObject::GetPosition(Vector*, QAngle*) const
0004c690 t CPhysicsObject::GetVelocity(Vector*, Vector*) const
000509b0 t CPhysicsObject::IsPredicted() const
0004a630 t CPhysicsObject::GetGameFlags() const
0004a650 t CPhysicsObject::GetGameIndex() const
0004bfa0 t CPhysicsObject::LocalToWorld(Vector*, Vector const&) const
0004bf40 t CPhysicsObject::WorldToLocal(Vector*, Vector const&) const
0004a970 t CPhysicsObject::GetInvInertia() const
0004d0e0 t CPhysicsObject::IsControlling(IVP_Controller const*) const
0004cc20 t CPhysicsObject::IsDragEnabled() const
0004b600 t CPhysicsObject::GetContactPoint(Vector*, IPhysicsObject**) const
0004c800 t CPhysicsObject::GetSphereRadius() const
0004a700 t CPhysicsObject::IsMotionEnabled() const
0004aec0 t CPhysicsObject::OutputDebugInfo() const
0004a610 t CPhysicsObject::GetCallbackFlags() const
00050990 t CPhysicsObject::GetMaterialIndex() const
0004cca0 t CPhysicsObject::IsGravityEnabled() const
0004a6d0 t CPhysicsObject::GetCollisionHints() const
0004bca0 t CPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
0004b4b0 t CPhysicsObject::GetShadowPosition(Vector*, QAngle*) const
0004df50 t CPhysicsObject::GetSurfaceManager() const
0004df70 t CPhysicsObject::GetDragInDirection(IVP_U_Float_Point const&) const
0004b9d0 t CPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
0004ac50 t CPhysicsObject::IsCollisionEnabled() const
0004d450 t CPhysicsObject::IsControlledByGame() const
0004bee0 t CPhysicsObject::LocalToWorldVector(Vector*, Vector const&) const
0004be80 t CPhysicsObject::WorldToLocalVector(Vector*, Vector const&) const
0004dff0 t CPhysicsObject::CalculateLinearDrag(Vector const&) const
0004ca80 t CPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
0004aa80 t CPhysicsObject::GetShadowController() const
0004ab70 t CPhysicsObject::CalculateAngularDrag(Vector const&) const
0004bce0 t CPhysicsObject::CalculateForceOffset(Vector const&, Vector const&, Vector*, Vector*) const
000509e0 t CPhysicsObject::GetPredictedInterface() const
0004d490 t CPhysicsObject::IsMassCenterAtDefault() const
0004d0c0 t CPhysicsObject::GetVPhysicsEnvironment() const
0004ae00 t CPhysicsObject::IsAttachedToConstraint(bool) const
0004ce00 t CPhysicsObject::CalculateVelocityOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004c610 t CPhysicsObject::GetMassCenterLocalSpace() const
0004e030 t CPhysicsObject::GetAngularDragInDirection(IVP_U_Float_Point const&) const
0004a8e0 t CPhysicsObject::GetMass() const
0004aab0 t CPhysicsObject::GetName() const
0004ac30 t CPhysicsObject::IsFluid() const
0004c2a0 t CPhysicsObject::IsAsleep() const
00050980 t CPhysicsObject::IsHinged() const
0004a660 t CPhysicsObject::IsStatic() const
0004aac0 t CPhysicsObject::GetEnergy() const
0004d7a0 t CPhysicsObject::GetVolume() const
0004ac10 t CPhysicsObject::IsTrigger() const
000bc950 t IVP_point_hash::element_at(int) const
000bc940 t IVP_point_hash::len() const
000bc9a0 t IVP_point_hash::print() const
000bc6d0 t IVP_point_hash::compare(void*, void*) const
0013a4fa t IVP_U_Min_Hash::is_elem(void*) const
00132634 t IVP_U_Straight::get_quad_dist_to_point(IVP_U_Point*) const
00132470 t IVP_U_Straight::calc_orthogonal_vec_from_point(IVP_U_Point const*, IVP_U_Point*) const
000794a0 t CUtlBinaryBlock::Get(void*, int) const
000794e0 t CUtlBinaryBlock::operator==(CUtlBinaryBlock const&) const
0007a540 t CUtlSymbolTable::FindPoolWithSpace(int) const
0007b560 t CUtlSymbolTable::Find(char const*) const
0007a440 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
0007a590 t CUtlSymbolTable::String(CUtlSymbol) const
000ff798 t IVP_Environment::get_time_manager() const
000ff7ee t IVP_Environment::get_debug_manager() const
000ff832 t IVP_Environment::get_range_manager() const
000ff8a4 t IVP_Environment::get_static_object() const
000ff898 t IVP_Environment::get_anomaly_limits() const
000ff8ea t IVP_Environment::get_gravity_length() const
000ff7fc t IVP_Environment::get_memory_manager() const
000ff88c t IVP_Environment::get_anomaly_manager() const
000ff7e2 t IVP_Environment::get_cluster_manager() const
000ff7b0 t IVP_Environment::get_mindist_manager() const
000ff7d6 t IVP_Environment::get_ov_tree_manager() const
000ff84c t IVP_Environment::get_collision_filter() const
000ff83e t IVP_Environment::get_material_manager() const
000ff880 t IVP_Environment::get_universe_manager() const
000ff7bc t IVP_Environment::get_sim_units_manager() const
000ff7a4 t IVP_Environment::get_controller_manager() const
000ff872 t IVP_Environment::get_active_value_manager() const
000ff7c8 t IVP_Environment::get_cache_object_manager() const
0011c362 t IVP_Real_Object::to_nonconst() const
00119602 t IVP_Real_Object::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
00118b5c t IVP_Real_Object::get_geom_radius() const
0011c354 t IVP_Real_Object::get_extra_radius() const
0011c378 t IVP_Real_Object::get_original_core() const
0011a3fa t IVP_Real_Object::calc_at_quaternion(IVP_Time, IVP_U_Quat*, IVP_U_Point*) const
0011c32a t IVP_Real_Object::get_surface_manager() const
001190ac t IVP_Real_Object::get_geom_center_speed() const
00119788 t IVP_Real_Object::get_m_world_f_object_AT(IVP_U_Matrix*) const
00118b6e t IVP_Real_Object::get_geom_center_speed_vec(IVP_U_Point*) const
0011a57a t IVP_Real_Object::get_quat_world_f_object_AT(IVP_U_Quat*, IVP_U_Point*) const
00118b2e t IVP_Real_Object::get_geom_center_world_space(IVP_U_Point*) const
0011c36a t IVP_Real_Object::get_core() const
001278a4 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Point const*, IVP_U_Point*) const
00127394 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001278fe t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
0012733a t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001272d6 t IVP_Cache_Object::transform_position_to_world_coords(IVP_U_Float_Point const*, IVP_U_Point*) const
00127276 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Float_Point*) const
00127958 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
000dba58 t IVP_Compact_Edge::get_opposite() const
000db988 t IVP_Compact_Edge::get_triangle() const
000db9e6 t IVP_Compact_Edge::get_edge_index() const
000db722 t IVP_Compact_Edge::get_is_virtual() const
000db9b0 t IVP_Compact_Edge::get_start_point(IVP_Compact_Ledge const*) const
000db994 t IVP_Compact_Edge::get_compact_ledge() const
000db710 t IVP_Compact_Edge::get_opposite_index() const
000db704 t IVP_Compact_Edge::get_start_point_index() const
000db9c6 t IVP_Compact_Edge::get_next() const
000dba18 t IVP_Compact_Edge::get_prev() const
00144f00 t IVP_Mindist_Base::get_length() const
00144ef0 t IVP_Mindist_Base::get_mindist_synapse(int) const
00141340 t IVP_ov_tree_hash::compare(void*, void*) const
00141ad0 t IVP_Synapse_Real::check_consistency_of_ledge(IVP_Compact_Edge const*) const
00144fa0 t IVP_Synapse_Real::get_core() const
000db89c t IVP_Compact_Ledge::is_terminal() const
000db8c6 t IVP_Compact_Ledge::get_n_points() const
000db902 t IVP_Compact_Ledge::get_client_data() const
000db8ba t IVP_Compact_Ledge::get_n_triangles() const
000db870 t IVP_Compact_Ledge::get_point_array() const
000db922 t IVP_Compact_Ledge::get_cache_handle() const
000db884 t IVP_Compact_Ledge::get_first_triangle() const
000db8ae t IVP_Compact_Ledge::get_ledgetree_node() const
000db8de t IVP_Compact_Ledge::get_size() const
001006ee t IVP_Contact_Point::is_same_as(IVP_Mindist const*) const
000bcae0 t IVP_I_Point_VHash::element_at(int) const
000bcad0 t IVP_I_Point_VHash::len() const
000bcb30 t IVP_I_Point_VHash::print() const
000bc6a0 t IVP_I_Point_VHash::compare(void*, void*) const
00133d80 t IVP_U_Float_Hesse::proj_on_plane(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0013854a t IVP_U_Float_Hesse::get_dist(IVP_U_Float_Point const*) const
001383ae t IVP_U_Float_Point::dot_product(IVP_U_Float_Point const*) const
001384b0 t IVP_U_Float_Point::quad_length() const
00134fbc t IVP_U_Float_Point::real_length() const
00134bee t IVP_U_Float_Point::fast_real_length() const
001384fc t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point3 const*) const
001384d0 t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point const*) const
00134568 t IVP_U_Float_Point::print(char const*) const
0013306c t IVP_U_String_Hash::find(char const*) const
00037940 t CPhysicsConstraint::WriteFixed(constraint_fixedparams_t&) const
00037c60 t CPhysicsConstraint::WriteHinge(constraint_hingeparams_t&) const
0003bc00 t CPhysicsConstraint::GetGameData() const
000383c0 t CPhysicsConstraint::WriteLength(constraint_lengthparams_t&) const
00038150 t CPhysicsConstraint::WritePulley(constraint_pulleyparams_t&) const
00037a10 t CPhysicsConstraint::WriteRagdoll(constraint_ragdollparams_t&) const
00037ed0 t CPhysicsConstraint::WriteSliding(constraint_slidingparams_t&) const
00038570 t CPhysicsConstraint::WriteBallsocket(constraint_ballsocketparams_t&) const
000386f0 t CPhysicsConstraint::WriteToTemplate(vphysics_save_cphysicsconstraint_t&, vphysics_save_constraint_t&) const
000363d0 t CPhysicsConstraint::GetAttachedObject() const
00037850 t CPhysicsConstraint::GetConstraintGroup() const
000363c0 t CPhysicsConstraint::GetReferenceObject() const
00038820 t CPhysicsConstraint::GetConstraintParams(constraint_breakableparams_t*) const
00036b20 t CPhysicsConstraint::GetConstraintTransform(matrix3x4_t*, matrix3x4_t*) const
00037870 t CPhysicsConstraint::ReadBreakableConstraint(constraint_breakableparams_t&) const
000765d0 t CUtlCharConversion::GetDelimiter() const
000765c0 t CUtlCharConversion::GetEscapeChar() const
000765e0 t CUtlCharConversion::GetDelimiterLength() const
00076610 t CUtlCharConversion::GetConversionLength(char) const
000765f0 t CUtlCharConversion::GetConversionString(char) const
00076630 t CUtlCharConversion::MaxConversionLength() const
001264c8 t IVP_Anomaly_Limits::get_max_velocity() const
001264d4 t IVP_Anomaly_Limits::get_max_angular_velocity_per_psi() const
000bc640 t IVP_I_FPoint_VHash::element_at(int) const
000bc630 t IVP_I_FPoint_VHash::len() const
000bc690 t IVP_I_FPoint_VHash::print() const
000bc450 t IVP_I_FPoint_VHash::compare(void*, void*) const
00046b70 t CIVPMaterialManager::RemapIVPMaterialIndex(int) const
0003c670 t CPhysicsEnvironment::GetGravity(Vector*) const
0003c9b0 t CPhysicsEnvironment::GetAirDensity() const
0003c730 t CPhysicsEnvironment::GetObjectList(int*) const
0003c810 t CPhysicsEnvironment::IsInSimulation() const
0003c950 t CPhysicsEnvironment::GetActiveObjects(IPhysicsObject**) const
0003c7a0 t CPhysicsEnvironment::GetNextFrameTime() const
0003c7d0 t CPhysicsEnvironment::GetDeltaFrameTime(int) const
0003c770 t CPhysicsEnvironment::GetSimulationTime() const
0003fda0 t CPhysicsEnvironment::ShouldQuickDelete() const
0003c6d0 t CPhysicsEnvironment::GetAlternateGravity(Vector*) const
0003c930 t CPhysicsEnvironment::GetActiveObjectCount() const
0003d350 t CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide*) const
0003c750 t CPhysicsEnvironment::GetSimulationTimestep() const
0003c720 t CPhysicsEnvironment::GetObjectSerializeSize(IPhysicsObject*) const
0003c9f0 t CPhysicsEnvironment::GetPerformanceSettings(physics_performanceparams_t*) const
0013ff00 t IVP_OV_Tree_Manager::box_contains_box(IVP_OV_Node_Data const*, IVP_OV_Node const*, int) const
00140490 t IVP_OV_Tree_Manager::find_smallest_box(IVP_OV_Node const*, IVP_OV_Node const*) const
001403e0 t IVP_OV_Tree_Manager::box_overlaps_with_box(IVP_OV_Node const*, IVP_OV_Node const*, int) const
0013fee0 t IVP_OV_Tree_Manager::log_base2(float) const
000e7b5c t IVP_Template_Anchor::get_anchor_position_ws() const
000468e0 t CPhysicsSurfaceProps::GetPropName(int) const
00046ac0 t CPhysicsSurfaceProps::GetIVPMaterial(int) const
00046a00 t CPhysicsSurfaceProps::GetSurfaceIndex(char const*) const
000464c0 t CPhysicsSurfaceProps::SurfacePropCount() const
000469b0 t CPhysicsSurfaceProps::GetInternalSurface(int) const
000464f0 t CPhysicsSurfaceProps::GetIVPMaterialIndex(IVP_Material const*) const
00046ad0 t CPhysicsSurfaceProps::GetReservedFallBack(int) const
00046800 t CPhysicsSurfaceProps::GetPhysicsParameters(int, surfacephysicsparams_t*) const
00046850 t CPhysicsSurfaceProps::GetPhysicsProperties(int, float*, float*, float*, float*) const
00048410 t CPhysicsSurfaceProps::RemapIVPMaterialIndex(int) const
00046570 t CPhysicsSurfaceProps::GetMaterialIndexDataOps() const
000464d0 t CPhysicsSurfaceProps::GetReservedMaterialName(int) const
000469d0 t CPhysicsSurfaceProps::GetReservedSurfaceIndex(char const*) const
000469c0 t CPhysicsSurfaceProps::IsReservedMaterialIndex(int) const
000465e0 t CPhysicsSurfaceProps::GetString(unsigned short) const
000db812 t IVP_Compact_Triangle::get_next_tri() const
000db7a4 t IVP_Compact_Triangle::get_tri_index() const
000db7e8 t IVP_Compact_Triangle::get_first_edge() const
000db7d6 t IVP_Compact_Triangle::get_is_virtual() const
000db7b4 t IVP_Compact_Triangle::get_pierce_index() const
000dba84 t IVP_Compact_Triangle::get_compact_ledge() const
000db7c6 t IVP_Compact_Triangle::get_material_index() const
000db800 t IVP_Compact_Triangle::get_edge(int) const
00118bfa t IVP_Controller_VHash::compare(void*, void*) const
000fb5d8 t IVP_Core_Fast_Static::get_inv_mass() const
000fb5c0 t IVP_Core_Fast_Static::get_rot_inertia() const
000fb5cc t IVP_Core_Fast_Static::get_inv_rot_inertia() const
000fb5b4 t IVP_Core_Fast_Static::get_mass() const
001005f2 t IVP_Synapse_Friction::is_same_as(IVP_Synapse_Real const*) const
00100592 t IVP_Synapse_Friction::get_material_index() const
0006dca0 t SplitScreenConVarRef::IsValid() const
00129a4c t IVP_Active_Value_Hash::compare(void*, void*) const
001541e0 t IVP_Controller_Motion::get_max_torque() const
00154210 t IVP_Controller_Motion::get_damp_factor() const
00154200 t IVP_Controller_Motion::get_force_factor() const
00154220 t IVP_Controller_Motion::get_torque_factor() const
00154250 t IVP_Controller_Motion::get_target_orientation() const
00154240 t IVP_Controller_Motion::get_target_position_ws() const
00154230 t IVP_Controller_Motion::get_angular_damp_factor() const
001541f0 t IVP_Controller_Motion::get_max_translation_force() const
000db6b2 t IVP_Compact_Poly_Point::get_client_data() const
000f71e2 t IVP_Controller_Phantom::get_object() const
000f71ca t IVP_Controller_Phantom::get_intruding_cores() const
000f71be t IVP_Controller_Phantom::get_intruding_objects() const
0005c430 t CPhysCollideVirtualMesh::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
0005ad20 t CPhysCollideVirtualMesh::GetMassCenter() const
0005af50 t CPhysCollideVirtualMesh::GetSphereRadius() const
0005c360 t CPhysCollideVirtualMesh::OutputDebugInfo() const
0005c1c0 t CPhysCollideVirtualMesh::GetVCollideIndex() const
0005c370 t CPhysCollideVirtualMesh::SerializeToBuffer(char*, bool) const
0005b2b0 t CPhysCollideVirtualMesh::GetSphereRadiusIVP() const
0005c330 t CPhysCollideVirtualMesh::CreateSurfaceManager(short&) const
0005c1e0 t CPhysCollideVirtualMesh::GetOrthographicAreas() const
0005c170 t CPhysCollideVirtualMesh::GetSerializationSize() const
00045360 t CPhysicsFluidController::GetDensity() const
00045370 t CPhysicsFluidController::GetContents() const
00045270 t CPhysicsFluidController::GetGameData() const
000454b0 t CPhysicsFluidController::GetIVPObject() const
00045280 t CPhysicsFluidController::GetSurfacePlane(Vector*, float*) const
0004bc30 t CPredictedPhysicsObject::GetPosition(Vector*, QAngle*) const
0004c790 t CPredictedPhysicsObject::GetVelocity(Vector*, Vector*) const
000509f0 t CPredictedPhysicsObject::IsPredicted() const
0004ca30 t CPredictedPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
0004bb50 t CPredictedPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
0004cbb0 t CPredictedPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
00050a00 t CPredictedPhysicsObject::GetPredictedInterface() const
0004c880 t CPredictedPhysicsObject::IsAsleep() const
0002b7b0 t CSplitScreenAddedConVar::GetBaseName() const
0002b7e0 t CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
001543c0 t IVP_SurfaceManager_Ball::get_mass_center(IVP_U_Float_Point*) const
001543b0 t IVP_SurfaceManager_Ball::get_single_convex() const
00154460 t IVP_SurfaceManager_Ball::get_rotation_inertia(IVP_U_Float_Point*) const
00154490 t IVP_SurfaceManager_Ball::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00035e10 t CPhysCollideCompactSurface::GetAABBTree() const
00034060 t CPhysCollideCompactSurface::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
00035e00 t CPhysCollideCompactSurface::GetCollideMap() const
00031d80 t CPhysCollideCompactSurface::GetMassCenter() const
00035dc0 t CPhysCollideCompactSurface::GetSphereRadius() const
000345e0 t CPhysCollideCompactSurface::OutputDebugInfo() const
00035db0 t CPhysCollideCompactSurface::GetVCollideIndex() const
00034580 t CPhysCollideCompactSurface::ComputeHullInfo_r(CPhysCollideCompactSurface::hullinfo_t*, IVP_Compact_Ledgetree_Node const*) const
00035df0 t CPhysCollideCompactSurface::GetCompactSurface() const
00033f10 t CPhysCollideCompactSurface::SerializeToBuffer(char*, bool) const
00032370 t CPhysCollideCompactSurface::CreateSurfaceManager(short&) const
00031e20 t CPhysCollideCompactSurface::GetOrthographicAreas() const
00031d60 t CPhysCollideCompactSurface::GetSerializationSize() const
000db960 t IVP_Compact_Ledgetree_Node::is_terminal() const
000db972 t IVP_Compact_Ledgetree_Node::get_compact_hull() const
000db93e t IVP_Compact_Ledgetree_Node::get_compact_ledge() const
000db94a t IVP_Compact_Ledgetree_Node::left_son() const
000db956 t IVP_Compact_Ledgetree_Node::right_son() const
001095c4 t IVP_Great_Matrix_Many_Zero::print_great_matrix(char const*) const
00108670 t IVP_Great_Matrix_Many_Zero::get_value(int, int) const
00128a70 t IVP_SurfaceManager_Polygon::get_mass_center(IVP_U_Float_Point*) const
00128ab0 t IVP_SurfaceManager_Polygon::get_single_convex() const
00128fbc t IVP_SurfaceManager_Polygon::get_compact_surface() const
00128a8e t IVP_SurfaceManager_Polygon::get_rotation_inertia(IVP_U_Float_Point*) const
00128bfa t IVP_SurfaceManager_Polygon::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
0011c2ec t IVP_Real_Object_Fast_Static::get_shift_core_f_object() const
0011c3ca t IVP_Real_Object_Fast_Static::get_shift_core_f_object_sse() const
00096f04 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_debug_output(IVP_Compact_Ledgetree_Node const*) const
00155a40 t IVP_Object_Callback_Table_Hash::compare(void*, void*) const
0005ade0 t IVP_SurfaceManager_VirtualMesh::get_mass_center(IVP_U_Float_Point*) const
0005bb10 t IVP_SurfaceManager_VirtualMesh::get_single_convex() const
0005ae50 t IVP_SurfaceManager_VirtualMesh::get_rotation_inertia(IVP_U_Float_Point*) const
0005ada0 t IVP_SurfaceManager_VirtualMesh::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00141690 t IVP_Collision_Callback_Table_Hash::compare(void*, void*) const
0006d8f0 t ConVar::GetDefault() const
0006c760 t ConVar::GetBaseName() const
0006c6f0 t ConVar::GetHelpText() const
0006d8c0 t ConVar::GetMaxValue() const
0006d8b0 t ConVar::GetMinValue() const
0006c720 t ConVar::IsRegistered() const
0006c780 t ConVar::GetSplitScreenPlayerSlot() const
0002b770 t ConVar::GetInt() const
0006d890 t ConVar::GetMax(float&) const
0006d870 t ConVar::GetMin(float&) const
0006d8e0 t ConVar::HasMax() const
0006d8d0 t ConVar::HasMin() const
0006c740 t ConVar::GetName() const
0006c6e0 t ConVar::GetFlags() const
0002b740 t ConVar::GetFloat() const
0006c790 t ConVar::IsCommand() const
0006c6c0 t ConVar::IsFlagSet(int) const
0016c4e0 t VMatrix::Transpose3x3() const
0016c1d0 t VMatrix::InverseGeneral(VMatrix&) const
0016c590 t VMatrix::IsRotationMatrix() const
0016c370 t VMatrix::NormalizeBasisVectors() const
0016c1e0 t VMatrix::GetScale() const
0016d4d0 t VMatrix::InverseTR(VMatrix&) const
0016d4a0 t VMatrix::InverseTR() const
0016b8d0 t VMatrix::MatrixMul(VMatrix const&, VMatrix&) const
0016c430 t VMatrix::Transpose() const
0016b8a0 t VMatrix::operator==(VMatrix const&) const
0016d920 t VMatrix::operator*(VPlane const&) const
0016bfc0 t VMatrix::operator*(VMatrix const&) const
0006d360 t CCommand::FindArgInt(char const*, int) const
0006d2d0 t CCommand::FindArg(char const*) const
001545f0 t IVP_Ball::get_radius() const
000f92ea t IVP_Core::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
000fad7a t IVP_Core::calc_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000f7b80 t IVP_Core::test_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*, IVP_U_Float_Point*) const
000fa8be t IVP_Core::get_surface_speed(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000fae8e t IVP_Core::calc_correct_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000fb630 t IVP_Core::inline_calc_at_position(IVP_Time, IVP_U_Point*) const
000f79de t IVP_Core::calc_virt_mass_worst_case(IVP_U_Float_Point const*) const
000f7930 t IVP_Core::get_surface_speed_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000fb822 t IVP_Core::inline_calc_at_quaternion(IVP_Time, IVP_U_Quat*) const
00133362 t IVP_Hash::find(char const*) const
0006da40 t ConVarRef::IsValid() const
0005cc40 t CTraceIVP::SupportMap(Vector const&, Vector*) const
0005cb40 t CTraceIVP::GetVertByIndex(int) const
00065c60 t CTraceIVP::Radius() const
0005e520 t CTraceRay::SupportMap(Vector const&, Vector*) const
00165580 t Frustum_t::GetCorners(Vector*) const
00164af0 t Frustum_t::Intersects(Vector const&, Vector const&) const
00164bb0 t Frustum_t::Intersects(float __vector(4) const&, float __vector(4) const&) const
00164bb0 t Frustum_t::Intersects(float __vector const&, float __vector const&) const
00165700 t Frustum_t::Intersects(Frustum_t&) const
00164880 t Frustum_t::CullBoxCenterExtents(Vector const&, Vector const&) const
00164930 t Frustum_t::CullBoxCenterExtents(float __vector(4) const&, float __vector(4) const&) const
00164930 t Frustum_t::CullBoxCenterExtents(float __vector const&, float __vector const&) const
00164c70 t Frustum_t::IntersectsCenterExtents(Vector const&, Vector const&) const
00164d20 t Frustum_t::IntersectsCenterExtents(float __vector(4) const&, float __vector(4) const&) const
00164d20 t Frustum_t::IntersectsCenterExtents(float __vector const&, float __vector const&) const
00164720 t Frustum_t::CullBox(Vector const&, Vector const&) const
001647d0 t Frustum_t::CullBox(float __vector(4) const&, float __vector(4) const&) const
001647d0 t Frustum_t::CullBox(float __vector const&, float __vector const&) const
001649e0 t Frustum_t::Contains(Vector const&, Vector const&) const
00164590 t Frustum_t::GetPlane(int, Vector*, float*) const
001646c0 t Frustum_t::GetPlanes(VPlane*) const
00172e58 t __gnu_cxx::__concurrence_lock_error::what() const
00172e6e t __gnu_cxx::__concurrence_unlock_error::what() const
000f71fa t IVP_U_Set<IVP_Real_Object>::compare(void*, void*) const
000f721e t IVP_U_Set<IVP_Mindist_Base>::compare(void*, void*) const
000f720c t IVP_U_Set<IVP_Core>::compare(void*, void*) const
0013dd1c t IVP_VHash::print() const
0013d6a0 t IVP_VHash::find_elem(void const*, unsigned int) const
001727a6 t std::bad_exception::what() const
00172790 t std::exception::what() const
00172818 t std::bad_exception::~bad_exception()
00172726 t std::bad_exception::~bad_exception()
00172726 t std::bad_exception::~bad_exception()
00172846 t std::exception::~exception()
00172708 t std::exception::~exception()
00172708 t std::exception::~exception()
         U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
0002b870 t operator new(unsigned int)
0002b890 t operator new(unsigned int, int, char const*, int)
00166dd0 t operator|=(PolyhedronLinePlanarity&, PolyhedronLinePlanarity const&)
00172c36 t std::unexpected()
00172c55 t std::set_terminate(void (*)())
00172c74 t std::set_unexpected(void (*)())
00172981 t std::uncaught_exception()
00172bff t std::terminate()
0014ade0 t non-virtual thunk to IVP_Mindist_Recursive::get_spawned_mindist_count()
0014adb0 t non-virtual thunk to IVP_Mindist_Recursive::change_spawned_mindist_count(int)
0014a630 t non-virtual thunk to IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
0014a600 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
0014a510 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
000e316a t non-virtual thunk to IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000e5b8b t non-virtual thunk to IVP_Actuator_Extra::~IVP_Actuator_Extra()
000e5cb0 t non-virtual thunk to IVP_Actuator_Extra::~IVP_Actuator_Extra()
000e465c t non-virtual thunk to IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
000e6ac3 t non-virtual thunk to IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000e6b64 t non-virtual thunk to IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000e475a t non-virtual thunk to IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000e758a t non-virtual thunk to IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000e7872 t non-virtual thunk to IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000e46c0 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
000e7675 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000e7a2c t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000e83a8 t non-virtual thunk to IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000e8ced t non-virtual thunk to IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000e8e12 t non-virtual thunk to IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
0014b0c0 t non-virtual thunk to IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
0014b2d0 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0014b190 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0006e9b0 t non-virtual thunk to CEmptyConVar::SetValue(float)
0006e9d0 t non-virtual thunk to CEmptyConVar::SetValue(int)
0006e990 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
0006c890 t non-virtual thunk to ConVar::SetValue(Color)
0006c830 t non-virtual thunk to ConVar::SetValue(float)
0006c860 t non-virtual thunk to ConVar::SetValue(int)
0006c800 t non-virtual thunk to ConVar::SetValue(char const*)
0006e9f0 t non-virtual thunk to CEmptyConVar::GetName() const
0006ea10 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
0002b7a0 t non-virtual thunk to CSplitScreenAddedConVar::GetBaseName() const
0002b7d0 t non-virtual thunk to CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
0006c750 t non-virtual thunk to ConVar::GetBaseName() const
0006c770 t non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
0006c730 t non-virtual thunk to ConVar::GetName() const
0006c6b0 t non-virtual thunk to ConVar::IsFlagSet(int) const
0012ab01 t non-virtual thunk to IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
00131238 t non-virtual thunk to IVP_U_Active_Add::~IVP_U_Active_Add()
001314b8 t non-virtual thunk to IVP_U_Active_Add::~IVP_U_Active_Add()
0012aa68 t non-virtual thunk to IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
00130ae0 t non-virtual thunk to IVP_U_Active_Sub::~IVP_U_Active_Sub()
00130d60 t non-virtual thunk to IVP_U_Active_Sub::~IVP_U_Active_Sub()
0012ada1 t non-virtual thunk to IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
0012f5e3 t non-virtual thunk to IVP_U_Active_Mult::~IVP_U_Active_Mult()
0012feaf t non-virtual thunk to IVP_U_Active_Mult::~IVP_U_Active_Mult()
0012a926 t non-virtual thunk to IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
0012f9ed t non-virtual thunk to IVP_U_Active_Sine::~IVP_U_Active_Sine()
0012fb8c t non-virtual thunk to IVP_U_Active_Sine::~IVP_U_Active_Sine()
0012acfb t non-virtual thunk to IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
0012f121 t non-virtual thunk to IVP_U_Active_Limit::~IVP_U_Active_Limit()
0012f2c0 t non-virtual thunk to IVP_U_Active_Limit::~IVP_U_Active_Limit()
0012ab9d t non-virtual thunk to IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
00131990 t non-virtual thunk to IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
00131b30 t non-virtual thunk to IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0012a87e t non-virtual thunk to IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
0012dadc t non-virtual thunk to IVP_U_Active_Square::~IVP_U_Active_Square()
0012dc0b t non-virtual thunk to IVP_U_Active_Square::~IVP_U_Active_Square()
0012ac52 t non-virtual thunk to IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
0012e70f t non-virtual thunk to IVP_U_Active_Switch::~IVP_U_Active_Switch()
0012ea78 t non-virtual thunk to IVP_U_Active_Switch::~IVP_U_Active_Switch()
00129eeb t non-virtual thunk to IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0012dd32 t non-virtual thunk to IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0012e080 t non-virtual thunk to IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0012a9cd t non-virtual thunk to IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
00130388 t non-virtual thunk to IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00130608 t non-virtual thunk to IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
00129e89 t non-virtual thunk to IVP_U_Active_Terminal_Int::update_int()
00132142 t non-virtual thunk to IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001321de t non-virtual thunk to IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0012a80a t non-virtual thunk to IVP_U_Active_Terminal_Double::update_float()
00132272 t non-virtual thunk to IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
0013230e t non-virtual thunk to IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
00129193 t non-virtual thunk to IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
0012e708 t non-virtual thunk to IVP_U_Active_Switch::~IVP_U_Active_Switch()
0012ea71 t non-virtual thunk to IVP_U_Active_Switch::~IVP_U_Active_Switch()
00057050 t non-virtual thunk to CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
00057010 t non-virtual thunk to CPhysicsSpring::event_object_created(IVP_Event_Object*)
00056ab0 t non-virtual thunk to CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
00057030 t non-virtual thunk to CPhysicsSpring::event_object_revived(IVP_Event_Object*)
00056b40 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
00056ad0 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
00043ab0 t non-virtual thunk to CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
00040ad0 t non-virtual thunk to CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
000404f0 t non-virtual thunk to CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00040560 t non-virtual thunk to CCollisionSolver::max_collision_checks_exceeded(int)
000437f0 t non-virtual thunk to CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00040510 t non-virtual thunk to CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
000413d0 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00041300 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00031b90 t non-virtual thunk to CPhysics_Airboat::get_controller_name()
0002ebc0 t non-virtual thunk to CPhysics_Airboat::get_controller_priority()
000313c0 t non-virtual thunk to CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0002ee40 t non-virtual thunk to CPhysics_Airboat::get_associated_controlled_cores()
0002ee60 t non-virtual thunk to CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
0002f0e0 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
0002f020 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00051290 t non-virtual thunk to CPlayerController::IsInContact()
00051100 t non-virtual thunk to CPlayerController::GetLastImpulse(Vector*)
00051770 t non-virtual thunk to CPlayerController::GetContactState(unsigned short)
00051270 t non-virtual thunk to CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
000511c0 t non-virtual thunk to CPlayerController::GetPushMassLimit()
00051180 t non-virtual thunk to CPlayerController::SetPushMassLimit(float)
000511e0 t non-virtual thunk to CPlayerController::GetPushSpeedLimit()
00051ad0 t non-virtual thunk to CPlayerController::GetShadowPosition(Vector*, QAngle*)
00051810 t non-virtual thunk to CPlayerController::GetShadowVelocity(Vector*)
000511a0 t non-virtual thunk to CPlayerController::SetPushSpeedLimit(float)
00051250 t non-virtual thunk to CPlayerController::Jump()
00051b80 t non-virtual thunk to CPlayerController::StepUp(float)
000521b0 t non-virtual thunk to CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00051960 t non-virtual thunk to CPlayerController::MaxSpeed(Vector const&)
00051160 t non-virtual thunk to CPlayerController::GetObject()
00052560 t non-virtual thunk to CPlayerController::SetObject(IPhysicsObject*)
000510d0 t non-virtual thunk to CPlayerController::WasFrozen()
00052670 t non-virtual thunk to CPlayerController::~CPlayerController()
000525f0 t non-virtual thunk to CPlayerController::~CPlayerController()
00051620 t non-virtual thunk to CShadowController::GetMaxSpeed(float*, float*)
000513e0 t non-virtual thunk to CShadowController::AllowsRotation()
00051410 t non-virtual thunk to CShadowController::GetLastImpulse(Vector*)
000513b0 t non-virtual thunk to CShadowController::AllowsTranslation()
00051660 t non-virtual thunk to CShadowController::GetTargetPosition(Vector*, QAngle*)
000514e0 t non-virtual thunk to CShadowController::UseShadowMaterial(bool)
000515b0 t non-virtual thunk to CShadowController::GetTeleportDistance()
00051580 t non-virtual thunk to CShadowController::SetTeleportDistance(float)
00051550 t non-virtual thunk to CShadowController::ObjectMaterialChanged(int)
000514b0 t non-virtual thunk to CShadowController::IsPhysicallyControlled()
00051470 t non-virtual thunk to CShadowController::SetPhysicallyControlled(bool)
000516e0 t non-virtual thunk to CShadowController::StepUp(float)
00054310 t non-virtual thunk to CShadowController::Update(Vector const&, QAngle const&, float)
000515f0 t non-virtual thunk to CShadowController::MaxSpeed(float, float)
000540e0 t non-virtual thunk to CShadowController::~CShadowController()
00054080 t non-virtual thunk to CShadowController::~CShadowController()
0003bc50 t non-virtual thunk to CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003bc10 t non-virtual thunk to CPhysicsConstraint::event_object_created(IVP_Event_Object*)
00038ba0 t non-virtual thunk to CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003bc30 t non-virtual thunk to CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
00038b70 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
00038ae0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
0005ace0 t non-virtual thunk to CVehicleController::event_object_frozen(IVP_Event_Object*)
0005aca0 t non-virtual thunk to CVehicleController::event_object_created(IVP_Event_Object*)
00058b00 t non-virtual thunk to CVehicleController::event_object_deleted(IVP_Event_Object*)
0005acc0 t non-virtual thunk to CVehicleController::event_object_revived(IVP_Event_Object*)
00058b90 t non-virtual thunk to CVehicleController::~CVehicleController()
00058b30 t non-virtual thunk to CVehicleController::~CVehicleController()
00048a30 t non-virtual thunk to CPhysicsMotionController::GetObjects(IPhysicsObject**)
00048ac0 t non-virtual thunk to CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
00048cb0 t non-virtual thunk to CPhysicsMotionController::WakeObjects()
00049ac0 t non-virtual thunk to CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
00049540 t non-virtual thunk to CPhysicsMotionController::ClearObjects()
00048a10 t non-virtual thunk to CPhysicsMotionController::CountObjects()
00049510 t non-virtual thunk to CPhysicsMotionController::DetachObject(IPhysicsObject*)
00048b10 t non-virtual thunk to CPhysicsMotionController::SetEventHandler(IMotionEvent*)
00049840 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
00049710 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
00051300 t non-virtual thunk to CPredictedPlayerController::GetLastImpulse(Vector*)
00051cd0 t non-virtual thunk to CPredictedPlayerController::GetShadowPosition(Vector*, QAngle*)
00051900 t non-virtual thunk to CPredictedPlayerController::GetShadowVelocity(Vector*)
000512e0 t non-virtual thunk to CPredictedPlayerController::Jump()
00051c20 t non-virtual thunk to CPredictedPlayerController::StepUp(float)
00053190 t non-virtual thunk to CPredictedPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00051a80 t non-virtual thunk to CPredictedPlayerController::MaxSpeed(Vector const&)
000525c0 t non-virtual thunk to CPredictedPlayerController::SetObject(IPhysicsObject*)
00056220 t non-virtual thunk to CPredictedPlayerController::~CPredictedPlayerController()
00056360 t non-virtual thunk to CPredictedPlayerController::~CPredictedPlayerController()
000f0047 t non-virtual thunk to IVP_Controller_Raycast_Car::get_controller_priority()
000f1dd1 t non-virtual thunk to IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f243a t non-virtual thunk to IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000f241a t non-virtual thunk to IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000f18d5 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000f198d t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
00049a90 t non-virtual thunk to CPredictedPhysicsMotionController::~CPredictedPhysicsMotionController()
00049980 t non-virtual thunk to CPredictedPhysicsMotionController::~CPredictedPhysicsMotionController()
0003c5f0 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003c260 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003c230 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000560d0 t non-virtual thunk to CPlayerController::event_object_frozen(IVP_Event_Object*)
00056090 t non-virtual thunk to CPlayerController::event_object_created(IVP_Event_Object*)
00051200 t non-virtual thunk to CPlayerController::event_object_deleted(IVP_Event_Object*)
000560b0 t non-virtual thunk to CPlayerController::event_object_revived(IVP_Event_Object*)
00052660 t non-virtual thunk to CPlayerController::~CPlayerController()
000525e0 t non-virtual thunk to CPlayerController::~CPlayerController()
00040340 t non-virtual thunk to CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
000402c0 t non-virtual thunk to CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
000402a0 t non-virtual thunk to CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040280 t non-virtual thunk to CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000403c0 t non-virtual thunk to CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
00056210 t non-virtual thunk to CPredictedPlayerController::~CPredictedPlayerController()
00056350 t non-virtual thunk to CPredictedPlayerController::~CPredictedPlayerController()
0017f18c r typeinfo for ConCommand
0017e608 r typeinfo for CTraceAABB
0017e704 r typeinfo for CTraceCone
00192ac0 r typeinfo for hk_Console
00180794 r typeinfo for hk_Link_EF
0017a11c r typeinfo for IAppSystem
001dd4c0 d typeinfo for IVP_Object
0019254c r typeinfo for CPolyhedron
0017e740 r typeinfo for IConvexInfo
001dd4b4 d typeinfo for IVP_Cluster
00191750 r typeinfo for IVP_Mindist
001dd5c0 d typeinfo for IVP_Polygon
00191650 r typeinfo for IVP_Synapse
0017e484 r typeinfo for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0017bcb4 r typeinfo for CDeleteProxy<IPhysicsConstraint>
0017f40c r typeinfo for CEmptyConVar
0017ab14 r typeinfo for CPhysCollide
0017e6e4 r typeinfo for CTraceSolver
0017ab28 r typeinfo for IPhysCollide
0017e6dc r typeinfo for ITraceObject
001dcda4 d typeinfo for IVP_Actuator
001dd85c d typeinfo for IVP_Material
001898c0 r typeinfo for IVP_Triangle
0018096c r typeinfo for aligned_tmp_t
0017bc40 r typeinfo for CSleepObjects
0017bcec r typeinfo for CVoidPairHash
001808a8 r typeinfo for hk_Constraint
001ddfd4 d typeinfo for IVP_3D_Solver
001dc848 d typeinfo for IVP_CFEP_Hash
001914a4 r typeinfo for IVP_Collision
0017a0dc r typeinfo for CBaseAppSystem<IPhysics>
0017e6ec r typeinfo for CDefConvexInfo
0017f174 r typeinfo for ConCommandBase
0017ccb4 r typeinfo for CPhysicsObject
0017da60 r typeinfo for CPhysicsSpring
0017eb40 r typeinfo for CVPhysicsParse
0017d30c r typeinfo for IPhysicsObject
0017db68 r typeinfo for IPhysicsSpring
001dd034 d typeinfo for IVP_Car_System
001de04c d typeinfo for IVP_Constraint
0017a398 r typeinfo for IVP_Controller
00191700 r typeinfo for IVP_OO_Watcher
001913d0 r typeinfo for IVP_OV_Element
00189080 r typeinfo for IVP_point_hash
001dc8f4 d typeinfo for IVP_Ray_Solver
001916c8 r typeinfo for IVP_Synapse_OO
001dd6c8 d typeinfo for IVP_Time_Event
0017a790 r typeinfo for CCollisionQuery
0017bc58 r typeinfo for CDragController
0017bce0 r typeinfo for CObjectPairHash
0017a084 r typeinfo for CTier0AppSystem<IPhysics>
0017a03c r typeinfo for CTier1AppSystem<IPhysics, 0>
0017ab20 r typeinfo for ICollisionQuery
0017d3a4 r typeinfo for ISaveRestoreOps
001dd490 d typeinfo for IVP_Real_Object
0017bc20 r typeinfo for CCollisionSolver
0017f4bc r typeinfo for CDataManagerBase
0017f424 r typeinfo for CDefaultAccessor
0017f5ec r typeinfo for CDllDemandLoader
0017a1c0 r typeinfo for CPhysics_Airboat
0017bcac r typeinfo for IDeleteQueueItem
00191670 r typeinfo for IVP_Mindist_Base
00191414 r typeinfo for IVP_ov_tree_hash
00191734 r typeinfo for IVP_Synapse_Real
001dd6b0 d typeinfo for IVP_Time_Event_D
001dd6a4 d typeinfo for IVP_Time_Event_N
001ddea0 d typeinfo for IVP_U_Active_Add
001ddf60 d typeinfo for IVP_U_Active_Int
001dde80 d typeinfo for IVP_U_Active_Sub
001dd2cc d typeinfo for IVP_U_Set_Active<IVP_Real_Object>
001dd284 d typeinfo for IVP_U_Set_Active<IVP_Mindist_Base>
001dd314 d typeinfo for IVP_U_Set_Active<IVP_Core>
00180924 r typeinfo for CAlignedNewDelete<16, aligned_tmp_t>
0017bf94 r typeinfo for CBuoyancyAttacher
0017c194 r typeinfo for CFrictionSnapshot
0017d360 r typeinfo for CMaterialIndexOps
0017ec58 r typeinfo for collision_rules_t
0017a744 r typeinfo for CPhysicsCollision
00179fb0 r typeinfo for CPhysicsInterface
0017d580 r typeinfo for CPlayerController
0017d5c0 r typeinfo for CShadowController
0017ab0c r typeinfo for IPhysicsCollision
001dd69c d typeinfo for IVP_Event_Manager
001890ac r typeinfo for IVP_I_Point_VHash
001dd400 d typeinfo for IVP_Listener_Hull
00191d30 r typeinfo for IVP_Range_Manager
001dde40 d typeinfo for IVP_U_Active_Mult
001ddf00 d typeinfo for IVP_U_Active_Sine
0017d380 r typeinfo for CDefSaveRestoreOps
0017afe0 r typeinfo for CPhysicsConstraint
0017fc34 r typeinfo for CUtlCharConversion
0017e1c0 r typeinfo for CVehicleController
0017b148 r typeinfo for IPhysicsConstraint
001dcca0 d typeinfo for IVP_Actuator_Extra
001dcd80 d typeinfo for IVP_Actuator_Force
001dd72c d typeinfo for IVP_Anomaly_Limits
0017ec50 r typeinfo for IVPhysicsKeyParser
0018903c r typeinfo for IVP_I_FPoint_VHash
001dc8dc d typeinfo for IVP_Ray_Solver_Min
001dd938 d typeinfo for IVP_SurfaceManager
001dd6bc d typeinfo for IVP_Time_Event_PSI
001ddf6c d typeinfo for IVP_U_Active_Float
001dde20 d typeinfo for IVP_U_Active_Limit
001ddec0 d typeinfo for IVP_U_Active_Pulse
001ddf78 d typeinfo for IVP_U_Active_Value
0017c4b0 r typeinfo for CIVPMaterialManager
0017b618 r typeinfo for CPhysicsEnvironment
0017fc8c r typeinfo for CUtlNoEscConversion
001809a0 r typeinfo for hk_Fixed_Constraint
00180a0c r typeinfo for hk_Hinge_Constraint
0017bba8 r typeinfo for IPhysicsEnvironment
00191ab0 r typeinfo for IVP_3D_Solver_PK_KK
001dcee0 d typeinfo for IVP_Actuator_Spring
001dcd00 d typeinfo for IVP_Actuator_Torque
001dd724 d typeinfo for IVP_Anomaly_Manager
001dd684 d typeinfo for IVP_Event_Manager_D
001dd588 d typeinfo for IVP_Friction_System
0017ec90 r typeinfo for IVPhysicsKeyHandler
001dd59c d typeinfo for IVP_Listener_Object
001dceec d typeinfo for IVP_Listener_Spring
001dd850 d typeinfo for IVP_Material_Simple
001ddee0 d typeinfo for IVP_U_Active_Square
001dddc0 d typeinfo for IVP_U_Active_Switch
0017a3a0 r typeinfo for CAirboatFrictionData
0017f328 r typeinfo for ConVar_ServerBounded
0017a050 r typeinfo for CPhysicsCollisionSet
0017bbf0 r typeinfo for CPhysicsFrictionData
0017c4d4 r typeinfo for CPhysicsSurfaceProps
0017e6f8 r typeinfo for CTraceSolverAABBTree
00180b30 r typeinfo for hk_Pulley_Constraint
0017a048 r typeinfo for IPhysicsCollisionSet
0017c654 r typeinfo for IPhysicsSurfaceProps
00191af8 r typeinfo for IVP_3D_Solver_PF_NPF
00191a8c r typeinfo for IVP_3D_Solver_S_VALS
001dcd40 d typeinfo for IVP_Actuator_Rot_Mot
001dc878 d typeinfo for IVP_Collision_Filter
00191d88 r typeinfo for IVP_Constraint_Local
00191e50 r typeinfo for IVP_Controller_Golem
001dd478 d typeinfo for IVP_Controller_VHash
001dd268 d typeinfo for IVP_Listener_Phantom
001dd848 d typeinfo for IVP_Material_Manager
001dc900 d typeinfo for IVP_Ray_Hit_Listener
001dd49c d typeinfo for IVP_Real_Object_Fast
001dd580 d typeinfo for IVP_Universe_Manager
0017bbfc r typeinfo for CPhysicsCollisionData
0017fc54 r typeinfo for CUtlCStringConversion
0017bdac r typeinfo for CVPhysicsDebugOverlay
0017eb64 r typeinfo for CVPhysicsPackedParser
00180b90 r typeinfo for hk_Ragdoll_Constraint
0017a3fc r typeinfo for IPhysicsCollisionData
00191b1c r typeinfo for IVP_3D_Solver_KK_COLL
001919ec r typeinfo for IVP_3D_Solver_PF_COLL
00191ad4 r typeinfo for IVP_3D_Solver_PK_COLL
001ddda8 d typeinfo for IVP_Active_Value_Hash
001dccc0 d typeinfo for IVP_Anchor_Check_Dist
0017c09c r typeinfo for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00191e2c r typeinfo for IVP_Controller_Motion
0017befc r typeinfo for IVPhysicsDebugOverlay
00191780 r typeinfo for IVP_Mindist_Recursive
001924fc r typeinfo for CPolyhedron_AllocByNew
00192554 r typeinfo for CPolyhedron_TempMemory
0017bedc r typeinfo for IPhysicsCollisionEvent
0017bcd8 r typeinfo for IPhysicsObjectPairHash
001dcd98 d typeinfo for IVP_Actuator_Two_Point
001dd74c d typeinfo for IVP_BetterDebugmanager
001dd25c d typeinfo for IVP_Controller_Phantom
001dd594 d typeinfo for IVP_Listener_Collision
001dd8f0 d typeinfo for IVP_PerformanceCounter
0017bd1c r typeinfo for CEmptyCollisionListener
0017e3ac r typeinfo for CPhysCollideVirtualMesh
0017afb0 r typeinfo for CPhysicsConstraintGroup
0017bf74 r typeinfo for CPhysicsFluidController
0017ccdc r typeinfo for CPredictedPhysicsObject
00179e70 r typeinfo for CSplitScreenAddedConVar
0017e630 r typeinfo for CTraceSolverSweptObject
0017ecc8 r typeinfo for CVPhysPtrSaveRestoreOps
00180848 r typeinfo for hk_Breakable_Constraint
00180ac4 r typeinfo for hk_Prismatic_Constraint
001808fc r typeinfo for hk_Rigid_Body_Binary_EF
0017f454 r typeinfo for IConCommandBaseAccessor
0017b140 r typeinfo for IPhysicsConstraintGroup
0017c094 r typeinfo for IPhysicsFluidController
0017d300 r typeinfo for IPredictedPhysicsObject
001dcd8c d typeinfo for IVP_Actuator_Four_Point
001dcc90 d typeinfo for IVP_Actuator_Stabilizer
001dce9c d typeinfo for IVP_Actuator_Suspension
00191460 r typeinfo for IVP_Collision_Delegator
001dd0f8 d typeinfo for IVP_Controller_Buoyancy
001dd3d8 d typeinfo for IVP_Friction_Sys_Energy
001dd3cc d typeinfo for IVP_Friction_Sys_Static
001dd358 d typeinfo for IVP_Listener_Constraint
0017c0b4 r typeinfo for IVP_Listener_Set_Active<IVP_Core>
001dc8e8 d typeinfo for IVP_Ray_Solver_Min_Hash
00191f98 r typeinfo for IVP_SurfaceManager_Ball
001dde00 d typeinfo for IVP_U_Active_Test_Range
0017c0bc r typeinfo for CLiquidSurfaceDescriptor
0017c720 r typeinfo for CPhysicsMotionController
0017c244 r typeinfo for IPhysicsFrictionSnapshot
0017c8f0 r typeinfo for IPhysicsMotionController
0017d988 r typeinfo for IPhysicsPlayerController
0017d990 r typeinfo for IPhysicsShadowController
0017a38c r typeinfo for IVP_Controller_Dependent
001ddf88 d typeinfo for IVP_U_Active_Int_Delayed
0017b640 r typeinfo for CPhysicsListenerCollision
001807d8 r typeinfo for hk_Ball_Socket_Constraint
0017e2d0 r typeinfo for IPhysicsVehicleController
00191b44 r typeinfo for IVP_3D_Solver_KK_PARALLEL
001dcd60 d typeinfo for IVP_Actuator_Force_Active
001dd06c d typeinfo for IVP_Constraint_Solver_Car
001dc860 d typeinfo for IVP_Meta_Collision_Filter
001dde60 d typeinfo for IVP_U_Active_Add_Multiple
001ddf90 d typeinfo for IVP_U_Active_Int_Listener
001ddf20 d typeinfo for IVP_U_Active_Terminal_Int
0017a770 r typeinfo for CPhysCollideCompactSurface
0017bc4c r typeinfo for CPhysicsListenerConstraint
0017d600 r typeinfo for CPredictedPlayerController
001806fc r typeinfo for hk_Local_Constraint_System
00180c38 r typeinfo for hk_Stiff_Spring_Constraint
001dcec0 d typeinfo for IVP_Actuator_Spring_Active
001dcce0 d typeinfo for IVP_Actuator_Torque_Active
001dd028 d typeinfo for IVP_Car_System_Real_Wheels
0017a3ac r typeinfo for IVP_Controller_Independent
001dd200 d typeinfo for IVP_Controller_Raycast_Car
001dd690 d typeinfo for IVP_Event_Manager_Standard
001dd978 d typeinfo for IVP_SurfaceManager_Polygon
001ddf80 d typeinfo for IVP_U_Active_Float_Delayed
001ddfa0 d typeinfo for IVP_U_Active_Value_Manager
001dcd20 d typeinfo for IVP_Actuator_Rot_Mot_Active
001dd4a8 d typeinfo for IVP_Real_Object_Fast_Static
001ddf98 d typeinfo for IVP_U_Active_Float_Listener
0017c648 r typeinfo for IPhysicsSurfacePropsInternal
00191488 r typeinfo for IVP_Collision_Delegator_Root
001ddf40 d typeinfo for IVP_U_Active_Terminal_Double
001dd780 d typeinfo for IVP_Liquid_Surface_Descriptor
001dcccc d typeinfo for IVP_Listener_Check_Dist_Event
001dd8e4 d typeinfo for IVP_PerformanceCounter_Simple
001dd0ec d typeinfo for IVP_Attacher_To_Cores_Buoyancy
00192004 r typeinfo for IVP_Object_Callback_Table_Hash
0017e384 r typeinfo for IVP_SurfaceManager_VirtualMesh
00191a24 r typeinfo for IVP_3D_Solver_VEC_PARALLEL_AREA
001dd60c d typeinfo for IVP_Standard_Gravity_Controller
0017ed04 r typeinfo for CVPhysPtrUtlVectorSaveRestoreOps
0017c764 r typeinfo for CPredictedPhysicsMotionController
00191564 r typeinfo for IVP_Collision_Callback_Table_Hash
0017b1e8 r typeinfo for CPhysics_Car_System_Raycast_Wheels
0017bccc r typeinfo for IPredictable_Controller_Independant
001dc86c d typeinfo for IVP_Collision_Filter_Exclusive_Pair
00191a68 r typeinfo for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
001916a8 r typeinfo for IVP_Collision_Delegator_Root_Mindist
001dd774 d typeinfo for IVP_Liquid_Surface_Descriptor_Simple
0017bcc0 r typeinfo for CPredictable_Controller_Independant_Stub
0017f1a0 r typeinfo for ConVar
0017f3e0 r typeinfo for IConVar
0017facc r typeinfo for CFmtStrN<256, false>
0017c48c r typeinfo for CSurface
0017a104 r typeinfo for IPhysics
00191f3c r typeinfo for IVP_Ball
0017e5ec r typeinfo for CTraceIVP
001dd2d8 d typeinfo for IVP_U_Set<IVP_Real_Object>
001dd290 d typeinfo for IVP_U_Set<IVP_Mindist_Base>
001dd320 d typeinfo for IVP_U_Set<IVP_Core>
001ddfbc d typeinfo for IVP_VHash
001de06c V typeinfo for __cxxabiv1::__forced_unwind
001de074 V typeinfo for __cxxabiv1::__foreign_exception
001de0dc V typeinfo for __gnu_cxx::recursive_init_error
001de114 V typeinfo for __gnu_cxx::__concurrence_lock_error
001de134 V typeinfo for __gnu_cxx::__concurrence_unlock_error
001de060 d typeinfo for std::bad_exception
001de058 d typeinfo for std::exception
0017f17c r typeinfo name for ConCommand
0017e5f8 r typeinfo name for CTraceAABB
0017e75f r typeinfo name for CTraceCone
00192ab1 r typeinfo name for hk_Console
001807a0 r typeinfo name for hk_Link_EF
0017a124 r typeinfo name for IAppSystem
001907e5 r typeinfo name for IVP_Object
00192560 r typeinfo name for CPolyhedron
0017e76c r typeinfo name for IConvexInfo
001907d7 r typeinfo name for IVP_Cluster
00191740 r typeinfo name for IVP_Mindist
001908fb r typeinfo name for IVP_Polygon
0019163f r typeinfo name for IVP_Synapse
0017e4a0 r typeinfo name for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0017bde0 r typeinfo name for CDeleteProxy<IPhysicsConstraint>
0017f430 r typeinfo name for CEmptyConVar
0017ab44 r typeinfo name for CPhysCollide
0017e71f r typeinfo name for CTraceSolver
0017ab65 r typeinfo name for IPhysCollide
0017e710 r typeinfo name for ITraceObject
0019000c r typeinfo name for IVP_Actuator
00190b3d r typeinfo name for IVP_Material
001898af r typeinfo name for IVP_Triangle
00180974 r typeinfo name for aligned_tmp_t
0017bd6a r typeinfo name for CSleepObjects
0017beb1 r typeinfo name for CVoidPairHash
00180898 r typeinfo name for hk_Constraint
00192034 r typeinfo name for IVP_3D_Solver
0018fc00 r typeinfo name for IVP_CFEP_Hash
00191494 r typeinfo name for IVP_Collision
0017a0e8 r typeinfo name for CBaseAppSystem<IPhysics>
0017e72e r typeinfo name for CDefConvexInfo
0017f161 r typeinfo name for ConCommandBase
0017cca3 r typeinfo name for CPhysicsObject
0017da43 r typeinfo name for CPhysicsSpring
0017eb2c r typeinfo name for CVPhysicsParse
0017d34e r typeinfo name for IPhysicsObject
0017db70 r typeinfo name for IPhysicsSpring
0019012e r typeinfo name for IVP_Car_System
001923bc r typeinfo name for IVP_Constraint
0017a3d3 r typeinfo name for IVP_Controller
001916d4 r typeinfo name for IVP_OO_Watcher
001913bd r typeinfo name for IVP_OV_Element
0018906c r typeinfo name for IVP_point_hash
0018fd6f r typeinfo name for IVP_Ray_Solver
001916b4 r typeinfo name for IVP_Synapse_OO
00190a29 r typeinfo name for IVP_Time_Event
0017a77c r typeinfo name for CCollisionQuery
0017bd97 r typeinfo name for CDragController
0017be9f r typeinfo name for CObjectPairHash
0017a0be r typeinfo name for CTier0AppSystem<IPhysics>
0017a060 r typeinfo name for CTier1AppSystem<IPhysics, 0>
0017ab53 r typeinfo name for ICollisionQuery
0017d3ac r typeinfo name for ISaveRestoreOps
00190790 r typeinfo name for IVP_Real_Object
0017bd57 r typeinfo name for CCollisionSolver
0017f4a6 r typeinfo name for CDataManagerBase
0017f43f r typeinfo name for CDefaultAccessor
0017f5d7 r typeinfo name for CDllDemandLoader
0017a19b r typeinfo name for CPhysics_Airboat
0017bdb8 r typeinfo name for IDeleteQueueItem
0019165c r typeinfo name for IVP_Mindist_Base
00191400 r typeinfo name for IVP_ov_tree_hash
00191720 r typeinfo name for IVP_Synapse_Real
00190a01 r typeinfo name for IVP_Time_Event_D
001909ee r typeinfo name for IVP_Time_Event_N
00190ea5 r typeinfo name for IVP_U_Active_Add
00190f33 r typeinfo name for IVP_U_Active_Int
00190e92 r typeinfo name for IVP_U_Active_Sub
00190300 r typeinfo name for IVP_U_Set_Active<IVP_Real_Object>
001902a0 r typeinfo name for IVP_U_Set_Active<IVP_Mindist_Base>
00190344 r typeinfo name for IVP_U_Set_Active<IVP_Core>
00180940 r typeinfo name for CAlignedNewDelete<16, aligned_tmp_t>
0017bf80 r typeinfo name for CBuoyancyAttacher
0017c180 r typeinfo name for CFrictionSnapshot
0017d36c r typeinfo name for CMaterialIndexOps
0017ec79 r typeinfo name for collision_rules_t
0017a72d r typeinfo name for CPhysicsCollision
00179f9c r typeinfo name for CPhysicsInterface
0017d55e r typeinfo name for CPlayerController
0017d5a8 r typeinfo name for CShadowController
0017ab30 r typeinfo name for IPhysicsCollision
001909da r typeinfo name for IVP_Event_Manager
00189098 r typeinfo name for IVP_I_Point_VHash
0019064c r typeinfo name for IVP_Listener_Hull
00191d1c r typeinfo name for IVP_Range_Manager
00190e62 r typeinfo name for IVP_U_Active_Mult
00190ee3 r typeinfo name for IVP_U_Active_Sine
0017d38c r typeinfo name for CDefSaveRestoreOps
0017afbc r typeinfo name for CPhysicsConstraint
0017fc1e r typeinfo name for CUtlCharConversion
0017e1a2 r typeinfo name for CVehicleController
0017b16a r typeinfo name for IPhysicsConstraint
0018feee r typeinfo name for IVP_Actuator_Extra
0018ffc4 r typeinfo name for IVP_Actuator_Force
00190a50 r typeinfo name for IVP_Anomaly_Limits
0017ec64 r typeinfo name for IVPhysicsKeyParser
00189024 r typeinfo name for IVP_I_FPoint_VHash
0018fd40 r typeinfo name for IVP_Ray_Solver_Min
00190c20 r typeinfo name for IVP_SurfaceManager
00190a14 r typeinfo name for IVP_Time_Event_PSI
00190f46 r typeinfo name for IVP_U_Active_Float
00190e4d r typeinfo name for IVP_U_Active_Limit
00190eb8 r typeinfo name for IVP_U_Active_Pulse
00190f5b r typeinfo name for IVP_U_Active_Value
0017c498 r typeinfo name for CIVPMaterialManager
0017b5ff r typeinfo name for CPhysicsEnvironment
0017fc98 r typeinfo name for CUtlNoEscConversion
0018098a r typeinfo name for hk_Fixed_Constraint
001809f6 r typeinfo name for hk_Hinge_Constraint
0017bd04 r typeinfo name for IPhysicsEnvironment
00191a98 r typeinfo name for IVP_3D_Solver_PK_KK
001900e5 r typeinfo name for IVP_Actuator_Spring
0018ff5d r typeinfo name for IVP_Actuator_Torque
00190a3a r typeinfo name for IVP_Anomaly_Manager
001909a7 r typeinfo name for IVP_Event_Manager_D
001908b6 r typeinfo name for IVP_Friction_System
0017ec98 r typeinfo name for IVPhysicsKeyHandler
001908e5 r typeinfo name for IVP_Listener_Object
001900fb r typeinfo name for IVP_Listener_Spring
00190b27 r typeinfo name for IVP_Material_Simple
00190ecd r typeinfo name for IVP_U_Active_Square
00190e1d r typeinfo name for IVP_U_Active_Switch
0017a3e4 r typeinfo name for CAirboatFrictionData
0017f3f4 r typeinfo name for ConVar_ServerBounded
0017a0a7 r typeinfo name for CPhysicsCollisionSet
0017bd28 r typeinfo name for CPhysicsFrictionData
0017c4bc r typeinfo name for CPhysicsSurfaceProps
0017e748 r typeinfo name for CTraceSolverAABBTree
00180b17 r typeinfo name for hk_Pulley_Constraint
0017a090 r typeinfo name for IPhysicsCollisionSet
0017c67b r typeinfo name for IPhysicsSurfaceProps
00191ae0 r typeinfo name for IVP_3D_Solver_PF_NPF
00191a74 r typeinfo name for IVP_3D_Solver_S_VALS
0018ff91 r typeinfo name for IVP_Actuator_Rot_Mot
0018fc66 r typeinfo name for IVP_Collision_Filter
00191d70 r typeinfo name for IVP_Constraint_Local
00191e38 r typeinfo name for IVP_Controller_Golem
00190779 r typeinfo name for IVP_Controller_VHash
00190288 r typeinfo name for IVP_Listener_Phantom
00190b10 r typeinfo name for IVP_Material_Manager
0018fd80 r typeinfo name for IVP_Ray_Hit_Listener
001907a2 r typeinfo name for IVP_Real_Object_Fast
0019089f r typeinfo name for IVP_Universe_Manager
0017bd3f r typeinfo name for CPhysicsCollisionData
0017fc3c r typeinfo name for CUtlCStringConversion
0017bee4 r typeinfo name for CVPhysicsDebugOverlay
0017eb4c r typeinfo name for CVPhysicsPackedParser
00180b78 r typeinfo name for hk_Ragdoll_Constraint
0017a421 r typeinfo name for IPhysicsCollisionData
00191b04 r typeinfo name for IVP_3D_Solver_KK_COLL
001919d1 r typeinfo name for IVP_3D_Solver_PF_COLL
00191abc r typeinfo name for IVP_3D_Solver_PK_COLL
00190e05 r typeinfo name for IVP_Active_Value_Hash
0018ff03 r typeinfo name for IVP_Anchor_Check_Dist
0017c100 r typeinfo name for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00191e14 r typeinfo name for IVP_Controller_Motion
0017bf1d r typeinfo name for IVPhysicsDebugOverlay
0019175c r typeinfo name for IVP_Mindist_Recursive
001924e0 r typeinfo name for CPolyhedron_AllocByNew
0019256e r typeinfo name for CPolyhedron_TempMemory
0017bf04 r typeinfo name for IPhysicsCollisionEvent
0017be86 r typeinfo name for IPhysicsObjectPairHash
0018fff3 r typeinfo name for IVP_Actuator_Two_Point
00190a6c r typeinfo name for IVP_BetterDebugmanager
0019026f r typeinfo name for IVP_Controller_Phantom
001908cc r typeinfo name for IVP_Listener_Collision
00190c00 r typeinfo name for IVP_PerformanceCounter
0017bec1 r typeinfo name for CEmptyCollisionListener
0017e390 r typeinfo name for CPhysCollideVirtualMesh
0017af94 r typeinfo name for CPhysicsConstraintGroup
0017bf58 r typeinfo name for CPhysicsFluidController
0017ccc0 r typeinfo name for CPredictedPhysicsObject
00179e55 r typeinfo name for CSplitScreenAddedConVar
0017e614 r typeinfo name for CTraceSolverSweptObject
0017ecae r typeinfo name for CVPhysPtrSaveRestoreOps
0018082c r typeinfo name for hk_Breakable_Constraint
00180aaa r typeinfo name for hk_Prismatic_Constraint
00180908 r typeinfo name for hk_Rigid_Body_Binary_EF
0017f45c r typeinfo name for IConCommandBaseAccessor
0017b150 r typeinfo name for IPhysicsConstraintGroup
0017c0c8 r typeinfo name for IPhysicsFluidController
0017d334 r typeinfo name for IPredictedPhysicsObject
0018ffd9 r typeinfo name for IVP_Actuator_Four_Point
0018fed4 r typeinfo name for IVP_Actuator_Stabilizer
001900ae r typeinfo name for IVP_Actuator_Suspension
00191444 r typeinfo name for IVP_Collision_Delegator
00190221 r typeinfo name for IVP_Controller_Buoyancy
0019047b r typeinfo name for IVP_Friction_Sys_Energy
00190461 r typeinfo name for IVP_Friction_Sys_Static
0019039a r typeinfo name for IVP_Listener_Constraint
0017c140 r typeinfo name for IVP_Listener_Set_Active<IVP_Core>
0018fd55 r typeinfo name for IVP_Ray_Solver_Min_Hash
00191fa4 r typeinfo name for IVP_SurfaceManager_Ball
00190e33 r typeinfo name for IVP_U_Active_Test_Range
0017c165 r typeinfo name for CLiquidSurfaceDescriptor
0017c6f5 r typeinfo name for CPhysicsMotionController
0017c24c r typeinfo name for IPhysicsFrictionSnapshot
0017c8f8 r typeinfo name for IPhysicsMotionController
0017d998 r typeinfo name for IPhysicsPlayerController
0017d9b3 r typeinfo name for IPhysicsShadowController
0017a3b8 r typeinfo name for IVP_Controller_Dependent
00190f8d r typeinfo name for IVP_U_Active_Int_Delayed
0017b624 r typeinfo name for CPhysicsListenerCollision
001807b9 r typeinfo name for hk_Ball_Socket_Constraint
0017e2d8 r typeinfo name for IPhysicsVehicleController
00191b28 r typeinfo name for IVP_3D_Solver_KK_PARALLEL
0018ffa8 r typeinfo name for IVP_Actuator_Force_Active
00190193 r typeinfo name for IVP_Constraint_Solver_Car
0018fc10 r typeinfo name for IVP_Meta_Collision_Filter
00190e76 r typeinfo name for IVP_U_Active_Add_Multiple
00190fa8 r typeinfo name for IVP_U_Active_Int_Listener
00190ef7 r typeinfo name for IVP_U_Active_Terminal_Int
0017a750 r typeinfo name for CPhysCollideCompactSurface
0017bd7a r typeinfo name for CPhysicsListenerConstraint
0017d5e0 r typeinfo name for CPredictedPlayerController
001806df r typeinfo name for hk_Local_Constraint_System
00180c19 r typeinfo name for hk_Stiff_Spring_Constraint
001900c8 r typeinfo name for IVP_Actuator_Spring_Active
0018ff40 r typeinfo name for IVP_Actuator_Torque_Active
00190111 r typeinfo name for IVP_Car_System_Real_Wheels
0017a404 r typeinfo name for IVP_Controller_Independent
0019023b r typeinfo name for IVP_Controller_Raycast_Car
001909bd r typeinfo name for IVP_Event_Manager_Standard
00190c35 r typeinfo name for IVP_SurfaceManager_Polygon
00190f70 r typeinfo name for IVP_U_Active_Float_Delayed
00190fe2 r typeinfo name for IVP_U_Active_Value_Manager
0018ff73 r typeinfo name for IVP_Actuator_Rot_Mot_Active
001907b9 r typeinfo name for IVP_Real_Object_Fast_Static
00190fc4 r typeinfo name for IVP_U_Active_Float_Listener
0017c65c r typeinfo name for IPhysicsSurfacePropsInternal
00191468 r typeinfo name for IVP_Collision_Delegator_Root
00190f14 r typeinfo name for IVP_U_Active_Terminal_Double
00190ae0 r typeinfo name for IVP_Liquid_Surface_Descriptor
0018ff20 r typeinfo name for IVP_Listener_Check_Dist_Event
00190be0 r typeinfo name for IVP_PerformanceCounter_Simple
00190200 r typeinfo name for IVP_Attacher_To_Cores_Buoyancy
00191fe0 r typeinfo name for IVP_Object_Callback_Table_Hash
0017e360 r typeinfo name for IVP_SurfaceManager_VirtualMesh
00191a00 r typeinfo name for IVP_3D_Solver_VEC_PARALLEL_AREA
00190920 r typeinfo name for IVP_Standard_Gravity_Controller
0017ece0 r typeinfo name for CVPhysPtrUtlVectorSaveRestoreOps
0017c740 r typeinfo name for CPredictedPhysicsMotionController
00191540 r typeinfo name for IVP_Collision_Callback_Table_Hash
0017b1c0 r typeinfo name for CPhysics_Car_System_Raycast_Wheels
0017be60 r typeinfo name for IPredictable_Controller_Independant
0018fc40 r typeinfo name for IVP_Collision_Filter_Exclusive_Pair
00191a40 r typeinfo name for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00191680 r typeinfo name for IVP_Collision_Delegator_Root_Mindist
00190aa0 r typeinfo name for IVP_Liquid_Surface_Descriptor_Simple
0017be20 r typeinfo name for CPredictable_Controller_Independant_Stub
0017f198 r typeinfo name for ConVar
0017f418 r typeinfo name for IConVar
0017fad4 r typeinfo name for CFmtStrN<256, false>
0017c482 r typeinfo name for CSurface
0017a110 r typeinfo name for IPhysics
00191f31 r typeinfo name for IVP_Ball
0017e5df r typeinfo name for CTraceIVP
00190326 r typeinfo name for IVP_U_Set<IVP_Real_Object>
001902c8 r typeinfo name for IVP_U_Set<IVP_Mindist_Base>
00190362 r typeinfo name for IVP_U_Set<IVP_Core>
00191309 r typeinfo name for IVP_VHash
00192b60 V typeinfo name for __cxxabiv1::__forced_unwind
00192b80 V typeinfo name for __cxxabiv1::__foreign_exception
00192ba4 V typeinfo name for __gnu_cxx::recursive_init_error
00192c14 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00192c3c V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00192b4c r typeinfo name for std::bad_exception
00192b3c r typeinfo name for std::exception
0017f200 r vtable for ConCommand
0017e658 r vtable for CTraceAABB
0017e6c8 r vtable for CTraceCone
00192ac8 r vtable for hk_Console
00180760 r vtable for hk_Link_EF
001dd468 d vtable for IVP_Object
00192520 r vtable for CPolyhedron
001dd458 d vtable for IVP_Cluster
001918c0 r vtable for IVP_Mindist
001dd5a8 d vtable for IVP_Polygon
001917a0 r vtable for IVP_Synapse
0017e460 r vtable for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0017ba80 r vtable for CDeleteProxy<IPhysicsConstraint>
0017f340 r vtable for CEmptyConVar
0017aac0 r vtable for CPhysCollide
0017e698 r vtable for CTraceSolver
0017aa80 r vtable for IPhysCollide
0017e680 r vtable for ITraceObject
001dcc60 d vtable for IVP_Actuator
001dd820 d vtable for IVP_Material
001898c8 r vtable for IVP_Triangle
0017ba00 r vtable for CSleepObjects
0017bb90 r vtable for CVoidPairHash
001808c0 r vtable for hk_Constraint
001ddfc8 d vtable for IVP_3D_Solver
001dc818 d vtable for IVP_CFEP_Hash
00191520 r vtable for IVP_Collision
0017e6a8 r vtable for CDefConvexInfo
0017f1c0 r vtable for ConCommandBase
0017cd00 r vtable for CPhysicsObject
0017da80 r vtable for CPhysicsSpring
0017eb80 r vtable for CVPhysicsParse
0017d000 r vtable for IPhysicsObject
0017db40 r vtable for IPhysicsSpring
001dcfa0 d vtable for IVP_Car_System
001ddfe0 d vtable for IVP_Constraint
0017a2c0 r vtable for IVP_Controller
00191840 r vtable for IVP_OO_Watcher
001913e0 r vtable for IVP_OV_Element
001890c8 r vtable for IVP_point_hash
001dc8b0 d vtable for IVP_Ray_Solver
00191820 r vtable for IVP_Synapse_OO
001dd678 d vtable for IVP_Time_Event
0017a900 r vtable for CCollisionQuery
0017ba40 r vtable for CDragController
0017bb60 r vtable for CObjectPairHash
0017aa40 r vtable for ICollisionQuery
0017edd0 r vtable for ISaveRestoreOps
001dd420 d vtable for IVP_Real_Object
0017b9a0 r vtable for CCollisionSolver
0017f4e0 r vtable for CDataManagerBase
0017f3e8 r vtable for CDefaultAccessor
0017f5f8 r vtable for CDllDemandLoader
0017a1e0 r vtable for CPhysics_Airboat
0017ba70 r vtable for IDeleteQueueItem
001917c0 r vtable for IVP_Mindist_Base
00191430 r vtable for IVP_ov_tree_hash
00191880 r vtable for IVP_Synapse_Real
001dd658 d vtable for IVP_Time_Event_D
001dd648 d vtable for IVP_Time_Event_N
001ddb40 d vtable for IVP_U_Active_Add
001ddcb0 d vtable for IVP_U_Active_Int
001ddb00 d vtable for IVP_U_Active_Sub
001dd2b8 d vtable for IVP_U_Set_Active<IVP_Real_Object>
001dd270 d vtable for IVP_U_Set_Active<IVP_Mindist_Base>
001dd300 d vtable for IVP_U_Set_Active<IVP_Core>
0017bfe0 r vtable for CBuoyancyAttacher
0017c1a0 r vtable for CFrictionSnapshot
0017d318 r vtable for CMaterialIndexOps
0017ec40 r vtable for collision_rules_t
0017a800 r vtable for CPhysicsCollision
00179fc0 r vtable for CPhysicsInterface
0017d620 r vtable for CPlayerController
0017d820 r vtable for CShadowController
0017a940 r vtable for IPhysicsCollision
001dd638 d vtable for IVP_Event_Manager
001890e0 r vtable for IVP_I_Point_VHash
001dd3e8 d vtable for IVP_Listener_Hull
00191d38 r vtable for IVP_Range_Manager
001dda80 d vtable for IVP_U_Active_Mult
001ddc00 d vtable for IVP_U_Active_Sine
0017edf0 r vtable for CDefSaveRestoreOps
0017b040 r vtable for CPhysicsConstraint
0017fc70 r vtable for CUtlCharConversion
0017e1e0 r vtable for CVehicleController
0017b100 r vtable for IPhysicsConstraint
001dc960 d vtable for IVP_Actuator_Extra
001dcba0 d vtable for IVP_Actuator_Force
001dd710 d vtable for IVP_Anomaly_Limits
0017ec00 r vtable for IVPhysicsKeyParser
00189058 r vtable for IVP_I_FPoint_VHash
001dc880 d vtable for IVP_Ray_Solver_Min
001dd900 d vtable for IVP_SurfaceManager
001dd668 d vtable for IVP_Time_Event_PSI
001ddcc8 d vtable for IVP_U_Active_Float
001dda40 d vtable for IVP_U_Active_Limit
001ddb80 d vtable for IVP_U_Active_Pulse
001ddce0 d vtable for IVP_U_Active_Value
0017c580 r vtable for CIVPMaterialManager
0017b6c0 r vtable for CPhysicsEnvironment
0017fc80 r vtable for CUtlNoEscConversion
001809c0 r vtable for hk_Fixed_Constraint
00180a20 r vtable for hk_Hinge_Constraint
0017b840 r vtable for IPhysicsEnvironment
00191b90 r vtable for IVP_3D_Solver_PK_KK
001dce60 d vtable for IVP_Actuator_Spring
001dca60 d vtable for IVP_Actuator_Torque
001dd6e0 d vtable for IVP_Anomaly_Manager
001dd618 d vtable for IVP_Event_Manager_D
001dd4e0 d vtable for IVP_Friction_System
001dd560 d vtable for IVP_Listener_Object
001dce90 d vtable for IVP_Listener_Spring
001dd7e0 d vtable for IVP_Material_Simple
001ddbc0 d vtable for IVP_U_Active_Square
001dd9a0 d vtable for IVP_U_Active_Switch
0017a330 r vtable for CAirboatFrictionData
0017a028 r vtable for CPhysicsCollisionSet
0017b810 r vtable for CPhysicsFrictionData
0017c520 r vtable for CPhysicsSurfaceProps
0017e6b8 r vtable for CTraceSolverAABBTree
00180b40 r vtable for hk_Pulley_Constraint
0017a010 r vtable for IPhysicsCollisionSet
0017c5c0 r vtable for IPhysicsSurfaceProps
00191bb0 r vtable for IVP_3D_Solver_PF_NPF
00191b80 r vtable for IVP_3D_Solver_S_VALS
001dcb00 d vtable for IVP_Actuator_Rot_Mot
001dc830 d vtable for IVP_Collision_Filter
00191da0 r vtable for IVP_Constraint_Local
00191ea0 r vtable for IVP_Controller_Golem
001dd408 d vtable for IVP_Controller_VHash
001dd240 d vtable for IVP_Listener_Phantom
001dd7a0 d vtable for IVP_Material_Manager
001dc8c8 d vtable for IVP_Ray_Hit_Listener
001dd438 d vtable for IVP_Real_Object_Fast
001dd4c8 d vtable for IVP_Universe_Manager
0017b828 r vtable for CPhysicsCollisionData
0017fc60 r vtable for CUtlCStringConversion
0017bc80 r vtable for CVPhysicsDebugOverlay
0017ebc0 r vtable for CVPhysicsPackedParser
00180ba0 r vtable for hk_Ragdoll_Constraint
00191bc0 r vtable for IVP_3D_Solver_KK_COLL
00191b50 r vtable for IVP_3D_Solver_PF_COLL
00191ba0 r vtable for IVP_3D_Solver_PK_COLL
001dd988 d vtable for IVP_Active_Value_Hash
001dc9c0 d vtable for IVP_Anchor_Check_Dist
0017c048 r vtable for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00191e60 r vtable for IVP_Controller_Motion
00191900 r vtable for IVP_Mindist_Recursive
00192508 r vtable for CPolyhedron_AllocByNew
00192538 r vtable for CPolyhedron_TempMemory
0017bb20 r vtable for IPhysicsObjectPairHash
001dcc20 d vtable for IVP_Actuator_Two_Point
001dd738 d vtable for IVP_BetterDebugmanager
001dd220 d vtable for IVP_Controller_Phantom
001dd520 d vtable for IVP_Listener_Collision
001dd8c0 d vtable for IVP_PerformanceCounter
0017bbc0 r vtable for CEmptyCollisionListener
0017e3c0 r vtable for CPhysCollideVirtualMesh
0017b000 r vtable for CPhysicsConstraintGroup
0017bfa0 r vtable for CPhysicsFluidController
0017ce80 r vtable for CPredictedPhysicsObject
00179e80 r vtable for CSplitScreenAddedConVar
0017e670 r vtable for CTraceSolverSweptObject
0017ed10 r vtable for CVPhysPtrSaveRestoreOps
00180860 r vtable for hk_Breakable_Constraint
00180ae0 r vtable for hk_Prismatic_Constraint
001808f0 r vtable for hk_Rigid_Body_Binary_EF
0017b0c0 r vtable for IPhysicsConstraintGroup
0017c020 r vtable for IPhysicsFluidController
0017d180 r vtable for IPredictedPhysicsObject
001dcbe0 d vtable for IVP_Actuator_Four_Point
001dc920 d vtable for IVP_Actuator_Stabilizer
001dcdc0 d vtable for IVP_Actuator_Suspension
001914b0 r vtable for IVP_Collision_Delegator
001dd0c0 d vtable for IVP_Controller_Buoyancy
001dd3a0 d vtable for IVP_Friction_Sys_Energy
001dd360 d vtable for IVP_Friction_Sys_Static
001dd348 d vtable for IVP_Listener_Constraint
0017c068 r vtable for IVP_Listener_Set_Active<IVP_Core>
001dc898 d vtable for IVP_Ray_Solver_Min_Hash
00191f60 r vtable for IVP_SurfaceManager_Ball
001dda00 d vtable for IVP_U_Active_Test_Range
0017c088 r vtable for CLiquidSurfaceDescriptor
0017c780 r vtable for CPhysicsMotionController
0017c200 r vtable for IPhysicsFrictionSnapshot
0017c8c0 r vtable for IPhysicsMotionController
0017d8e0 r vtable for IPhysicsPlayerController
0017d940 r vtable for IPhysicsShadowController
0017a300 r vtable for IVP_Controller_Dependent
001ddd08 d vtable for IVP_U_Active_Int_Delayed
0017b660 r vtable for CPhysicsListenerCollision
00180800 r vtable for hk_Ball_Socket_Constraint
0017e280 r vtable for IPhysicsVehicleController
00191bd0 r vtable for IVP_3D_Solver_KK_PARALLEL
001dcb40 d vtable for IVP_Actuator_Force_Active
001dd040 d vtable for IVP_Constraint_Solver_Car
001dc7e8 d vtable for IVP_Meta_Collision_Filter
001ddac0 d vtable for IVP_U_Active_Add_Multiple
001ddd20 d vtable for IVP_U_Active_Int_Listener
001ddc40 d vtable for IVP_U_Active_Terminal_Int
0017a7a0 r vtable for CPhysCollideCompactSurface
0017ba20 r vtable for CPhysicsListenerConstraint
0017d720 r vtable for CPredictedPlayerController
00180720 r vtable for hk_Local_Constraint_System
00180c60 r vtable for hk_Stiff_Spring_Constraint
001dce00 d vtable for IVP_Actuator_Spring_Active
001dca00 d vtable for IVP_Actuator_Torque_Active
001dcf00 d vtable for IVP_Car_System_Real_Wheels
0017a360 r vtable for IVP_Controller_Independent
001dd120 d vtable for IVP_Controller_Raycast_Car
001dd628 d vtable for IVP_Event_Manager_Standard
001dd940 d vtable for IVP_SurfaceManager_Polygon
001ddcf0 d vtable for IVP_U_Active_Float_Delayed
001ddd60 d vtable for IVP_U_Active_Value_Manager
001dcaa0 d vtable for IVP_Actuator_Rot_Mot_Active
001dd448 d vtable for IVP_Real_Object_Fast_Static
001ddd38 d vtable for IVP_U_Active_Float_Listener
0017c600 r vtable for IPhysicsSurfacePropsInternal
001914e0 r vtable for IVP_Collision_Delegator_Root
001ddc80 d vtable for IVP_U_Active_Terminal_Double
001dd768 d vtable for IVP_Liquid_Surface_Descriptor
001dc9e0 d vtable for IVP_Listener_Check_Dist_Event
001dd880 d vtable for IVP_PerformanceCounter_Simple
001dd080 d vtable for IVP_Attacher_To_Cores_Buoyancy
00192020 r vtable for IVP_Object_Callback_Table_Hash
0017e420 r vtable for IVP_SurfaceManager_VirtualMesh
00191b60 r vtable for IVP_3D_Solver_VEC_PARALLEL_AREA
001dd5e0 d vtable for IVP_Standard_Gravity_Controller
0017ed30 r vtable for CVPhysPtrUtlVectorSaveRestoreOps
0017c820 r vtable for CPredictedPhysicsMotionController
00191580 r vtable for IVP_Collision_Callback_Table_Hash
0017b200 r vtable for CPhysics_Car_System_Raycast_Wheels
0017bae0 r vtable for IPredictable_Controller_Independant
001dc800 d vtable for IVP_Collision_Filter_Exclusive_Pair
00191b70 r vtable for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
001917e0 r vtable for IVP_Collision_Delegator_Root_Mindist
001dd758 d vtable for IVP_Liquid_Surface_Descriptor_Simple
0017baa0 r vtable for CPredictable_Controller_Independant_Stub
0017f260 r vtable for ConVar
0017f300 r vtable for IConVar
0017fac0 r vtable for CFmtStrN<256, false>
0017c4e0 r vtable for CSurface
00191f48 r vtable for IVP_Ball
0017e640 r vtable for CTraceIVP
001dd2e8 d vtable for IVP_U_Set<IVP_Real_Object>
001dd2a0 d vtable for IVP_U_Set<IVP_Mindist_Base>
001dd330 d vtable for IVP_U_Set<IVP_Core>
001ddfa8 d vtable for IVP_VHash
001de0b0 V vtable for __cxxabiv1::__forced_unwind
         U vtable for __cxxabiv1::__class_type_info
001de0c8 V vtable for __cxxabiv1::__foreign_exception
         U vtable for __cxxabiv1::__si_class_type_info
         U vtable for __cxxabiv1::__vmi_class_type_info
001de0e8 V vtable for __gnu_cxx::recursive_init_error
001de100 V vtable for __gnu_cxx::__concurrence_lock_error
001de120 V vtable for __gnu_cxx::__concurrence_unlock_error
001de098 d vtable for std::bad_exception
001de080 d vtable for std::exception
001e4820 b datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001e2400 d datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::dataDesc
001e3cb0 b datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001de480 d datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::dataDesc
001e47a8 b datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001e17c0 d datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::dataDesc
001e4728 b datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001e1140 d datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::dataDesc
001e4750 b datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001e1380 d datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001e3cd8 b datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001de580 d datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::dataDesc
001e47f8 b datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001e1f00 d datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::dataDesc
001e47d0 b datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001e1a00 d datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::dataDesc
001e46f8 b datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001e0e40 d datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001e4780 b datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001e1640 d datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::dataDesc
001e4540 b datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001df840 d datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::dataDesc
001e4650 b datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001e05e0 d datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::dataDesc
001e3e20 b datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001dece0 d datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::dataDesc
001e3e48 b datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001deda0 d datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::dataDesc
001e3ec0 b datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001df2a0 d datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::dataDesc
001e3e98 b datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001df0e0 d datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::dataDesc
001e44e0 b datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001df760 d datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::dataDesc
001e3f10 b datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001df4a0 d datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::dataDesc
001e3e70 b datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001deee0 d datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::dataDesc
001e45e0 b datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001e0280 d datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001e3da8 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001de8e0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::dataDesc
001e46d0 b datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001e0980 d datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::dataDesc
001e3df8 b datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001deba0 d datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::dataDesc
001e3dd0 b datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001dea20 d datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::dataDesc
001e45b8 b datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001e0040 d datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::dataDesc
001e3ee8 b datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001df3e0 d datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::dataDesc
001e3d80 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001de7a0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::dataDesc
001e2bd0 d qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)::firstcall
001e4f60 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::s_BreakSetIncludingColons
001e4f40 b V_ParseToken(char const*, char*, int, bool*, characterset_t*)::built
001e4d20 b V_pretifymem(float, int, bool)::output
001e4d00 b V_pretifymem(float, int, bool)::current
001e4e40 b V_pretifynum(long long)::output
001e4e20 b V_pretifynum(long long)::current
0017faac r V_LogMultiline(bool, char const*, char const*, unsigned int, CUtlString&)::HEX
001ea720 b p_read_first_token(_IO_FILE*)::buffer
001eb488 b Bias(float, float)::lastExponent
001fa340 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001e38a0 b InitializeCharacterSets()::s_CharacterSetInitialized
001e6404 b CUtlSymbol::Initialize()::symbolsInitialized
00000004 b (anonymous namespace)::get_global()::global
00191234 r IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001e3414 d IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001e3400 d IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)::pm
001e3428 d IVP_U_Min_Hash::add(void*, float)::sort_counter
001e4ccc b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
001e3d00 b CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)::developerRef
0017ed60 r CPhysicsEnvironment::Save(physsaveparams_t const&)::saveFuncs
0017eda0 r CPhysicsEnvironment::Restore(physrestoreparams_t const&)::restoreFuncs
001ea5c0 b IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001e2bb8 d IVV_Cluster_Min_Hash::add(void*, float)::sort_counter
001e2a29 d SplitScreenConVarRef::Init(char const*, bool)::bFirst
0018fd00 r IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)::C.691
001ea570 b IVP_BetterStatisticsmanager::set_simulation_time(float)::time_of_last_update
001eaf14 b CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
001e5074 b CFmtStrN<256, false>::CFmtStrN(char const*, ...)::scAsserted
001e2a28 d ConVarRef::Init(char const*, bool)::bFirst
001fed80 b __gnu_cxx::__verbose_terminate_handler()::terminating
001e6800 b hk_Memory::get_instance()::s_memory_instance
0017d2f4 r CPhysicsObject::OutputDebugInfo() const::pAxisNames
